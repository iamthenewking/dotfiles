import{p as parser,d as db,s as styles}from"./styles-68f7452d.js";import{l as log,c as getConfig,j as d3select,z as utils,t as setupGraphViewbox,r as interpolateToCurve,o as curveLinear,p as getStylesFromArray,f as common}from"./mermaid-766fee4c.js";import{G as Graph}from"./layout-cc6d5710.js";import{r as render}from"./index-4ba10627.js";import"./edges-df708b89.js";import"./createText-2c3b104b.js";import"./svgDraw-f57324fe.js";import"./line-cdadca5f.js";import"./array-b7dcf730.js";import"./constant-b644328d.js";const sanitizeText=e=>common.sanitizeText(e,getConfig());let conf={dividerMargin:10,padding:5,textHeight:10,curve:void 0};const addNamespaces=function(e,t,o,a){const l=Object.keys(e);log.info("keys:",l),log.info(e),l.forEach((function(l){var n,s;const i=e[l],r={shape:"rect",id:i.id,domId:i.domId,labelText:sanitizeText(i.id),labelStyle:"",style:"fill: none; stroke: black",padding:(null==(n=getConfig().flowchart)?void 0:n.padding)??(null==(s=getConfig().class)?void 0:s.padding)};t.setNode(i.id,r),addClasses(i.classes,t,o,a,i.id),log.info("setNode",r)}))},addClasses=function(e,t,o,a,l){const n=Object.keys(e);log.info("keys:",n),log.info(e),n.filter((t=>e[t].parent==l)).forEach((function(o){var n,s;const i=e[o],r=i.cssClasses.join(" "),d=i.label??i.id,c={labelStyle:"",shape:"class_box",labelText:sanitizeText(d),classData:i,rx:0,ry:0,class:r,style:"",id:i.id,domId:i.domId,tooltip:a.db.getTooltip(i.id,l)||"",haveCallback:i.haveCallback,link:i.link,width:"group"===i.type?500:void 0,type:i.type,padding:(null==(n=getConfig().flowchart)?void 0:n.padding)??(null==(s=getConfig().class)?void 0:s.padding)};t.setNode(i.id,c),l&&t.setParent(i.id,l),log.info("setNode",c)}))},addNotes=function(e,t,o,a){log.info(e),e.forEach((function(e,l){var n,s;const i=e,r=i.text,d={labelStyle:"",shape:"note",labelText:sanitizeText(r),noteData:i,rx:0,ry:0,class:"",style:"",id:i.id,domId:i.id,tooltip:"",type:"note",padding:(null==(n=getConfig().flowchart)?void 0:n.padding)??(null==(s=getConfig().class)?void 0:s.padding)};if(t.setNode(i.id,d),log.info("setNode",d),!i.class||!(i.class in a))return;const c=o+l,g={id:`edgeNote${c}`,classes:"relation",pattern:"dotted",arrowhead:"none",startLabelRight:"",endLabelLeft:"",arrowTypeStart:"none",arrowTypeEnd:"none",style:"fill:none",labelStyle:"",curve:interpolateToCurve(conf.curve,curveLinear)};t.setEdge(i.id,i.class,g,c)}))},addRelations=function(e,t){const o=getConfig().flowchart;let a=0;e.forEach((function(e){var l;a++;const n={classes:"relation",pattern:1==e.relation.lineType?"dashed":"solid",id:"id"+a,arrowhead:"arrow_open"===e.type?"none":"normal",startLabelRight:"none"===e.relationTitle1?"":e.relationTitle1,endLabelLeft:"none"===e.relationTitle2?"":e.relationTitle2,arrowTypeStart:getArrowMarker(e.relation.type1),arrowTypeEnd:getArrowMarker(e.relation.type2),style:"fill:none",labelStyle:"",curve:interpolateToCurve(null==o?void 0:o.curve,curveLinear)};if(log.info(n,e),void 0!==e.style){const t=getStylesFromArray(e.style);n.style=t.style,n.labelStyle=t.labelStyle}e.text=e.title,void 0===e.text?void 0!==e.style&&(n.arrowheadStyle="fill: #333"):(n.arrowheadStyle="fill: #333",n.labelpos="c",(null==(l=getConfig().flowchart)?void 0:l.htmlLabels)??getConfig().htmlLabels?(n.labelType="html",n.label='<span class="edgeLabel">'+e.text+"</span>"):(n.labelType="text",n.label=e.text.replace(common.lineBreakRegex,"\n"),void 0===e.style&&(n.style=n.style||"stroke: #333; stroke-width: 1.5px;fill:none"),n.labelStyle=n.labelStyle.replace("color:","fill:"))),t.setEdge(e.id1,e.id2,n,a)}))},setConf=function(e){conf={...conf,...e}},draw=async function(e,t,o,a){log.info("Drawing class - ",t);const l=getConfig().flowchart??getConfig().class,n=getConfig().securityLevel;log.info("config:",l);const s=(null==l?void 0:l.nodeSpacing)??50,i=(null==l?void 0:l.rankSpacing)??50,r=new Graph({multigraph:!0,compound:!0}).setGraph({rankdir:a.db.getDirection(),nodesep:s,ranksep:i,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}})),d=a.db.getNamespaces(),c=a.db.getClasses(),g=a.db.getRelations(),f=a.db.getNotes();let p;log.info(g),addNamespaces(d,r,t,a),addClasses(c,r,t,a),addRelations(g,r),addNotes(f,r,g.length+1,c),"sandbox"===n&&(p=d3select("#i"+t));const b=d3select("sandbox"===n?p.nodes()[0].contentDocument.body:"body"),y=b.select(`[id="${t}"]`),u=b.select("#"+t+" g");if(await render(u,r,["aggregation","extension","composition","dependency","lollipop"],"classDiagram",t),utils.insertTitle(y,"classTitleText",(null==l?void 0:l.titleTopMargin)??5,a.db.getDiagramTitle()),setupGraphViewbox(r,y,null==l?void 0:l.diagramPadding,null==l?void 0:l.useMaxWidth),!(null==l?void 0:l.htmlLabels)){const e="sandbox"===n?p.nodes()[0].contentDocument:document,o=e.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const t of o){const o=t.getBBox(),a=e.createElementNS("http://www.w3.org/2000/svg","rect");a.setAttribute("rx",0),a.setAttribute("ry",0),a.setAttribute("width",o.width),a.setAttribute("height",o.height),t.insertBefore(a,t.firstChild)}}};function getArrowMarker(e){let t;switch(e){case 0:t="aggregation";break;case 1:t="extension";break;case 2:t="composition";break;case 3:t="dependency";break;case 4:t="lollipop";break;default:t="none"}return t}const renderer={setConf,draw},diagram={parser,db,renderer,styles,init:e=>{e.class||(e.class={}),e.class.arrowMarkerAbsolute=e.arrowMarkerAbsolute,db.clear()}};export{diagram};