import{l as log,q as evaluate,c as getConfig,aw as decodeEntities,j as d3select,d as sanitizeText,z as utils,F as curveBasis}from"./mermaid-766fee4c.js";import{c as createText}from"./createText-2c3b104b.js";import{p as parseMember}from"./svgDraw-f57324fe.js";import{l as line}from"./line-cdadca5f.js";const insertMarkers=(t,e,a,r)=>{e.forEach((e=>{markers[e](t,a,r)}))},extension=(t,e,a)=>{log.trace("Making markers for ",a),t.append("defs").append("marker").attr("id",e+"-extensionStart").attr("class","marker extension "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 1,7 L18,13 V 1 Z"),t.append("defs").append("marker").attr("id",e+"-extensionEnd").attr("class","marker extension "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 1,1 V 13 L18,7 Z")},composition=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-compositionStart").attr("class","marker composition "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-compositionEnd").attr("class","marker composition "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},aggregation=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-aggregationStart").attr("class","marker aggregation "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-aggregationEnd").attr("class","marker aggregation "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L1,7 L9,1 Z")},dependency=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-dependencyStart").attr("class","marker dependency "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("path").attr("d","M 5,7 L9,13 L1,7 L9,1 Z"),t.append("defs").append("marker").attr("id",e+"-dependencyEnd").attr("class","marker dependency "+e).attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",28).attr("orient","auto").append("path").attr("d","M 18,7 L9,13 L14,7 L9,1 Z")},lollipop=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-lollipopStart").attr("class","marker lollipop "+e).attr("refX",0).attr("refY",7).attr("markerWidth",190).attr("markerHeight",240).attr("orient","auto").append("circle").attr("stroke","black").attr("fill","white").attr("cx",6).attr("cy",7).attr("r",6)},point=(t,e)=>{t.append("marker").attr("id",e+"-pointEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",10).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-pointStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",0).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",12).attr("markerHeight",12).attr("orient","auto").append("path").attr("d","M 0 5 L 10 10 L 10 0 z").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},circle$1=(t,e)=>{t.append("marker").attr("id",e+"-circleEnd").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",11).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-circleStart").attr("class","marker "+e).attr("viewBox","0 0 10 10").attr("refX",-1).attr("refY",5).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("circle").attr("cx","5").attr("cy","5").attr("r","5").attr("class","arrowMarkerPath").style("stroke-width",1).style("stroke-dasharray","1,0")},cross=(t,e)=>{t.append("marker").attr("id",e+"-crossEnd").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",12).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0"),t.append("marker").attr("id",e+"-crossStart").attr("class","marker cross "+e).attr("viewBox","0 0 11 11").attr("refX",-1).attr("refY",5.2).attr("markerUnits","userSpaceOnUse").attr("markerWidth",11).attr("markerHeight",11).attr("orient","auto").append("path").attr("d","M 1,1 l 9,9 M 10,1 l -9,9").attr("class","arrowMarkerPath").style("stroke-width",2).style("stroke-dasharray","1,0")},barb=(t,e)=>{t.append("defs").append("marker").attr("id",e+"-barbEnd").attr("refX",19).attr("refY",7).attr("markerWidth",20).attr("markerHeight",14).attr("markerUnits","strokeWidth").attr("orient","auto").append("path").attr("d","M 19,7 L9,13 L14,7 L9,1 Z")},markers={extension,composition,aggregation,dependency,lollipop,point,circle:circle$1,cross,barb},insertMarkers$1=insertMarkers;function applyStyle(t,e){e&&t.attr("style",e)}function addHtmlLabel(t){const e=d3select(document.createElementNS("http://www.w3.org/2000/svg","foreignObject")),a=e.append("xhtml:div"),r=t.label,n=t.isNode?"nodeLabel":"edgeLabel";return a.html('<span class="'+n+'" '+(t.labelStyle?'style="'+t.labelStyle+'"':"")+">"+r+"</span>"),applyStyle(a,t.labelStyle),a.style("display","inline-block"),a.style("white-space","nowrap"),a.attr("xmlns","http://www.w3.org/1999/xhtml"),e.node()}const createLabel=(t,e,a,r)=>{let n=t||"";if("object"==typeof n&&(n=n[0]),evaluate(getConfig().flowchart.htmlLabels))return n=n.replace(/\\n|\n/g,"<br />"),log.info("vertexText"+n),addHtmlLabel({isNode:r,label:decodeEntities(n).replace(/fa[blrs]?:fa-[\w-]+/g,(t=>`<i class='${t.replace(":"," ")}'></i>`)),labelStyle:e.replace("fill:","color:")});{const t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("style",e.replace("color:","fill:"));let r=[];r="string"==typeof n?n.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(n)?n:[];for(const e of r){const r=document.createElementNS("http://www.w3.org/2000/svg","tspan");r.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),r.setAttribute("dy","1em"),r.setAttribute("x","0"),a?r.setAttribute("class","title-row"):r.setAttribute("class","row"),r.textContent=e.trim(),t.appendChild(r)}return t}},createLabel$1=createLabel,labelHelper=async(t,e,a,r)=>{let n;const i=e.useHtmlLabels||evaluate(getConfig().flowchart.htmlLabels);n=a||"node default";const s=t.insert("g").attr("class",n).attr("id",e.domId||e.id),l=s.insert("g").attr("class","label").attr("style",e.labelStyle);let o;o=void 0===e.labelText?"":"string"==typeof e.labelText?e.labelText:e.labelText[0];const d=l.node();let c;c="markdown"===e.labelType?createText(l,sanitizeText(decodeEntities(o),getConfig()),{useHtmlLabels:i,width:e.width||getConfig().flowchart.wrappingWidth,classes:"markdown-node-label"}):d.appendChild(createLabel$1(sanitizeText(decodeEntities(o),getConfig()),e.labelStyle,!1,r));let h=c.getBBox();const g=e.padding/2;if(evaluate(getConfig().flowchart.htmlLabels)){const t=c.children[0],e=d3select(c),a=t.getElementsByTagName("img");if(a){const t=""===o.replace(/<img[^>]*>/g,"").trim();await Promise.all([...a].map((e=>new Promise((a=>{function r(){if(e.style.display="flex",e.style.flexDirection="column",t){const t=getConfig().fontSize?getConfig().fontSize:window.getComputedStyle(document.body).fontSize,a=5;e.style.width=parseInt(t,10)*a+"px"}else e.style.width="100%";a(e)}setTimeout((()=>{e.complete&&r()})),e.addEventListener("error",r),e.addEventListener("load",r)})))))}h=t.getBoundingClientRect(),e.attr("width",h.width),e.attr("height",h.height)}return i?l.attr("transform","translate("+-h.width/2+", "+-h.height/2+")"):l.attr("transform","translate(0, "+-h.height/2+")"),e.centerLabel&&l.attr("transform","translate("+-h.width/2+", "+-h.height/2+")"),l.insert("rect",":first-child"),{shapeSvg:s,bbox:h,halfPadding:g,label:l}},updateNodeBounds=(t,e)=>{const a=e.node().getBBox();t.width=a.width,t.height=a.height};function insertPolygonShape(t,e,a,r){return t.insert("polygon",":first-child").attr("points",r.map((function(t){return t.x+","+t.y})).join(" ")).attr("class","label-container").attr("transform","translate("+-e/2+","+a/2+")")}function intersectNode(t,e){return t.intersect(e)}function intersectEllipse(t,e,a,r){var n=t.x,i=t.y,s=n-r.x,l=i-r.y,o=Math.sqrt(e*e*l*l+a*a*s*s),d=Math.abs(e*a*s/o);r.x<n&&(d=-d);var c=Math.abs(e*a*l/o);return r.y<i&&(c=-c),{x:n+d,y:i+c}}function intersectCircle(t,e,a){return intersectEllipse(t,e,e,a)}function intersectLine(t,e,a,r){var n,i,s,l,o,d,c,h,g,p,y,b,u;if(n=e.y-t.y,s=t.x-e.x,o=e.x*t.y-t.x*e.y,g=n*a.x+s*a.y+o,p=n*r.x+s*r.y+o,!(0!==g&&0!==p&&sameSign(g,p)||(i=r.y-a.y,l=a.x-r.x,d=r.x*a.y-a.x*r.y,c=i*t.x+l*t.y+d,h=i*e.x+l*e.y+d,0!==c&&0!==h&&sameSign(c,h)||0==(y=n*l-i*s))))return b=Math.abs(y/2),{x:(u=s*d-l*o)<0?(u-b)/y:(u+b)/y,y:(u=i*o-n*d)<0?(u-b)/y:(u+b)/y}}function sameSign(t,e){return t*e>0}function intersectPolygon(t,e,a){var r=t.x,n=t.y,i=[],s=Number.POSITIVE_INFINITY,l=Number.POSITIVE_INFINITY;"function"==typeof e.forEach?e.forEach((function(t){s=Math.min(s,t.x),l=Math.min(l,t.y)})):(s=Math.min(s,e.x),l=Math.min(l,e.y));for(var o=r-t.width/2-s,d=n-t.height/2-l,c=0;c<e.length;c++){var h=e[c],g=e[c<e.length-1?c+1:0],p=intersectLine(t,a,{x:o+h.x,y:d+h.y},{x:o+g.x,y:d+g.y});p&&i.push(p)}return i.length?(i.length>1&&i.sort((function(t,e){var r=t.x-a.x,n=t.y-a.y,i=Math.sqrt(r*r+n*n),s=e.x-a.x,l=e.y-a.y,o=Math.sqrt(s*s+l*l);return i<o?-1:i===o?0:1})),i[0]):t}const intersectRect=(t,e)=>{var a,r,n=t.x,i=t.y,s=e.x-n,l=e.y-i,o=t.width/2,d=t.height/2;return Math.abs(l)*o>Math.abs(s)*d?(l<0&&(d=-d),a=0===l?0:d*s/l,r=d):(s<0&&(o=-o),a=o,r=0===s?0:o*l/s),{x:n+a,y:i+r}},intersectRect$1=intersectRect,intersect={node:intersectNode,circle:intersectCircle,ellipse:intersectEllipse,polygon:intersectPolygon,rect:intersectRect$1},note=async(t,e)=>{e.useHtmlLabels||getConfig().flowchart.htmlLabels||(e.centerLabel=!0);const{shapeSvg:a,bbox:r,halfPadding:n}=await labelHelper(t,e,"node "+e.classes,!0);log.info("Classes = ",e.classes);const i=a.insert("rect",":first-child");return i.attr("rx",e.rx).attr("ry",e.ry).attr("x",-r.width/2-n).attr("y",-r.height/2-n).attr("width",r.width+e.padding).attr("height",r.height+e.padding),updateNodeBounds(e,i),e.intersect=function(t){return intersect.rect(e,t)},a},note$1=note,question=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding+(r.height+e.padding),i=[{x:n/2,y:0},{x:n,y:-n/2},{x:n/2,y:-n},{x:0,y:-n/2}];log.info("Question main (Circle)");const s=insertPolygonShape(a,n,n,i);return s.attr("style",e.style),updateNodeBounds(e,s),e.intersect=function(t){return log.warn("Intersect called"),intersect.polygon(e,i,t)},a},choice=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);return a.insert("polygon",":first-child").attr("points",[{x:0,y:14},{x:14,y:0},{x:0,y:-14},{x:-14,y:0}].map((function(t){return t.x+","+t.y})).join(" ")).attr("class","state-start").attr("r",7).attr("width",28).attr("height",28),e.width=28,e.height=28,e.intersect=function(t){return intersect.circle(e,14,t)},a},hexagon=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.height+e.padding,i=n/4,s=r.width+2*i+e.padding,l=[{x:i,y:0},{x:s-i,y:0},{x:s,y:-n/2},{x:s-i,y:-n},{x:i,y:-n},{x:0,y:-n/2}],o=insertPolygonShape(a,s,n,l);return o.attr("style",e.style),updateNodeBounds(e,o),e.intersect=function(t){return intersect.polygon(e,l,t)},a},rect_left_inv_arrow=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-i/2,y:0},{x:n,y:0},{x:n,y:-i},{x:-i/2,y:-i},{x:0,y:-i/2}];return insertPolygonShape(a,n,i,s).attr("style",e.style),e.width=n+i,e.height=i,e.intersect=function(t){return intersect.polygon(e,s,t)},a},lean_right=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:i/6,y:-i}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},lean_left=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:2*i/6,y:0},{x:n+i/6,y:0},{x:n-2*i/6,y:-i},{x:-i/6,y:-i}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},trapezoid=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:-2*i/6,y:0},{x:n+2*i/6,y:0},{x:n-i/6,y:-i},{x:i/6,y:-i}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},inv_trapezoid=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:i/6,y:0},{x:n-i/6,y:0},{x:n+2*i/6,y:-i},{x:-2*i/6,y:-i}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},rect_right_inv_arrow=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n+i/2,y:0},{x:n,y:-i/2},{x:n+i/2,y:-i},{x:0,y:-i}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},cylinder=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=n/2,s=i/(2.5+n/50),l=r.height+s+e.padding,o="M 0,"+s+" a "+i+","+s+" 0,0,0 "+n+" 0 a "+i+","+s+" 0,0,0 "+-n+" 0 l 0,"+l+" a "+i+","+s+" 0,0,0 "+n+" 0 l 0,"+-l,d=a.attr("label-offset-y",s).insert("path",":first-child").attr("style",e.style).attr("d",o).attr("transform","translate("+-n/2+","+-(l/2+s)+")");return updateNodeBounds(e,d),e.intersect=function(t){const a=intersect.rect(e,t),r=a.x-e.x;if(0!=i&&(Math.abs(r)<e.width/2||Math.abs(r)==e.width/2&&Math.abs(a.y-e.y)>e.height/2-s)){let n=s*s*(1-r*r/(i*i));0!=n&&(n=Math.sqrt(n)),n=s-n,t.y-e.y>0&&(n=-n),a.y+=n}return a},a},rect=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:n}=await labelHelper(t,e,"node "+e.classes,!0),i=a.insert("rect",":first-child"),s=r.width+e.padding,l=r.height+e.padding;if(i.attr("class","basic label-container").attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("x",-r.width/2-n).attr("y",-r.height/2-n).attr("width",s).attr("height",l),e.props){const t=new Set(Object.keys(e.props));e.props.borders&&(applyNodePropertyBorders(i,e.props.borders,s,l),t.delete("borders")),t.forEach((t=>{log.warn(`Unknown node property ${t}`)}))}return updateNodeBounds(e,i),e.intersect=function(t){return intersect.rect(e,t)},a},labelRect=async(t,e)=>{const{shapeSvg:a}=await labelHelper(t,e,"label",!0);log.trace("Classes = ",e.classes);const r=a.insert("rect",":first-child");if(r.attr("width",0).attr("height",0),a.attr("class","label edgeLabel"),e.props){const t=new Set(Object.keys(e.props));e.props.borders&&(applyNodePropertyBorders(r,e.props.borders,0,0),t.delete("borders")),t.forEach((t=>{log.warn(`Unknown node property ${t}`)}))}return updateNodeBounds(e,r),e.intersect=function(t){return intersect.rect(e,t)},a};function applyNodePropertyBorders(t,e,a,r){const n=[],i=t=>{n.push(t,0)},s=t=>{n.push(0,t)};e.includes("t")?(log.debug("add top border"),i(a)):s(a),e.includes("r")?(log.debug("add right border"),i(r)):s(r),e.includes("b")?(log.debug("add bottom border"),i(a)):s(a),e.includes("l")?(log.debug("add left border"),i(r)):s(r),t.attr("stroke-dasharray",n.join(" "))}const rectWithTitle=(t,e)=>{let a;a=e.classes?"node "+e.classes:"node default";const r=t.insert("g").attr("class",a).attr("id",e.domId||e.id),n=r.insert("rect",":first-child"),i=r.insert("line"),s=r.insert("g").attr("class","label"),l=e.labelText.flat?e.labelText.flat():e.labelText;let o="";o="object"==typeof l?l[0]:l,log.info("Label text abc79",o,l,"object"==typeof l);const d=s.node().appendChild(createLabel$1(o,e.labelStyle,!0,!0));let c={width:0,height:0};if(evaluate(getConfig().flowchart.htmlLabels)){const t=d.children[0],e=d3select(d);c=t.getBoundingClientRect(),e.attr("width",c.width),e.attr("height",c.height)}log.info("Text 2",l);const h=l.slice(1,l.length);let g=d.getBBox();const p=s.node().appendChild(createLabel$1(h.join?h.join("<br/>"):h,e.labelStyle,!0,!0));if(evaluate(getConfig().flowchart.htmlLabels)){const t=p.children[0],e=d3select(p);c=t.getBoundingClientRect(),e.attr("width",c.width),e.attr("height",c.height)}const y=e.padding/2;return d3select(p).attr("transform","translate( "+(c.width>g.width?0:(g.width-c.width)/2)+", "+(g.height+y+5)+")"),d3select(d).attr("transform","translate( "+(c.width<g.width?0:-(g.width-c.width)/2)+", 0)"),c=s.node().getBBox(),s.attr("transform","translate("+-c.width/2+", "+(-c.height/2-y+3)+")"),n.attr("class","outer title-state").attr("x",-c.width/2-y).attr("y",-c.height/2-y).attr("width",c.width+e.padding).attr("height",c.height+e.padding),i.attr("class","divider").attr("x1",-c.width/2-y).attr("x2",c.width/2+y).attr("y1",-c.height/2-y+g.height+y).attr("y2",-c.height/2-y+g.height+y),updateNodeBounds(e,n),e.intersect=function(t){return intersect.rect(e,t)},r},stadium=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.height+e.padding,i=r.width+n/4+e.padding,s=a.insert("rect",":first-child").attr("style",e.style).attr("rx",n/2).attr("ry",n/2).attr("x",-i/2).attr("y",-n/2).attr("width",i).attr("height",n);return updateNodeBounds(e,s),e.intersect=function(t){return intersect.rect(e,t)},a},circle=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:n}=await labelHelper(t,e,void 0,!0),i=a.insert("circle",":first-child");return i.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+n).attr("width",r.width+e.padding).attr("height",r.height+e.padding),log.info("Circle main"),updateNodeBounds(e,i),e.intersect=function(t){return log.info("Circle intersect",e,r.width/2+n,t),intersect.circle(e,r.width/2+n,t)},a},doublecircle=async(t,e)=>{const{shapeSvg:a,bbox:r,halfPadding:n}=await labelHelper(t,e,void 0,!0),i=a.insert("g",":first-child"),s=i.insert("circle"),l=i.insert("circle");return i.attr("class",e.class),s.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+n+5).attr("width",r.width+e.padding+10).attr("height",r.height+e.padding+10),l.attr("style",e.style).attr("rx",e.rx).attr("ry",e.ry).attr("r",r.width/2+n).attr("width",r.width+e.padding).attr("height",r.height+e.padding),log.info("DoubleCircle main"),updateNodeBounds(e,s),e.intersect=function(t){return log.info("DoubleCircle intersect",e,r.width/2+n+5,t),intersect.circle(e,r.width/2+n+5,t)},a},subroutine=async(t,e)=>{const{shapeSvg:a,bbox:r}=await labelHelper(t,e,void 0,!0),n=r.width+e.padding,i=r.height+e.padding,s=[{x:0,y:0},{x:n,y:0},{x:n,y:-i},{x:0,y:-i},{x:0,y:0},{x:-8,y:0},{x:n+8,y:0},{x:n+8,y:-i},{x:-8,y:-i},{x:-8,y:0}],l=insertPolygonShape(a,n,i,s);return l.attr("style",e.style),updateNodeBounds(e,l),e.intersect=function(t){return intersect.polygon(e,s,t)},a},start=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child");return r.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),updateNodeBounds(e,r),e.intersect=function(t){return intersect.circle(e,7,t)},a},forkJoin=(t,e,a)=>{const r=t.insert("g").attr("class","node default").attr("id",e.domId||e.id);let n=70,i=10;"LR"===a&&(n=10,i=70);const s=r.append("rect").attr("x",-1*n/2).attr("y",-1*i/2).attr("width",n).attr("height",i).attr("class","fork-join");return updateNodeBounds(e,s),e.height=e.height+e.padding/2,e.width=e.width+e.padding/2,e.intersect=function(t){return intersect.rect(e,t)},r},end=(t,e)=>{const a=t.insert("g").attr("class","node default").attr("id",e.domId||e.id),r=a.insert("circle",":first-child"),n=a.insert("circle",":first-child");return n.attr("class","state-start").attr("r",7).attr("width",14).attr("height",14),r.attr("class","state-end").attr("r",5).attr("width",10).attr("height",10),updateNodeBounds(e,n),e.intersect=function(t){return intersect.circle(e,7,t)},a},class_box=(t,e)=>{const a=e.padding/2;let r;r=e.classes?"node "+e.classes:"node default";const n=t.insert("g").attr("class",r).attr("id",e.domId||e.id),i=n.insert("rect",":first-child"),s=n.insert("line"),l=n.insert("line");let o=0,d=4;const c=n.insert("g").attr("class","label");let h=0;const g=e.classData.annotations&&e.classData.annotations[0],p=e.classData.annotations[0]?"«"+e.classData.annotations[0]+"»":"",y=c.node().appendChild(createLabel$1(p,e.labelStyle,!0,!0));let b=y.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const t=y.children[0],e=d3select(y);b=t.getBoundingClientRect(),e.attr("width",b.width),e.attr("height",b.height)}e.classData.annotations[0]&&(d+=b.height+4,o+=b.width);let u=e.classData.label;void 0!==e.classData.type&&""!==e.classData.type&&(getConfig().flowchart.htmlLabels?u+="&lt;"+e.classData.type+"&gt;":u+="<"+e.classData.type+">");const f=c.node().appendChild(createLabel$1(u,e.labelStyle,!0,!0));d3select(f).attr("class","classTitle");let m=f.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const t=f.children[0],e=d3select(f);m=t.getBoundingClientRect(),e.attr("width",m.width),e.attr("height",m.height)}d+=m.height+4,m.width>o&&(o=m.width);const w=[];e.classData.members.forEach((t=>{const a=parseMember(t);let r=a.displayText;getConfig().flowchart.htmlLabels&&(r=r.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const n=c.node().appendChild(createLabel$1(r,a.cssStyle?a.cssStyle:e.labelStyle,!0,!0));let i=n.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const t=n.children[0],e=d3select(n);i=t.getBoundingClientRect(),e.attr("width",i.width),e.attr("height",i.height)}i.width>o&&(o=i.width),d+=i.height+4,w.push(n)})),d+=8;const x=[];if(e.classData.methods.forEach((t=>{const a=parseMember(t);let r=a.displayText;getConfig().flowchart.htmlLabels&&(r=r.replace(/</g,"&lt;").replace(/>/g,"&gt;"));const n=c.node().appendChild(createLabel$1(r,a.cssStyle?a.cssStyle:e.labelStyle,!0,!0));let i=n.getBBox();if(evaluate(getConfig().flowchart.htmlLabels)){const t=n.children[0],e=d3select(n);i=t.getBoundingClientRect(),e.attr("width",i.width),e.attr("height",i.height)}i.width>o&&(o=i.width),d+=i.height+4,x.push(n)})),d+=8,g){let t=(o-b.width)/2;d3select(y).attr("transform","translate( "+(-1*o/2+t)+", "+-1*d/2+")"),h=b.height+4}let k=(o-m.width)/2;return d3select(f).attr("transform","translate( "+(-1*o/2+k)+", "+(-1*d/2+h)+")"),h+=m.height+4,s.attr("class","divider").attr("x1",-o/2-a).attr("x2",o/2+a).attr("y1",-d/2-a+8+h).attr("y2",-d/2-a+8+h),h+=8,w.forEach((t=>{d3select(t).attr("transform","translate( "+-o/2+", "+(-1*d/2+h+4)+")");const e=null==t?void 0:t.getBBox();h+=((null==e?void 0:e.height)??0)+4})),h+=8,l.attr("class","divider").attr("x1",-o/2-a).attr("x2",o/2+a).attr("y1",-d/2-a+8+h).attr("y2",-d/2-a+8+h),h+=8,x.forEach((t=>{d3select(t).attr("transform","translate( "+-o/2+", "+(-1*d/2+h)+")");const e=null==t?void 0:t.getBBox();h+=((null==e?void 0:e.height)??0)+4})),i.attr("class","outer title-state").attr("x",-o/2-a).attr("y",-d/2-a).attr("width",o+e.padding).attr("height",d+e.padding),updateNodeBounds(e,i),e.intersect=function(t){return intersect.rect(e,t)},n},shapes={rhombus:question,question,rect,labelRect,rectWithTitle,choice,circle,doublecircle,stadium,hexagon,rect_left_inv_arrow,lean_right,lean_left,trapezoid,inv_trapezoid,rect_right_inv_arrow,cylinder,start,end,note:note$1,subroutine,fork:forkJoin,join:forkJoin,class_box};let nodeElems={};const insertNode=async(t,e,a)=>{let r,n;if(e.link){let i;"sandbox"===getConfig().securityLevel?i="_top":e.linkTarget&&(i=e.linkTarget||"_blank"),r=t.insert("svg:a").attr("xlink:href",e.link).attr("target",i),n=await shapes[e.shape](r,e,a)}else n=await shapes[e.shape](t,e,a),r=n;return e.tooltip&&n.attr("title",e.tooltip),e.class&&n.attr("class","node default "+e.class),nodeElems[e.id]=r,e.haveCallback&&nodeElems[e.id].attr("class",nodeElems[e.id].attr("class")+" clickable"),r},setNodeElem=(t,e)=>{nodeElems[e.id]=t},clear$1=()=>{nodeElems={}},positionNode=t=>{const e=nodeElems[t.id];log.trace("Transforming node",t.diff,t,"translate("+(t.x-t.width/2-5)+", "+t.width/2+")");const a=t.diff||0;return t.clusterNode?e.attr("transform","translate("+(t.x+a-t.width/2)+", "+(t.y-t.height/2-8)+")"):e.attr("transform","translate("+t.x+", "+t.y+")"),a};let edgeLabels={},terminalLabels={};const clear=()=>{edgeLabels={},terminalLabels={}},insertEdgeLabel=(t,e)=>{const a=evaluate(getConfig().flowchart.htmlLabels),r="markdown"===e.labelType?createText(t,e.label,{style:e.labelStyle,useHtmlLabels:a,addSvgBackground:!0}):createLabel$1(e.label,e.labelStyle);log.info("abc82",e,e.labelType);const n=t.insert("g").attr("class","edgeLabel"),i=n.insert("g").attr("class","label");i.node().appendChild(r);let s,l=r.getBBox();if(a){const t=r.children[0],e=d3select(r);l=t.getBoundingClientRect(),e.attr("width",l.width),e.attr("height",l.height)}if(i.attr("transform","translate("+-l.width/2+", "+-l.height/2+")"),edgeLabels[e.id]=n,e.width=l.width,e.height=l.height,e.startLabelLeft){const a=createLabel$1(e.startLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");s=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].startLeft=r,setTerminalWidth(s,e.startLabelLeft)}if(e.startLabelRight){const a=createLabel$1(e.startLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");s=r.node().appendChild(a),n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].startRight=r,setTerminalWidth(s,e.startLabelRight)}if(e.endLabelLeft){const a=createLabel$1(e.endLabelLeft,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");s=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),r.node().appendChild(a),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].endLeft=r,setTerminalWidth(s,e.endLabelLeft)}if(e.endLabelRight){const a=createLabel$1(e.endLabelRight,e.labelStyle),r=t.insert("g").attr("class","edgeTerminals"),n=r.insert("g").attr("class","inner");s=n.node().appendChild(a);const i=a.getBBox();n.attr("transform","translate("+-i.width/2+", "+-i.height/2+")"),r.node().appendChild(a),terminalLabels[e.id]||(terminalLabels[e.id]={}),terminalLabels[e.id].endRight=r,setTerminalWidth(s,e.endLabelRight)}return r};function setTerminalWidth(t,e){getConfig().flowchart.htmlLabels&&t&&(t.style.width=9*e.length+"px",t.style.height="12px")}const positionEdgeLabel=(t,e)=>{log.info("Moving label abc78 ",t.id,t.label,edgeLabels[t.id]);let a=e.updatedPath?e.updatedPath:e.originalPath;if(t.label){const r=edgeLabels[t.id];let n=t.x,i=t.y;if(a){const r=utils.calcLabelPosition(a);log.info("Moving label "+t.label+" from (",n,",",i,") to (",r.x,",",r.y,") abc78"),e.updatedPath&&(n=r.x,i=r.y)}r.attr("transform","translate("+n+", "+i+")")}if(t.startLabelLeft){const e=terminalLabels[t.id].startLeft;let r=t.x,n=t.y;if(a){const e=utils.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_left",a);r=e.x,n=e.y}e.attr("transform","translate("+r+", "+n+")")}if(t.startLabelRight){const e=terminalLabels[t.id].startRight;let r=t.x,n=t.y;if(a){const e=utils.calcTerminalLabelPosition(t.arrowTypeStart?10:0,"start_right",a);r=e.x,n=e.y}e.attr("transform","translate("+r+", "+n+")")}if(t.endLabelLeft){const e=terminalLabels[t.id].endLeft;let r=t.x,n=t.y;if(a){const e=utils.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_left",a);r=e.x,n=e.y}e.attr("transform","translate("+r+", "+n+")")}if(t.endLabelRight){const e=terminalLabels[t.id].endRight;let r=t.x,n=t.y;if(a){const e=utils.calcTerminalLabelPosition(t.arrowTypeEnd?10:0,"end_right",a);r=e.x,n=e.y}e.attr("transform","translate("+r+", "+n+")")}},outsideNode=(t,e)=>{const a=t.x,r=t.y,n=Math.abs(e.x-a),i=Math.abs(e.y-r),s=t.width/2,l=t.height/2;return n>=s||i>=l},intersection=(t,e,a)=>{log.warn(`intersection calc abc89:\n  outsidePoint: ${JSON.stringify(e)}\n  insidePoint : ${JSON.stringify(a)}\n  node        : x:${t.x} y:${t.y} w:${t.width} h:${t.height}`);const r=t.x,n=t.y,i=Math.abs(r-a.x),s=t.width/2;let l=a.x<e.x?s-i:s+i;const o=t.height/2,d=Math.abs(e.y-a.y),c=Math.abs(e.x-a.x);if(Math.abs(n-e.y)*s>Math.abs(r-e.x)*o){let t=a.y<e.y?e.y-o-n:n-o-e.y;l=c*t/d;const r={x:a.x<e.x?a.x+l:a.x-c+l,y:a.y<e.y?a.y+d-t:a.y-d+t};return 0===l&&(r.x=e.x,r.y=e.y),0===c&&(r.x=e.x),0===d&&(r.y=e.y),log.warn(`abc89 topp/bott calc, Q ${d}, q ${t}, R ${c}, r ${l}`,r),r}{l=a.x<e.x?e.x-s-r:r-s-e.x;let t=d*l/c,n=a.x<e.x?a.x+c-l:a.x-c+l,i=a.y<e.y?a.y+t:a.y-t;return log.warn(`sides calc abc89, Q ${d}, q ${t}, R ${c}, r ${l}`,{_x:n,_y:i}),0===l&&(n=e.x,i=e.y),0===c&&(n=e.x),0===d&&(i=e.y),{x:n,y:i}}},cutPathAtIntersect=(t,e)=>{log.warn("abc88 cutPathAtIntersect",t,e);let a=[],r=t[0],n=!1;return t.forEach((t=>{if(log.info("abc88 checking point",t,e),outsideNode(e,t)||n)log.warn("abc88 outside",t,r),r=t,n||a.push(t);else{const i=intersection(e,r,t);log.warn("abc88 inside",t,r,i),log.warn("abc88 intersection",i);let s=!1;a.forEach((t=>{s=s||t.x===i.x&&t.y===i.y})),a.some((t=>t.x===i.x&&t.y===i.y))?log.warn("abc88 no intersect",i,a):a.push(i),n=!0}})),log.warn("abc88 returning points",a),a},insertEdge=function(t,e,a,r,n,i){let s=a.points,l=!1;const o=i.node(e.v);var d=i.node(e.w);log.info("abc88 InsertEdge: ",a),d.intersect&&o.intersect&&(s=s.slice(1,a.points.length-1),s.unshift(o.intersect(s[0])),log.info("Last point",s[s.length-1],d,d.intersect(s[s.length-1])),s.push(d.intersect(s[s.length-1]))),a.toCluster&&(log.info("to cluster abc88",r[a.toCluster]),s=cutPathAtIntersect(a.points,r[a.toCluster].node),l=!0),a.fromCluster&&(log.info("from cluster abc88",r[a.fromCluster]),s=cutPathAtIntersect(s.reverse(),r[a.fromCluster].node).reverse(),l=!0);const c=s.filter((t=>!Number.isNaN(t.y)));let h;h=("graph"===n||"flowchart"===n)&&a.curve||curveBasis;const g=line().x((function(t){return t.x})).y((function(t){return t.y})).curve(h);let p;switch(a.thickness){case"normal":p="edge-thickness-normal";break;case"thick":case"invisible":p="edge-thickness-thick";break;default:p=""}switch(a.pattern){case"solid":p+=" edge-pattern-solid";break;case"dotted":p+=" edge-pattern-dotted";break;case"dashed":p+=" edge-pattern-dashed"}const y=t.append("path").attr("d",g(c)).attr("id",a.id).attr("class"," "+p+(a.classes?" "+a.classes:"")).attr("style",a.style);let b="";switch((getConfig().flowchart.arrowMarkerAbsolute||getConfig().state.arrowMarkerAbsolute)&&(b=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,b=b.replace(/\(/g,"\\("),b=b.replace(/\)/g,"\\)")),log.info("arrowTypeStart",a.arrowTypeStart),log.info("arrowTypeEnd",a.arrowTypeEnd),a.arrowTypeStart){case"arrow_cross":y.attr("marker-start","url("+b+"#"+n+"-crossStart)");break;case"arrow_point":y.attr("marker-start","url("+b+"#"+n+"-pointStart)");break;case"arrow_barb":y.attr("marker-start","url("+b+"#"+n+"-barbStart)");break;case"arrow_circle":y.attr("marker-start","url("+b+"#"+n+"-circleStart)");break;case"aggregation":y.attr("marker-start","url("+b+"#"+n+"-aggregationStart)");break;case"extension":y.attr("marker-start","url("+b+"#"+n+"-extensionStart)");break;case"composition":y.attr("marker-start","url("+b+"#"+n+"-compositionStart)");break;case"dependency":y.attr("marker-start","url("+b+"#"+n+"-dependencyStart)");break;case"lollipop":y.attr("marker-start","url("+b+"#"+n+"-lollipopStart)")}switch(a.arrowTypeEnd){case"arrow_cross":y.attr("marker-end","url("+b+"#"+n+"-crossEnd)");break;case"arrow_point":y.attr("marker-end","url("+b+"#"+n+"-pointEnd)");break;case"arrow_barb":y.attr("marker-end","url("+b+"#"+n+"-barbEnd)");break;case"arrow_circle":y.attr("marker-end","url("+b+"#"+n+"-circleEnd)");break;case"aggregation":y.attr("marker-end","url("+b+"#"+n+"-aggregationEnd)");break;case"extension":y.attr("marker-end","url("+b+"#"+n+"-extensionEnd)");break;case"composition":y.attr("marker-end","url("+b+"#"+n+"-compositionEnd)");break;case"dependency":y.attr("marker-end","url("+b+"#"+n+"-dependencyEnd)");break;case"lollipop":y.attr("marker-end","url("+b+"#"+n+"-lollipopEnd)")}let u={};return l&&(u.updatedPath=s),u.originalPath=a.points,u};export{insertMarkers$1 as a,clear$1 as b,createLabel$1 as c,clear as d,insertNode as e,insertEdgeLabel as f,insertEdge as g,positionEdgeLabel as h,intersectRect$1 as i,labelHelper as l,positionNode as p,setNodeElem as s,updateNodeBounds as u};