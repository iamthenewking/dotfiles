import{p as parser$1,f as flowDb}from"./flowDb-7a27455c.js";import{h as has,u as uniqueId,r as range,p as pick,l as layout,d as defaults,f as forEach,G as Graph}from"./layout-cc6d5710.js";import{j as d3select,o as curveLinear,p as getStylesFromArray,q as evaluate,c as getConfig,f as common,l as log,r as interpolateToCurve,t as setupGraphViewbox}from"./mermaid-766fee4c.js";import{a as applyStyle,b as addHtmlLabel,i as isSubgraph,c as applyTransition,e as edgeToId,d as applyClass,s as selectAll,f as flowRendererV2,g as flowStyles}from"./styles-8ef4cf23.js";import{l as line}from"./line-cdadca5f.js";import"./index-4ba10627.js";import"./edges-df708b89.js";import"./createText-2c3b104b.js";import"./svgDraw-f57324fe.js";import"./array-b7dcf730.js";import"./constant-b644328d.js";function responseText(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.text()}function text(e,t){return fetch(e,t).then(responseText)}function parser(e){return(t,r)=>text(t,r).then((t=>(new DOMParser).parseFromString(t,e)))}var svg=parser("image/svg+xml"),arrows={normal,vee,undirected};function setArrows(e){arrows=e}function normal(e,t,r,a){var n=e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").style("stroke-width",1).style("stroke-dasharray","1,0");applyStyle(n,r[a+"Style"]),r[a+"Class"]&&n.attr("class",r[a+"Class"])}function vee(e,t,r,a){var n=e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 L 4 5 z").style("stroke-width",1).style("stroke-dasharray","1,0");applyStyle(n,r[a+"Style"]),r[a+"Class"]&&n.attr("class",r[a+"Class"])}function undirected(e,t,r,a){var n=e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 5 L 10 5").style("stroke-width",1).style("stroke-dasharray","1,0");applyStyle(n,r[a+"Style"]),r[a+"Class"]&&n.attr("class",r[a+"Class"])}function addSVGLabel(e,t){var r=e;return r.node().appendChild(t.label),applyStyle(r,t.labelStyle),r}function addTextLabel(e,t){for(var r=e.append("text"),a=processEscapeSequences(t.label).split("\n"),n=0;n<a.length;n++)r.append("tspan").attr("xml:space","preserve").attr("dy","1em").attr("x","1").text(a[n]);return applyStyle(r,t.labelStyle),r}function processEscapeSequences(e){for(var t,r="",a=!1,n=0;n<e.length;++n)t=e[n],a?(r+="n"===t?"\n":t,a=!1):"\\"===t?a=!0:r+=t;return r}function addLabel(e,t,r){var a=t.label,n=e.append("g");"svg"===t.labelType?addSVGLabel(n,t):"string"!=typeof a||"html"===t.labelType?addHtmlLabel(n,t):addTextLabel(n,t);var s,i=n.node().getBBox();switch(r){case"top":s=-t.height/2;break;case"bottom":s=t.height/2-i.height;break;default:s=-i.height/2}return n.attr("transform","translate("+-i.width/2+","+s+")"),n}var createClusters=function(e,t){var r=t.nodes().filter((function(e){return isSubgraph(t,e)})),a=e.selectAll("g.cluster").data(r,(function(e){return e}));applyTransition(a.exit(),t).style("opacity",0).remove();var n=a.enter().append("g").attr("class","cluster").attr("id",(function(e){return t.node(e).id})).style("opacity",0).each((function(e){var r=t.node(e),a=d3select(this);d3select(this).append("rect"),addLabel(a.append("g").attr("class","label"),r,r.clusterLabelPos)}));return a=a.merge(n),(a=applyTransition(a,t).style("opacity",1)).selectAll("rect").each((function(e){var r=t.node(e),a=d3select(this);applyStyle(a,r.style)})),a};function setCreateClusters(e){createClusters=e}let createEdgeLabels=function(e,t){var r,a=e.selectAll("g.edgeLabel").data(t.edges(),(function(e){return edgeToId(e)})).classed("update",!0);return a.exit().remove(),a.enter().append("g").classed("edgeLabel",!0).style("opacity",0),(a=e.selectAll("g.edgeLabel")).each((function(e){var r=d3select(this);r.select(".label").remove();var a=t.edge(e),n=addLabel(r,t.edge(e),0).classed("label",!0),s=n.node().getBBox();a.labelId&&n.attr("id",a.labelId),has(a,"width")||(a.width=s.width),has(a,"height")||(a.height=s.height)})),r=a.exit?a.exit():a.selectAll(null),applyTransition(r,t).style("opacity",0).remove(),a};function setCreateEdgeLabels(e){createEdgeLabels=e}function intersectNode(e,t){return e.intersect(t)}var createEdgePaths=function(e,t,r){var a=e.selectAll("g.edgePath").data(t.edges(),(function(e){return edgeToId(e)})).classed("update",!0),n=enter(a,t);exit(a,t);var s=void 0!==a.merge?a.merge(n):a;return applyTransition(s,t).style("opacity",1),s.each((function(e){var r=d3select(this),a=t.edge(e);a.elem=this,a.id&&r.attr("id",a.id),applyClass(r,a.class,(r.classed("update")?"update ":"")+"edgePath")})),s.selectAll("path.path").each((function(e){var r=t.edge(e);r.arrowheadId=uniqueId("arrowhead");var a=d3select(this).attr("marker-end",(function(){return"url("+makeFragmentRef(location.href,r.arrowheadId)+")"})).style("fill","none");applyTransition(a,t).attr("d",(function(e){return calcPoints(t,e)})),applyStyle(a,r.style)})),s.selectAll("defs *").remove(),s.selectAll("defs").each((function(e){var a=t.edge(e);(0,r[a.arrowhead])(d3select(this),a.arrowheadId,a,"arrowhead")})),s};function setCreateEdgePaths(e){createEdgePaths=e}function makeFragmentRef(e,t){return e.split("#")[0]+"#"+t}function calcPoints(e,t){var r=e.edge(t),a=e.node(t.v),n=e.node(t.w),s=r.points.slice(1,r.points.length-1);return s.unshift(intersectNode(a,s[0])),s.push(intersectNode(n,s[s.length-1])),createLine(r,s)}function createLine(e,t){var r=(line||svg.line)().x((function(e){return e.x})).y((function(e){return e.y}));return(r.curve||r.interpolate)(e.curve),r(t)}function getCoords(e){var t=e.getBBox(),r=e.ownerSVGElement.getScreenCTM().inverse().multiply(e.getScreenCTM()).translate(t.width/2,t.height/2);return{x:r.e,y:r.f}}function enter(e,t){var r=e.enter().append("g").attr("class","edgePath").style("opacity",0);return r.append("path").attr("class","path").attr("d",(function(e){var r=t.edge(e),a=t.node(e.v).elem;return createLine(r,range(r.points.length).map((function(){return getCoords(a)})))})),r.append("defs"),r}function exit(e,t){var r=e.exit();applyTransition(r,t).style("opacity",0).remove()}var createNodes=function(e,t,r){var a,n=t.nodes().filter((function(e){return!isSubgraph(t,e)})),s=e.selectAll("g.node").data(n,(function(e){return e})).classed("update",!0);return s.exit().remove(),s.enter().append("g").attr("class","node").style("opacity",0),(s=e.selectAll("g.node")).each((function(e){var a=t.node(e),n=d3select(this);applyClass(n,a.class,(n.classed("update")?"update ":"")+"node"),n.select("g.label").remove();var s=n.append("g").attr("class","label"),i=addLabel(s,a),o=r[a.shape],l=pick(i.node().getBBox(),"width","height");a.elem=this,a.id&&n.attr("id",a.id),a.labelId&&s.attr("id",a.labelId),has(a,"width")&&(l.width=a.width),has(a,"height")&&(l.height=a.height),l.width+=a.paddingLeft+a.paddingRight,l.height+=a.paddingTop+a.paddingBottom,s.attr("transform","translate("+(a.paddingLeft-a.paddingRight)/2+","+(a.paddingTop-a.paddingBottom)/2+")");var d=d3select(this);d.select(".label-container").remove();var c=o(d,l,a).classed("label-container",!0);applyStyle(c,a.style);var h=c.node().getBBox();a.width=h.width,a.height=h.height})),a=s.exit?s.exit():s.selectAll(null),applyTransition(a,t).style("opacity",0).remove(),s};function setCreateNodes(e){createNodes=e}function positionClusters(e,t){var r=e.filter((function(){return!d3select(this).classed("update")}));function a(e){var r=t.node(e);return"translate("+r.x+","+r.y+")"}r.attr("transform",a),applyTransition(e,t).style("opacity",1).attr("transform",a),applyTransition(r.selectAll("rect"),t).attr("width",(function(e){return t.node(e).width})).attr("height",(function(e){return t.node(e).height})).attr("x",(function(e){return-t.node(e).width/2})).attr("y",(function(e){return-t.node(e).height/2}))}function positionEdgeLabels(e,t){function r(e){var r=t.edge(e);return has(r,"x")?"translate("+r.x+","+r.y+")":""}e.filter((function(){return!d3select(this).classed("update")})).attr("transform",r),applyTransition(e,t).style("opacity",1).attr("transform",r)}function positionNodes(e,t){function r(e){var r=t.node(e);return"translate("+r.x+","+r.y+")"}e.filter((function(){return!d3select(this).classed("update")})).attr("transform",r),applyTransition(e,t).style("opacity",1).attr("transform",r)}function intersectEllipse(e,t,r,a){var n=e.x,s=e.y,i=n-a.x,o=s-a.y,l=Math.sqrt(t*t*o*o+r*r*i*i),d=Math.abs(t*r*i/l);a.x<n&&(d=-d);var c=Math.abs(t*r*o/l);return a.y<s&&(c=-c),{x:n+d,y:s+c}}function intersectCircle(e,t,r){return intersectEllipse(e,t,t,r)}function intersectLine(e,t,r,a){var n,s,i,o,l,d,c,h,p,u,g,f,y;if(n=t.y-e.y,i=e.x-t.x,l=t.x*e.y-e.x*t.y,p=n*r.x+i*r.y+l,u=n*a.x+i*a.y+l,!(0!==p&&0!==u&&sameSign(p,u)||(s=a.y-r.y,o=r.x-a.x,d=a.x*r.y-r.x*a.y,c=s*e.x+o*e.y+d,h=s*t.x+o*t.y+d,0!==c&&0!==h&&sameSign(c,h)||0==(g=n*o-s*i))))return f=Math.abs(g/2),{x:(y=i*d-o*l)<0?(y-f)/g:(y+f)/g,y:(y=s*l-n*d)<0?(y-f)/g:(y+f)/g}}function sameSign(e,t){return e*t>0}function intersectPolygon(e,t,r){var a=e.x,n=e.y,s=[],i=Number.POSITIVE_INFINITY,o=Number.POSITIVE_INFINITY;t.forEach((function(e){i=Math.min(i,e.x),o=Math.min(o,e.y)}));for(var l=a-e.width/2-i,d=n-e.height/2-o,c=0;c<t.length;c++){var h=t[c],p=t[c<t.length-1?c+1:0],u=intersectLine(e,r,{x:l+h.x,y:d+h.y},{x:l+p.x,y:d+p.y});u&&s.push(u)}return s.length?(s.length>1&&s.sort((function(e,t){var a=e.x-r.x,n=e.y-r.y,s=Math.sqrt(a*a+n*n),i=t.x-r.x,o=t.y-r.y,l=Math.sqrt(i*i+o*o);return s<l?-1:s===l?0:1})),s[0]):(console.log("NO INTERSECTION FOUND, RETURN NODE CENTER",e),e)}function intersectRect(e,t){var r,a,n=e.x,s=e.y,i=t.x-n,o=t.y-s,l=e.width/2,d=e.height/2;return Math.abs(o)*l>Math.abs(i)*d?(o<0&&(d=-d),r=0===o?0:d*i/o,a=d):(i<0&&(l=-l),r=l,a=0===i?0:l*o/i),{x:n+r,y:s+a}}var shapes={rect,ellipse,circle,diamond};function setShapes(e){shapes=e}function rect(e,t,r){var a=e.insert("rect",":first-child").attr("rx",r.rx).attr("ry",r.ry).attr("x",-t.width/2).attr("y",-t.height/2).attr("width",t.width).attr("height",t.height);return r.intersect=function(e){return intersectRect(r,e)},a}function ellipse(e,t,r){var a=t.width/2,n=t.height/2,s=e.insert("ellipse",":first-child").attr("x",-t.width/2).attr("y",-t.height/2).attr("rx",a).attr("ry",n);return r.intersect=function(e){return intersectEllipse(r,a,n,e)},s}function circle(e,t,r){var a=Math.max(t.width,t.height)/2,n=e.insert("circle",":first-child").attr("x",-t.width/2).attr("y",-t.height/2).attr("r",a);return r.intersect=function(e){return intersectCircle(r,a,e)},n}function diamond(e,t,r){var a=t.width*Math.SQRT2/2,n=t.height*Math.SQRT2/2,s=[{x:0,y:-n},{x:-a,y:0},{x:0,y:n},{x:a,y:0}],i=e.insert("polygon",":first-child").attr("points",s.map((function(e){return e.x+","+e.y})).join(" "));return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function render(){var e=function(e,t){preProcessGraph(t);var r=createOrSelectGroup(e,"output"),a=createOrSelectGroup(r,"clusters"),n=createOrSelectGroup(r,"edgePaths"),s=createEdgeLabels(createOrSelectGroup(r,"edgeLabels"),t),i=createNodes(createOrSelectGroup(r,"nodes"),t,shapes);layout(t),positionNodes(i,t),positionEdgeLabels(s,t),createEdgePaths(n,t,arrows),positionClusters(createClusters(a,t),t),postProcessGraph(t)};return e.createNodes=function(t){return arguments.length?(setCreateNodes(t),e):createNodes},e.createClusters=function(t){return arguments.length?(setCreateClusters(t),e):createClusters},e.createEdgeLabels=function(t){return arguments.length?(setCreateEdgeLabels(t),e):createEdgeLabels},e.createEdgePaths=function(t){return arguments.length?(setCreateEdgePaths(t),e):createEdgePaths},e.shapes=function(t){return arguments.length?(setShapes(t),e):shapes},e.arrows=function(t){return arguments.length?(setArrows(t),e):arrows},e}var NODE_DEFAULT_ATTRS={paddingLeft:10,paddingRight:10,paddingTop:10,paddingBottom:10,rx:0,ry:0,shape:"rect"},EDGE_DEFAULT_ATTRS={arrowhead:"normal",curve:curveLinear};function preProcessGraph(e){e.nodes().forEach((function(t){var r=e.node(t);has(r,"label")||e.children(t).length||(r.label=t),has(r,"paddingX")&&defaults(r,{paddingLeft:r.paddingX,paddingRight:r.paddingX}),has(r,"paddingY")&&defaults(r,{paddingTop:r.paddingY,paddingBottom:r.paddingY}),has(r,"padding")&&defaults(r,{paddingLeft:r.padding,paddingRight:r.padding,paddingTop:r.padding,paddingBottom:r.padding}),defaults(r,NODE_DEFAULT_ATTRS),forEach(["paddingLeft","paddingRight","paddingTop","paddingBottom"],(function(e){r[e]=Number(r[e])})),has(r,"width")&&(r._prevWidth=r.width),has(r,"height")&&(r._prevHeight=r.height)})),e.edges().forEach((function(t){var r=e.edge(t);has(r,"label")||(r.label=""),defaults(r,EDGE_DEFAULT_ATTRS)}))}function postProcessGraph(e){forEach(e.nodes(),(function(t){var r=e.node(t);has(r,"_prevWidth")?r.width=r._prevWidth:delete r.width,has(r,"_prevHeight")?r.height=r._prevHeight:delete r.height,delete r._prevWidth,delete r._prevHeight}))}function createOrSelectGroup(e,t){var r=e.select("g."+t);return r.empty()&&(r=e.append("g").attr("class",t)),r}function question(e,t,r){const a=.9*(t.width+t.height),n=[{x:a/2,y:0},{x:a,y:-a/2},{x:a/2,y:-a},{x:0,y:-a/2}],s=insertPolygonShape(e,a,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function hexagon(e,t,r){const a=t.height,n=a/4,s=t.width+2*n,i=[{x:n,y:0},{x:s-n,y:0},{x:s,y:-a/2},{x:s-n,y:-a},{x:n,y:-a},{x:0,y:-a/2}],o=insertPolygonShape(e,s,a,i);return r.intersect=function(e){return intersectPolygon(r,i,e)},o}function rect_left_inv_arrow(e,t,r){const a=t.width,n=t.height,s=[{x:-n/2,y:0},{x:a,y:0},{x:a,y:-n},{x:-n/2,y:-n},{x:0,y:-n/2}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function lean_right(e,t,r){const a=t.width,n=t.height,s=[{x:-2*n/6,y:0},{x:a-n/6,y:0},{x:a+2*n/6,y:-n},{x:n/6,y:-n}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function lean_left(e,t,r){const a=t.width,n=t.height,s=[{x:2*n/6,y:0},{x:a+n/6,y:0},{x:a-2*n/6,y:-n},{x:-n/6,y:-n}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function trapezoid(e,t,r){const a=t.width,n=t.height,s=[{x:-2*n/6,y:0},{x:a+2*n/6,y:0},{x:a-n/6,y:-n},{x:n/6,y:-n}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function inv_trapezoid(e,t,r){const a=t.width,n=t.height,s=[{x:n/6,y:0},{x:a-n/6,y:0},{x:a+2*n/6,y:-n},{x:-2*n/6,y:-n}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function rect_right_inv_arrow(e,t,r){const a=t.width,n=t.height,s=[{x:0,y:0},{x:a+n/2,y:0},{x:a,y:-n/2},{x:a+n/2,y:-n},{x:0,y:-n}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function stadium(e,t,r){const a=t.height,n=t.width+a/4,s=e.insert("rect",":first-child").attr("rx",a/2).attr("ry",a/2).attr("x",-n/2).attr("y",-a/2).attr("width",n).attr("height",a);return r.intersect=function(e){return intersectRect(r,e)},s}function subroutine(e,t,r){const a=t.width,n=t.height,s=[{x:0,y:0},{x:a,y:0},{x:a,y:-n},{x:0,y:-n},{x:0,y:0},{x:-8,y:0},{x:a+8,y:0},{x:a+8,y:-n},{x:-8,y:-n},{x:-8,y:0}],i=insertPolygonShape(e,a,n,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function cylinder(e,t,r){const a=t.width,n=a/2,s=n/(2.5+a/50),i=t.height+s,o="M 0,"+s+" a "+n+","+s+" 0,0,0 "+a+" 0 a "+n+","+s+" 0,0,0 "+-a+" 0 l 0,"+i+" a "+n+","+s+" 0,0,0 "+a+" 0 l 0,"+-i,l=e.attr("label-offset-y",s).insert("path",":first-child").attr("d",o).attr("transform","translate("+-a/2+","+-(i/2+s)+")");return r.intersect=function(e){const t=intersectRect(r,e),a=t.x-r.x;if(0!=n&&(Math.abs(a)<r.width/2||Math.abs(a)==r.width/2&&Math.abs(t.y-r.y)>r.height/2-s)){let i=s*s*(1-a*a/(n*n));0!=i&&(i=Math.sqrt(i)),i=s-i,e.y-r.y>0&&(i=-i),t.y+=i}return t},l}function addToRender(e){e.shapes().question=question,e.shapes().hexagon=hexagon,e.shapes().stadium=stadium,e.shapes().subroutine=subroutine,e.shapes().cylinder=cylinder,e.shapes().rect_left_inv_arrow=rect_left_inv_arrow,e.shapes().lean_right=lean_right,e.shapes().lean_left=lean_left,e.shapes().trapezoid=trapezoid,e.shapes().inv_trapezoid=inv_trapezoid,e.shapes().rect_right_inv_arrow=rect_right_inv_arrow}function addToRenderV2(e){e({question}),e({hexagon}),e({stadium}),e({subroutine}),e({cylinder}),e({rect_left_inv_arrow}),e({lean_right}),e({lean_left}),e({trapezoid}),e({inv_trapezoid}),e({rect_right_inv_arrow})}function insertPolygonShape(e,t,r,a){return e.insert("polygon",":first-child").attr("points",a.map((function(e){return e.x+","+e.y})).join(" ")).attr("transform","translate("+-t/2+","+r/2+")")}const flowChartShapes={addToRender,addToRenderV2},conf={},setConf=function(e){const t=Object.keys(e);for(const r of t)conf[r]=e[r]},addVertices=function(e,t,r,a,n,s){const i=a?a.select(`[id="${r}"]`):d3select(`[id="${r}"]`),o=n||document;Object.keys(e).forEach((function(r){const a=e[r];let n="default";a.classes.length>0&&(n=a.classes.join(" "));const l=getStylesFromArray(a.styles);let d,c=void 0!==a.text?a.text:a.id;if(evaluate(getConfig().flowchart.htmlLabels)){const e={label:c.replace(/fa[blrs]?:fa-[\w-]+/g,(e=>`<i class='${e.replace(":"," ")}'></i>`))};d=addHtmlLabel(i,e).node(),d.parentNode.removeChild(d)}else{const e=o.createElementNS("http://www.w3.org/2000/svg","text");e.setAttribute("style",l.labelStyle.replace("color:","fill:"));const t=c.split(common.lineBreakRegex);for(const r of t){const t=o.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","1"),t.textContent=r,e.appendChild(t)}d=e}let h=0,p="";switch(a.type){case"round":h=5,p="rect";break;case"square":case"group":default:p="rect";break;case"diamond":p="question";break;case"hexagon":p="hexagon";break;case"odd":case"odd_right":p="rect_left_inv_arrow";break;case"lean_right":p="lean_right";break;case"lean_left":p="lean_left";break;case"trapezoid":p="trapezoid";break;case"inv_trapezoid":p="inv_trapezoid";break;case"circle":p="circle";break;case"ellipse":p="ellipse";break;case"stadium":p="stadium";break;case"subroutine":p="subroutine";break;case"cylinder":p="cylinder"}log.warn("Adding node",a.id,a.domId),t.setNode(s.db.lookUpDomId(a.id),{labelType:"svg",labelStyle:l.labelStyle,shape:p,label:d,rx:h,ry:h,class:n,style:l.style,id:s.db.lookUpDomId(a.id)})}))},addEdges=function(e,t,r){let a,n,s=0;if(void 0!==e.defaultStyle){const t=getStylesFromArray(e.defaultStyle);a=t.style,n=t.labelStyle}e.forEach((function(i){s++;const o="L-"+i.start+"-"+i.end,l="LS-"+i.start,d="LE-"+i.end,c={};"arrow_open"===i.type?c.arrowhead="none":c.arrowhead="normal";let h="",p="";if(void 0!==i.style){const e=getStylesFromArray(i.style);h=e.style,p=e.labelStyle}else switch(i.stroke){case"normal":h="fill:none",void 0!==a&&(h=a),void 0!==n&&(p=n);break;case"dotted":h="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":h=" stroke-width: 3.5px;fill:none"}c.style=h,c.labelStyle=p,void 0!==i.interpolate?c.curve=interpolateToCurve(i.interpolate,curveLinear):void 0!==e.defaultInterpolate?c.curve=interpolateToCurve(e.defaultInterpolate,curveLinear):c.curve=interpolateToCurve(conf.curve,curveLinear),void 0===i.text?void 0!==i.style&&(c.arrowheadStyle="fill: #333"):(c.arrowheadStyle="fill: #333",c.labelpos="c",evaluate(getConfig().flowchart.htmlLabels)?(c.labelType="html",c.label=`<span id="L-${o}" class="edgeLabel L-${l}' L-${d}" style="${c.labelStyle}">${i.text.replace(/fa[blrs]?:fa-[\w-]+/g,(e=>`<i class='${e.replace(":"," ")}'></i>`))}</span>`):(c.labelType="text",c.label=i.text.replace(common.lineBreakRegex,"\n"),void 0===i.style&&(c.style=c.style||"stroke: #333; stroke-width: 1.5px;fill:none"),c.labelStyle=c.labelStyle.replace("color:","fill:"))),c.id=o,c.class=l+" "+d,c.minlen=i.length||1,t.setEdge(r.db.lookUpDomId(i.start),r.db.lookUpDomId(i.end),c,s)}))},getClasses=function(e,t){log.info("Extracting classes"),t.db.clear();try{return t.parse(e),t.db.getClasses()}catch(e){return log.error(e),{}}},draw=function(e,t,r,a){log.info("Drawing flowchart"),a.db.clear();const{securityLevel:n,flowchart:s}=getConfig();let i;"sandbox"===n&&(i=d3select("#i"+t));const o=d3select("sandbox"===n?i.nodes()[0].contentDocument.body:"body"),l="sandbox"===n?i.nodes()[0].contentDocument:document;let d=a.db.getDirection();void 0===d&&(d="TD");const c=s.nodeSpacing||50,h=s.rankSpacing||50,p=new Graph({multigraph:!0,compound:!0}).setGraph({rankdir:d,nodesep:c,ranksep:h,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));let u;const g=a.db.getSubGraphs();for(let e=g.length-1;e>=0;e--)u=g[e],a.db.addVertex(u.id,u.title,"group",void 0,u.classes);const f=a.db.getVertices();log.warn("Get vertices",f);const y=a.db.getEdges();let b=0;for(b=g.length-1;b>=0;b--){u=g[b],selectAll("cluster").append("text");for(let e=0;e<u.nodes.length;e++)log.warn("Setting subgraph",u.nodes[e],a.db.lookUpDomId(u.nodes[e]),a.db.lookUpDomId(u.id)),p.setParent(a.db.lookUpDomId(u.nodes[e]),a.db.lookUpDomId(u.id))}addVertices(f,p,t,o,l,a),addEdges(y,p,a);const x=new render;flowChartShapes.addToRender(x),x.arrows().none=function(e,t,r,a){const n=e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 0 0 L 0 0 z");applyStyle(n,r[a+"Style"])},x.arrows().normal=function(e,t){e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowheadPath").style("stroke-width",1).style("stroke-dasharray","1,0")};const w=o.select(`[id="${t}"]`),m=o.select("#"+t+" g");for(x(m,p),m.selectAll("g.node").attr("title",(function(){return a.db.getTooltip(this.id)})),a.db.indexNodes("subGraph"+b),b=0;b<g.length;b++)if(u=g[b],"undefined"!==u.title){const e=l.querySelectorAll("#"+t+' [id="'+a.db.lookUpDomId(u.id)+'"] rect'),r=l.querySelectorAll("#"+t+' [id="'+a.db.lookUpDomId(u.id)+'"]'),n=e[0].x.baseVal.value,s=e[0].y.baseVal.value,i=e[0].width.baseVal.value,o=d3select(r[0]).select(".label");o.attr("transform",`translate(${n+i/2}, ${s+14})`),o.attr("id",t+"Text");for(let e=0;e<u.classes.length;e++)r[0].classList.add(u.classes[e])}if(!s.htmlLabels){const e=l.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const t of e){const e=t.getBBox(),r=l.createElementNS("http://www.w3.org/2000/svg","rect");r.setAttribute("rx",0),r.setAttribute("ry",0),r.setAttribute("width",e.width),r.setAttribute("height",e.height),t.insertBefore(r,t.firstChild)}}setupGraphViewbox(p,w,s.diagramPadding,s.useMaxWidth),Object.keys(f).forEach((function(e){const r=f[e];if(r.link){const s=o.select("#"+t+' [id="'+a.db.lookUpDomId(e)+'"]');if(s){const e=l.createElementNS("http://www.w3.org/2000/svg","a");e.setAttributeNS("http://www.w3.org/2000/svg","class",r.classes.join(" ")),e.setAttributeNS("http://www.w3.org/2000/svg","href",r.link),e.setAttributeNS("http://www.w3.org/2000/svg","rel","noopener"),"sandbox"===n?e.setAttributeNS("http://www.w3.org/2000/svg","target","_top"):r.linkTarget&&e.setAttributeNS("http://www.w3.org/2000/svg","target",r.linkTarget);const t=s.insert((function(){return e}),":first-child"),a=s.select(".label-container");a&&t.append((function(){return a.node()}));const i=s.select(".label");i&&t.append((function(){return i.node()}))}}}))},flowRenderer={setConf,addVertices,addEdges,getClasses,draw},diagram={parser:parser$1,db:flowDb,renderer:flowRendererV2,styles:flowStyles,init:e=>{e.flowchart||(e.flowchart={}),e.flowchart.arrowMarkerAbsolute=e.arrowMarkerAbsolute,flowRenderer.setConf(e.flowchart),flowDb.clear(),flowDb.setGen("gen-1")}};export{diagram};