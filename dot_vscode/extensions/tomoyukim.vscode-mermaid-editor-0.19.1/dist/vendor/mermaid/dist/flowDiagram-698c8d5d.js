import{p as parser,f as flowDb}from"./flowDb-8f9fc471.js";import*as graphlib from"dagre-d3-es/src/graphlib/index.js";import{select,curveLinear,selectAll}from"d3";import{k as getStylesFromArray,n as evaluate,c as getConfig,e as common,l as log,o as interpolateToCurve,p as setupGraphViewbox}from"./mermaid-a98f434b.js";import{render}from"dagre-d3-es";import{applyStyle}from"dagre-d3-es/src/dagre-js/util.js";import{addHtmlLabel}from"dagre-d3-es/src/dagre-js/label/add-html-label.js";import{intersectPolygon}from"dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js";import{intersectRect}from"dagre-d3-es/src/dagre-js/intersect/intersect-rect.js";import{f as flowRendererV2,a as flowStyles}from"./styles-ff678862.js";import"ts-dedent";import"dayjs";import"@braintree/sanitize-url";import"dompurify";import"khroma";import"lodash-es/memoize.js";import"stylis";import"lodash-es/isEmpty.js";import"./index-4c4adb72.js";import"dagre-d3-es/src/dagre/index.js";import"dagre-d3-es/src/graphlib/json.js";import"./edges-b00f0ec2.js";import"./createText-285e50b4.js";import"mdast-util-from-markdown";import"./svgDraw-5d8a058e.js";function question(e,t,r){const o=.9*(t.width+t.height),a=[{x:o/2,y:0},{x:o,y:-o/2},{x:o/2,y:-o},{x:0,y:-o/2}],n=insertPolygonShape(e,o,o,a);return r.intersect=function(e){return intersectPolygon(r,a,e)},n}function hexagon(e,t,r){const o=t.height,a=o/4,n=t.width+2*a,s=[{x:a,y:0},{x:n-a,y:0},{x:n,y:-o/2},{x:n-a,y:-o},{x:a,y:-o},{x:0,y:-o/2}],i=insertPolygonShape(e,n,o,s);return r.intersect=function(e){return intersectPolygon(r,s,e)},i}function rect_left_inv_arrow(e,t,r){const o=t.width,a=t.height,n=[{x:-a/2,y:0},{x:o,y:0},{x:o,y:-a},{x:-a/2,y:-a},{x:0,y:-a/2}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function lean_right(e,t,r){const o=t.width,a=t.height,n=[{x:-2*a/6,y:0},{x:o-a/6,y:0},{x:o+2*a/6,y:-a},{x:a/6,y:-a}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function lean_left(e,t,r){const o=t.width,a=t.height,n=[{x:2*a/6,y:0},{x:o+a/6,y:0},{x:o-2*a/6,y:-a},{x:-a/6,y:-a}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function trapezoid(e,t,r){const o=t.width,a=t.height,n=[{x:-2*a/6,y:0},{x:o+2*a/6,y:0},{x:o-a/6,y:-a},{x:a/6,y:-a}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function inv_trapezoid(e,t,r){const o=t.width,a=t.height,n=[{x:a/6,y:0},{x:o-a/6,y:0},{x:o+2*a/6,y:-a},{x:-2*a/6,y:-a}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function rect_right_inv_arrow(e,t,r){const o=t.width,a=t.height,n=[{x:0,y:0},{x:o+a/2,y:0},{x:o,y:-a/2},{x:o+a/2,y:-a},{x:0,y:-a}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function stadium(e,t,r){const o=t.height,a=t.width+o/4,n=e.insert("rect",":first-child").attr("rx",o/2).attr("ry",o/2).attr("x",-a/2).attr("y",-o/2).attr("width",a).attr("height",o);return r.intersect=function(e){return intersectRect(r,e)},n}function subroutine(e,t,r){const o=t.width,a=t.height,n=[{x:0,y:0},{x:o,y:0},{x:o,y:-a},{x:0,y:-a},{x:0,y:0},{x:-8,y:0},{x:o+8,y:0},{x:o+8,y:-a},{x:-8,y:-a},{x:-8,y:0}],s=insertPolygonShape(e,o,a,n);return r.intersect=function(e){return intersectPolygon(r,n,e)},s}function cylinder(e,t,r){const o=t.width,a=o/2,n=a/(2.5+o/50),s=t.height+n,i="M 0,"+n+" a "+a+","+n+" 0,0,0 "+o+" 0 a "+a+","+n+" 0,0,0 "+-o+" 0 l 0,"+s+" a "+a+","+n+" 0,0,0 "+o+" 0 l 0,"+-s,l=e.attr("label-offset-y",n).insert("path",":first-child").attr("d",i).attr("transform","translate("+-o/2+","+-(s/2+n)+")");return r.intersect=function(e){const t=intersectRect(r,e),o=t.x-r.x;if(0!=a&&(Math.abs(o)<r.width/2||Math.abs(o)==r.width/2&&Math.abs(t.y-r.y)>r.height/2-n)){let s=n*n*(1-o*o/(a*a));0!=s&&(s=Math.sqrt(s)),s=n-s,e.y-r.y>0&&(s=-s),t.y+=s}return t},l}function addToRender(e){e.shapes().question=question,e.shapes().hexagon=hexagon,e.shapes().stadium=stadium,e.shapes().subroutine=subroutine,e.shapes().cylinder=cylinder,e.shapes().rect_left_inv_arrow=rect_left_inv_arrow,e.shapes().lean_right=lean_right,e.shapes().lean_left=lean_left,e.shapes().trapezoid=trapezoid,e.shapes().inv_trapezoid=inv_trapezoid,e.shapes().rect_right_inv_arrow=rect_right_inv_arrow}function addToRenderV2(e){e({question}),e({hexagon}),e({stadium}),e({subroutine}),e({cylinder}),e({rect_left_inv_arrow}),e({lean_right}),e({lean_left}),e({trapezoid}),e({inv_trapezoid}),e({rect_right_inv_arrow})}function insertPolygonShape(e,t,r,o){return e.insert("polygon",":first-child").attr("points",o.map((function(e){return e.x+","+e.y})).join(" ")).attr("transform","translate("+-t/2+","+r/2+")")}const flowChartShapes={addToRender,addToRenderV2},conf={},setConf=function(e){const t=Object.keys(e);for(const r of t)conf[r]=e[r]},addVertices=function(e,t,r,o,a,n){const s=o?o.select(`[id="${r}"]`):select(`[id="${r}"]`),i=a||document;Object.keys(e).forEach((function(r){const o=e[r];let a="default";o.classes.length>0&&(a=o.classes.join(" "));const l=getStylesFromArray(o.styles);let d,c=void 0!==o.text?o.text:o.id;if(evaluate(getConfig().flowchart.htmlLabels)){const e={label:c.replace(/fa[blrs]?:fa-[\w-]+/g,(e=>`<i class='${e.replace(":"," ")}'></i>`))};d=addHtmlLabel(s,e).node(),d.parentNode.removeChild(d)}else{const e=i.createElementNS("http://www.w3.org/2000/svg","text");e.setAttribute("style",l.labelStyle.replace("color:","fill:"));const t=c.split(common.lineBreakRegex);for(const r of t){const t=i.createElementNS("http://www.w3.org/2000/svg","tspan");t.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.setAttribute("dy","1em"),t.setAttribute("x","1"),t.textContent=r,e.appendChild(t)}d=e}let h=0,p="";switch(o.type){case"round":h=5,p="rect";break;case"square":case"group":default:p="rect";break;case"diamond":p="question";break;case"hexagon":p="hexagon";break;case"odd":case"odd_right":p="rect_left_inv_arrow";break;case"lean_right":p="lean_right";break;case"lean_left":p="lean_left";break;case"trapezoid":p="trapezoid";break;case"inv_trapezoid":p="inv_trapezoid";break;case"circle":p="circle";break;case"ellipse":p="ellipse";break;case"stadium":p="stadium";break;case"subroutine":p="subroutine";break;case"cylinder":p="cylinder"}log.warn("Adding node",o.id,o.domId),t.setNode(n.db.lookUpDomId(o.id),{labelType:"svg",labelStyle:l.labelStyle,shape:p,label:d,rx:h,ry:h,class:a,style:l.style,id:n.db.lookUpDomId(o.id)})}))},addEdges=function(e,t,r){let o,a,n=0;if(void 0!==e.defaultStyle){const t=getStylesFromArray(e.defaultStyle);o=t.style,a=t.labelStyle}e.forEach((function(s){n++;const i="L-"+s.start+"-"+s.end,l="LS-"+s.start,d="LE-"+s.end,c={};"arrow_open"===s.type?c.arrowhead="none":c.arrowhead="normal";let h="",p="";if(void 0!==s.style){const e=getStylesFromArray(s.style);h=e.style,p=e.labelStyle}else switch(s.stroke){case"normal":h="fill:none",void 0!==o&&(h=o),void 0!==a&&(p=a);break;case"dotted":h="fill:none;stroke-width:2px;stroke-dasharray:3;";break;case"thick":h=" stroke-width: 3.5px;fill:none"}c.style=h,c.labelStyle=p,void 0!==s.interpolate?c.curve=interpolateToCurve(s.interpolate,curveLinear):void 0!==e.defaultInterpolate?c.curve=interpolateToCurve(e.defaultInterpolate,curveLinear):c.curve=interpolateToCurve(conf.curve,curveLinear),void 0===s.text?void 0!==s.style&&(c.arrowheadStyle="fill: #333"):(c.arrowheadStyle="fill: #333",c.labelpos="c",evaluate(getConfig().flowchart.htmlLabels)?(c.labelType="html",c.label=`<span id="L-${i}" class="edgeLabel L-${l}' L-${d}" style="${c.labelStyle}">${s.text.replace(/fa[blrs]?:fa-[\w-]+/g,(e=>`<i class='${e.replace(":"," ")}'></i>`))}</span>`):(c.labelType="text",c.label=s.text.replace(common.lineBreakRegex,"\n"),void 0===s.style&&(c.style=c.style||"stroke: #333; stroke-width: 1.5px;fill:none"),c.labelStyle=c.labelStyle.replace("color:","fill:"))),c.id=i,c.class=l+" "+d,c.minlen=s.length||1,t.setEdge(r.db.lookUpDomId(s.start),r.db.lookUpDomId(s.end),c,n)}))},getClasses=function(e,t){log.info("Extracting classes"),t.db.clear();try{return t.parse(e),t.db.getClasses()}catch(e){return log.error(e),{}}},draw=function(e,t,r,o){log.info("Drawing flowchart"),o.db.clear();const{securityLevel:a,flowchart:n}=getConfig();let s;"sandbox"===a&&(s=select("#i"+t));const i=select("sandbox"===a?s.nodes()[0].contentDocument.body:"body"),l="sandbox"===a?s.nodes()[0].contentDocument:document;let d=o.db.getDirection();void 0===d&&(d="TD");const c=n.nodeSpacing||50,h=n.rankSpacing||50,p=new graphlib.Graph({multigraph:!0,compound:!0}).setGraph({rankdir:d,nodesep:c,ranksep:h,marginx:8,marginy:8}).setDefaultEdgeLabel((function(){return{}}));let g;const u=o.db.getSubGraphs();for(let e=u.length-1;e>=0;e--)g=u[e],o.db.addVertex(g.id,g.title,"group",void 0,g.classes);const f=o.db.getVertices();log.warn("Get vertices",f);const y=o.db.getEdges();let b=0;for(b=u.length-1;b>=0;b--){g=u[b],selectAll("cluster").append("text");for(let e=0;e<g.nodes.length;e++)log.warn("Setting subgraph",g.nodes[e],o.db.lookUpDomId(g.nodes[e]),o.db.lookUpDomId(g.id)),p.setParent(o.db.lookUpDomId(g.nodes[e]),o.db.lookUpDomId(g.id))}addVertices(f,p,t,i,l,o),addEdges(y,p,o);const w=new render;flowChartShapes.addToRender(w),w.arrows().none=function(e,t,r,o){const a=e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 0 0 L 0 0 z");applyStyle(a,r[o+"Style"])},w.arrows().normal=function(e,t){e.append("marker").attr("id",t).attr("viewBox","0 0 10 10").attr("refX",9).attr("refY",5).attr("markerUnits","strokeWidth").attr("markerWidth",8).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M 0 0 L 10 5 L 0 10 z").attr("class","arrowheadPath").style("stroke-width",1).style("stroke-dasharray","1,0")};const m=i.select(`[id="${t}"]`),x=i.select("#"+t+" g");for(w(x,p),x.selectAll("g.node").attr("title",(function(){return o.db.getTooltip(this.id)})),o.db.indexNodes("subGraph"+b),b=0;b<u.length;b++)if(g=u[b],"undefined"!==g.title){const e=l.querySelectorAll("#"+t+' [id="'+o.db.lookUpDomId(g.id)+'"] rect'),r=l.querySelectorAll("#"+t+' [id="'+o.db.lookUpDomId(g.id)+'"]'),a=e[0].x.baseVal.value,n=e[0].y.baseVal.value,s=e[0].width.baseVal.value,i=select(r[0]).select(".label");i.attr("transform",`translate(${a+s/2}, ${n+14})`),i.attr("id",t+"Text");for(let e=0;e<g.classes.length;e++)r[0].classList.add(g.classes[e])}if(!n.htmlLabels){const e=l.querySelectorAll('[id="'+t+'"] .edgeLabel .label');for(const t of e){const e=t.getBBox(),r=l.createElementNS("http://www.w3.org/2000/svg","rect");r.setAttribute("rx",0),r.setAttribute("ry",0),r.setAttribute("width",e.width),r.setAttribute("height",e.height),t.insertBefore(r,t.firstChild)}}setupGraphViewbox(p,m,n.diagramPadding,n.useMaxWidth),Object.keys(f).forEach((function(e){const r=f[e];if(r.link){const n=i.select("#"+t+' [id="'+o.db.lookUpDomId(e)+'"]');if(n){const e=l.createElementNS("http://www.w3.org/2000/svg","a");e.setAttributeNS("http://www.w3.org/2000/svg","class",r.classes.join(" ")),e.setAttributeNS("http://www.w3.org/2000/svg","href",r.link),e.setAttributeNS("http://www.w3.org/2000/svg","rel","noopener"),"sandbox"===a?e.setAttributeNS("http://www.w3.org/2000/svg","target","_top"):r.linkTarget&&e.setAttributeNS("http://www.w3.org/2000/svg","target",r.linkTarget);const t=n.insert((function(){return e}),":first-child"),o=n.select(".label-container");o&&t.append((function(){return o.node()}));const s=n.select(".label");s&&t.append((function(){return s.node()}))}}}))},flowRenderer={setConf,addVertices,addEdges,getClasses,draw},diagram={parser,db:flowDb,renderer:flowRendererV2,styles:flowStyles,init:e=>{e.flowchart||(e.flowchart={}),e.flowchart.arrowMarkerAbsolute=e.arrowMarkerAbsolute,flowRenderer.setConf(e.flowchart),flowDb.clear(),flowDb.setGen("gen-1")}};export{diagram};