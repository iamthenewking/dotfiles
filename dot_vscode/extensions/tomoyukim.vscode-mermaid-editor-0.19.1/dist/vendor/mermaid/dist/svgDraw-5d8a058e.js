import{line,curveBasis}from"d3";import{u as utils,l as log,x as parseGenericTypes}from"./mermaid-a98f434b.js";let edgeCount=0;const drawEdge=function(t,e,i,a,n){const r=function(t){switch(t){case n.db.relationType.AGGREGATION:return"aggregation";case n.db.relationType.EXTENSION:return"extension";case n.db.relationType.COMPOSITION:return"composition";case n.db.relationType.DEPENDENCY:return"dependency";case n.db.relationType.LOLLIPOP:return"lollipop"}};e.points=e.points.filter((t=>!Number.isNaN(t.y)));const s=e.points,d=line().x((function(t){return t.x})).y((function(t){return t.y})).curve(curveBasis),l=t.append("path").attr("d",d(s)).attr("id","edge"+edgeCount).attr("class","relation");let o,p,g="";a.arrowMarkerAbsolute&&(g=window.location.protocol+"//"+window.location.host+window.location.pathname+window.location.search,g=g.replace(/\(/g,"\\("),g=g.replace(/\)/g,"\\)")),1==i.relation.lineType&&l.attr("class","relation dashed-line"),10==i.relation.lineType&&l.attr("class","relation dotted-line"),"none"!==i.relation.type1&&l.attr("marker-start","url("+g+"#"+r(i.relation.type1)+"Start)"),"none"!==i.relation.type2&&l.attr("marker-end","url("+g+"#"+r(i.relation.type2)+"End)");const c=e.points.length;let h,x,u,y,f=utils.calcLabelPosition(e.points);if(o=f.x,p=f.y,c%2!=0&&c>1){let t=utils.calcCardinalityPosition("none"!==i.relation.type1,e.points,e.points[0]),a=utils.calcCardinalityPosition("none"!==i.relation.type2,e.points,e.points[c-1]);log.debug("cardinality_1_point "+JSON.stringify(t)),log.debug("cardinality_2_point "+JSON.stringify(a)),h=t.x,x=t.y,u=a.x,y=a.y}if(void 0!==i.title){const e=t.append("g").attr("class","classLabel"),n=e.append("text").attr("class","label").attr("x",o).attr("y",p).attr("fill","red").attr("text-anchor","middle").text(i.title);window.label=n;const r=n.node().getBBox();e.insert("rect",":first-child").attr("class","box").attr("x",r.x-a.padding/2).attr("y",r.y-a.padding/2).attr("width",r.width+a.padding).attr("height",r.height+a.padding)}log.info("Rendering relation "+JSON.stringify(i)),void 0!==i.relationTitle1&&"none"!==i.relationTitle1&&t.append("g").attr("class","cardinality").append("text").attr("class","type1").attr("x",h).attr("y",x).attr("fill","black").attr("font-size","6").text(i.relationTitle1),void 0!==i.relationTitle2&&"none"!==i.relationTitle2&&t.append("g").attr("class","cardinality").append("text").attr("class","type2").attr("x",u).attr("y",y).attr("fill","black").attr("font-size","6").text(i.relationTitle2),edgeCount++},drawClass=function(t,e,i,a){log.debug("Rendering class ",e,i);const n=e.id,r={id:n,label:e.id,width:0,height:0},s=t.append("g").attr("id",a.db.lookUpDomId(n)).attr("class","classGroup");let d;d=e.link?s.append("svg:a").attr("xlink:href",e.link).attr("target",e.linkTarget).append("text").attr("y",i.textHeight+i.padding).attr("x",0):s.append("text").attr("y",i.textHeight+i.padding).attr("x",0);let l=!0;e.annotations.forEach((function(t){const e=d.append("tspan").text("«"+t+"»");l||e.attr("dy",i.textHeight),l=!1}));let o=getClassTitleString(e);const p=d.append("tspan").text(o).attr("class","title");l||p.attr("dy",i.textHeight);const g=d.node().getBBox().height,c=s.append("line").attr("x1",0).attr("y1",i.padding+g+i.dividerMargin/2).attr("y2",i.padding+g+i.dividerMargin/2),h=s.append("text").attr("x",i.padding).attr("y",g+i.dividerMargin+i.textHeight).attr("fill","white").attr("class","classText");l=!0,e.members.forEach((function(t){addTspan(h,t,l,i),l=!1}));const x=h.node().getBBox(),u=s.append("line").attr("x1",0).attr("y1",i.padding+g+i.dividerMargin+x.height).attr("y2",i.padding+g+i.dividerMargin+x.height),y=s.append("text").attr("x",i.padding).attr("y",g+2*i.dividerMargin+x.height+i.textHeight).attr("fill","white").attr("class","classText");l=!0,e.methods.forEach((function(t){addTspan(y,t,l,i),l=!1}));const f=s.node().getBBox();var w=" ";e.cssClasses.length>0&&(w+=e.cssClasses.join(" "));const b=s.insert("rect",":first-child").attr("x",0).attr("y",0).attr("width",f.width+2*i.padding).attr("height",f.height+i.padding+.5*i.dividerMargin).attr("class",w).node().getBBox().width;return d.node().childNodes.forEach((function(t){t.setAttribute("x",(b-t.getBBox().width)/2)})),e.tooltip&&d.insert("title").text(e.tooltip),c.attr("x2",b),u.attr("x2",b),r.width=b,r.height=f.height+i.padding+.5*i.dividerMargin,r},getClassTitleString=function(t){let e=t.id;return t.type&&(e+="<"+t.type+">"),e},drawNote=function(t,e,i,a){log.debug("Rendering note ",e,i);const n=e.id,r={id:n,text:e.text,width:0,height:0},s=t.append("g").attr("id",n).attr("class","classGroup");let d=s.append("text").attr("y",i.textHeight+i.padding).attr("x",0);const l=JSON.parse(`"${e.text}"`).split("\n");l.forEach((function(t){log.debug(`Adding line: ${t}`),d.append("tspan").text(t).attr("class","title").attr("dy",i.textHeight)}));const o=s.node().getBBox(),p=s.insert("rect",":first-child").attr("x",0).attr("y",0).attr("width",o.width+2*i.padding).attr("height",o.height+l.length*i.textHeight+i.padding+.5*i.dividerMargin).node().getBBox().width;return d.node().childNodes.forEach((function(t){t.setAttribute("x",(p-t.getBBox().width)/2)})),r.width=p,r.height=o.height+l.length*i.textHeight+i.padding+.5*i.dividerMargin,r},parseMember=function(t){let e="",i="",a="",n="",r=t.substring(0,1),s=t.substring(t.length-1,t.length);r.match(/[#+~-]/)&&(n=r);let d=/[\s\w)~]/;s.match(d)||(i=parseClassifier(s));const l=""===n?0:1;let o=""===i?t.length:t.length-1;const p=(t=t.substring(l,o)).indexOf("("),g=t.indexOf(")");if(p>1&&g>p&&g<=t.length){let r=t.substring(0,p).trim();const s=t.substring(p+1,g);if(e=n+r+"("+parseGenericTypes(s.trim())+")",g<t.length){let n=t.substring(g+1,g+2);""!==i||n.match(d)?a=t.substring(g+1).trim():(i=parseClassifier(n),a=t.substring(g+2).trim()),""!==a&&(":"===a.charAt(0)&&(a=a.substring(1).trim()),a=" : "+parseGenericTypes(a),e+=a)}}else e=n+parseGenericTypes(t);return{displayText:e,cssStyle:i}},addTspan=function(t,e,i,a){let n=parseMember(e);const r=t.append("tspan").attr("x",a.padding).text(n.displayText);""!==n.cssStyle&&r.attr("style",n.cssStyle),i||r.attr("dy",a.textHeight)},parseClassifier=function(t){switch(t){case"*":return"font-style:italic;";case"$":return"text-decoration:underline;";default:return""}},svgDraw={getClassTitleString,drawClass,drawEdge,drawNote,parseMember};export{parseMember as p,svgDraw as s};