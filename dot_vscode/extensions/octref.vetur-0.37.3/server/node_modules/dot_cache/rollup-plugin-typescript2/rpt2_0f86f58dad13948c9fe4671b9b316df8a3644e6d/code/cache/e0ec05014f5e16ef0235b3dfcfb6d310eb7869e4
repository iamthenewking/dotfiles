{"code":"import _ from 'lodash';\r\nimport * as emmet from 'vscode-emmet-helper';\r\nimport { TextEdit } from 'vscode-languageserver-types';\r\nimport { StylePriority } from '../emmet';\r\nimport { getLanguageModelCache } from '../../../embeddedSupport/languageModelCache';\r\nimport { provideCompletionItems } from './completion-item';\r\nimport { provideDocumentSymbols } from './symbols-finder';\r\nimport { stylusHover } from './stylus-hover';\r\nimport { getFileFsPath } from '../../../utils/paths';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\nexport function getStylusMode(env, documentRegions, dependencyService) {\r\n    const embeddedDocuments = getLanguageModelCache(10, 60, document => documentRegions.refreshAndGet(document).getSingleLanguageDocument('stylus'));\r\n    return {\r\n        getId: () => 'stylus',\r\n        onDocumentRemoved() { },\r\n        dispose() { },\r\n        doComplete(document, position) {\r\n            const embedded = embeddedDocuments.refreshAndGet(document);\r\n            const useSeparator = typeof env.getConfig().languageStylus.useSeparator === 'undefined'\r\n                ? true\r\n                : env.getConfig().languageStylus.useSeparator;\r\n            const lsCompletions = provideCompletionItems(embedded, position, useSeparator);\r\n            const lsItems = _.map(lsCompletions.items, i => {\r\n                return Object.assign(Object.assign({}, i), { sortText: StylePriority.Platform + i.label });\r\n            });\r\n            const emmetCompletions = emmet.doComplete(document, position, 'stylus', env.getConfig().emmet);\r\n            if (!emmetCompletions) {\r\n                return { isIncomplete: false, items: lsItems };\r\n            }\r\n            else {\r\n                const emmetItems = emmetCompletions.items.map(i => {\r\n                    return Object.assign(Object.assign({}, i), { sortText: StylePriority.Emmet + i.label });\r\n                });\r\n                return {\r\n                    isIncomplete: emmetCompletions.isIncomplete,\r\n                    items: _.concat(emmetItems, lsItems)\r\n                };\r\n            }\r\n        },\r\n        findDocumentSymbols(document) {\r\n            const embedded = embeddedDocuments.refreshAndGet(document);\r\n            return provideDocumentSymbols(embedded);\r\n        },\r\n        doHover(document, position) {\r\n            const embedded = embeddedDocuments.refreshAndGet(document);\r\n            return stylusHover(embedded, position);\r\n        },\r\n        format(document, range, formatParams) {\r\n            if (env.getConfig().vetur.format.defaultFormatter.stylus === 'none') {\r\n                return [];\r\n            }\r\n            const stylusSupremacy = dependencyService.get('stylus-supremacy', getFileFsPath(document.uri)).module;\r\n            const inputText = document.getText(range);\r\n            const vlsFormatConfig = env.getConfig().vetur.format;\r\n            const tabStopChar = vlsFormatConfig.options.useTabs ? '\\t' : ' '.repeat(vlsFormatConfig.options.tabSize);\r\n            // Note that this would have been `document.eol` ideally\r\n            const newLineChar = inputText.includes('\\r\\n') ? '\\r\\n' : '\\n';\r\n            // Determine the base indentation for the multi-line Stylus content\r\n            let baseIndent = '';\r\n            if (range.start.line !== range.end.line) {\r\n                const styleTagLine = document.getText().split(/\\r?\\n/)[range.start.line];\r\n                if (styleTagLine) {\r\n                    baseIndent = _.get(styleTagLine.match(/^(\\t|\\s)+/), '0', '');\r\n                }\r\n            }\r\n            // Add one more indentation when `vetur.format.styleInitialIndent` is set to `true`\r\n            if (env.getConfig().vetur.format.scriptInitialIndent) {\r\n                baseIndent += tabStopChar;\r\n            }\r\n            // Build the formatting options for Stylus Supremacy\r\n            // See https://thisismanta.github.io/stylus-supremacy/#options\r\n            const stylusSupremacyFormattingOptions = stylusSupremacy.createFormattingOptions(env.getConfig().stylusSupremacy || {});\r\n            // read .stylintrc file if it exists and give it priority over VS Code settings\r\n            const stylintrcPath = path.join(env.getProjectRoot(), '.stylintrc');\r\n            let stylusStylintOptions = {};\r\n            if (fs.existsSync(stylintrcPath)) {\r\n                try {\r\n                    const stylintOptions = JSON.parse(fs.readFileSync(stylintrcPath, 'utf-8'));\r\n                    stylusStylintOptions = stylusSupremacy.createFormattingOptionsFromStylint(stylintOptions);\r\n                }\r\n                catch (err) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n            const formattingOptions = Object.assign(Object.assign(Object.assign({}, stylusSupremacyFormattingOptions), stylusStylintOptions), { tabStopChar, newLineChar: '\\n' });\r\n            const formattedText = stylusSupremacy.format(inputText, formattingOptions);\r\n            // Add the base indentation and correct the new line characters\r\n            const outputText = formattedText\r\n                .split(/\\n/)\r\n                .map(line => (line.length > 0 ? baseIndent + line : ''))\r\n                .join(newLineChar);\r\n            return [TextEdit.replace(range, outputText)];\r\n        }\r\n    };\r\n}\r\nexport const wordPattern = /(#?-?\\d*\\.\\d\\w*%?)|([$@#!.:]?[\\w-?]+%?)|[$@#!.]/g;\r\n//# sourceMappingURL=index.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-emmet-helper/lib/cjs/emmetHelper.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/stylus/stylus-supremacy.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/emmet.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/languageModelCache.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/languageModes.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/embeddedSupport.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/stylus/completion-item.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/stylus/symbols-finder.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/stylus/stylus-hover.ts","/Users/yoyo930021/git/vetur/server/src/utils/paths.ts","/Users/yoyo930021/git/vetur/server/src/config.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts","/Users/yoyo930021/git/vetur/server/src/services/EnvironmentService.ts","/Users/yoyo930021/git/vetur/server/node_modules/@types/glob/index.d.ts","/Users/yoyo930021/git/vetur/server/src/modes/nullMode.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/style/stylus/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/style/stylus/index.d.ts","writeByteOrderMark":false,"text":"import { LanguageModelCache } from '../../../embeddedSupport/languageModelCache';\r\nimport { LanguageMode } from '../../../embeddedSupport/languageModes';\r\nimport { VueDocumentRegions } from '../../../embeddedSupport/embeddedSupport';\r\nimport { DependencyService } from '../../../services/dependencyService';\r\nimport { EnvironmentService } from '../../../services/EnvironmentService';\r\nexport declare function getStylusMode(env: EnvironmentService, documentRegions: LanguageModelCache<VueDocumentRegions>, dependencyService: DependencyService): LanguageMode;\r\nexport declare const wordPattern: RegExp;\r\n"}}
