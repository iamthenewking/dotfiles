{"code":"import { CompletionItemKind, SymbolKind } from 'vscode-languageserver';\r\nexport function isVueFile(path) {\r\n    return path.endsWith('.vue');\r\n}\r\n/**\r\n * If the path ends with `.vue.ts`, it's a `.vue` file pre-processed by Vetur\r\n * to be used in TS Language Service\r\n *\r\n * Note: all files outside any node_modules folder are considered,\r\n * EXCEPT if they are added to tsconfig via 'files' or 'include' properties\r\n */\r\nexport function isVirtualVueFile(path, projectFiles) {\r\n    return path.endsWith('.vue.ts') && (!path.includes('node_modules') || projectFiles.has(path.slice(0, -'.ts'.length)));\r\n}\r\n/**\r\n * If the path ends with `.vue.template`, it's a `.vue` file's template part\r\n * pre-processed by Vetur to calculate template diagnostics in TS Language Service\r\n */\r\nexport function isVirtualVueTemplateFile(path) {\r\n    return path.endsWith('.vue.template');\r\n}\r\nexport function findNodeByOffset(root, offset) {\r\n    if (offset < root.getStart() || root.getEnd() < offset) {\r\n        return undefined;\r\n    }\r\n    const childMatch = root.getChildren().reduce((matched, child) => {\r\n        return matched || findNodeByOffset(child, offset);\r\n    }, undefined);\r\n    return childMatch ? childMatch : root;\r\n}\r\nexport function toCompletionItemKind(kind) {\r\n    switch (kind) {\r\n        case 'primitive type':\r\n        case 'keyword':\r\n            return CompletionItemKind.Keyword;\r\n        case 'var':\r\n        case 'local var':\r\n            return CompletionItemKind.Variable;\r\n        case 'property':\r\n        case 'getter':\r\n        case 'setter':\r\n            return CompletionItemKind.Field;\r\n        case 'function':\r\n        case 'method':\r\n        case 'construct':\r\n        case 'call':\r\n        case 'index':\r\n            return CompletionItemKind.Function;\r\n        case 'enum':\r\n            return CompletionItemKind.Enum;\r\n        case 'module':\r\n            return CompletionItemKind.Module;\r\n        case 'class':\r\n            return CompletionItemKind.Class;\r\n        case 'interface':\r\n            return CompletionItemKind.Interface;\r\n        case 'warning':\r\n            return CompletionItemKind.File;\r\n        case 'script':\r\n            return CompletionItemKind.File;\r\n        case 'directory':\r\n            return CompletionItemKind.Folder;\r\n    }\r\n    return CompletionItemKind.Property;\r\n}\r\nexport function toSymbolKind(kind) {\r\n    switch (kind) {\r\n        case 'var':\r\n        case 'local var':\r\n        case 'const':\r\n            return SymbolKind.Variable;\r\n        case 'function':\r\n        case 'local function':\r\n            return SymbolKind.Function;\r\n        case 'enum':\r\n            return SymbolKind.Enum;\r\n        case 'module':\r\n            return SymbolKind.Module;\r\n        case 'class':\r\n            return SymbolKind.Class;\r\n        case 'interface':\r\n            return SymbolKind.Interface;\r\n        case 'method':\r\n            return SymbolKind.Method;\r\n        case 'property':\r\n        case 'getter':\r\n        case 'setter':\r\n            return SymbolKind.Property;\r\n    }\r\n    return SymbolKind.Variable;\r\n}\r\n//# sourceMappingURL=util.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/typescript/lib/typescript.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver/lib/common/api.d.ts"],"map":"{\"version\":3,\"file\":\"util.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/typescriptService/util.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/typescriptService/util.d.ts","writeByteOrderMark":false,"text":"import type ts from 'typescript';\r\nimport { CompletionItemKind, SymbolKind } from 'vscode-languageserver';\r\nexport declare function isVueFile(path: string): boolean;\r\n/**\r\n * If the path ends with `.vue.ts`, it's a `.vue` file pre-processed by Vetur\r\n * to be used in TS Language Service\r\n *\r\n * Note: all files outside any node_modules folder are considered,\r\n * EXCEPT if they are added to tsconfig via 'files' or 'include' properties\r\n */\r\nexport declare function isVirtualVueFile(path: string, projectFiles: Set<string>): boolean;\r\n/**\r\n * If the path ends with `.vue.template`, it's a `.vue` file's template part\r\n * pre-processed by Vetur to calculate template diagnostics in TS Language Service\r\n */\r\nexport declare function isVirtualVueTemplateFile(path: string): boolean;\r\nexport declare function findNodeByOffset(root: ts.Node, offset: number): ts.Node | undefined;\r\nexport declare function toCompletionItemKind(kind: ts.ScriptElementKind): CompletionItemKind;\r\nexport declare function toSymbolKind(kind: ts.ScriptElementKind): SymbolKind;\r\n"}}
