{"code":"import { getLanguageModelCache } from './languageModelCache';\r\nimport { getVueDocumentRegions } from './embeddedSupport';\r\nimport { getVueMode } from '../modes/vue';\r\nimport { getCSSMode, getSCSSMode, getLESSMode, getPostCSSMode } from '../modes/style';\r\nimport { getJavascriptMode } from '../modes/script/javascript';\r\nimport { VueHTMLMode } from '../modes/template';\r\nimport { getStylusMode } from '../modes/style/stylus';\r\nimport { nullMode } from '../modes/nullMode';\r\nimport { getServiceHost } from '../services/typescriptService/serviceHost';\r\nimport { SassLanguageMode } from '../modes/style/sass/sassLanguageMode';\r\nimport { getPugMode } from '../modes/pug';\r\nimport { createAutoImportSfcPlugin } from '../modes/plugins/autoImportSfcPlugin';\r\nexport class LanguageModes {\r\n    constructor() {\r\n        this.modes = {\r\n            vue: nullMode,\r\n            pug: nullMode,\r\n            'vue-html': nullMode,\r\n            css: nullMode,\r\n            postcss: nullMode,\r\n            scss: nullMode,\r\n            less: nullMode,\r\n            sass: nullMode,\r\n            stylus: nullMode,\r\n            javascript: nullMode,\r\n            typescript: nullMode,\r\n            tsx: nullMode,\r\n            unknown: nullMode\r\n        };\r\n        this.documentRegions = getLanguageModelCache(10, 60, document => getVueDocumentRegions(document));\r\n        this.modelCaches = [];\r\n        this.modelCaches.push(this.documentRegions);\r\n    }\r\n    async init(env, services, globalSnippetDir) {\r\n        const tsModule = services.dependencyService.get('typescript', env.getPackagePath()).module;\r\n        /**\r\n         * Documents where everything outside `<script>` is replaced with whitespace\r\n         */\r\n        const scriptRegionDocuments = getLanguageModelCache(10, 60, document => {\r\n            const vueDocument = this.documentRegions.refreshAndGet(document);\r\n            return vueDocument.getSingleTypeDocument('script');\r\n        });\r\n        this.serviceHost = getServiceHost(tsModule, env, scriptRegionDocuments);\r\n        const autoImportSfcPlugin = createAutoImportSfcPlugin(tsModule, services.infoService);\r\n        autoImportSfcPlugin.setGetTSScriptTarget(() => this.serviceHost.getComplierOptions().target);\r\n        autoImportSfcPlugin.setGetFilesFn(() => this.serviceHost.getFileNames().filter(fileName => fileName.endsWith('.vue')));\r\n        const vueHtmlMode = new VueHTMLMode(tsModule, this.serviceHost, env, this.documentRegions, autoImportSfcPlugin, services.dependencyService, services.infoService);\r\n        const jsMode = await getJavascriptMode(tsModule, this.serviceHost, env, this.documentRegions, services.dependencyService, env.getGlobalComponentInfos(), services.infoService, services.refTokensService);\r\n        autoImportSfcPlugin.setGetConfigure(env.getConfig);\r\n        autoImportSfcPlugin.setGetJSResolve(jsMode.doResolve);\r\n        this.modes['vue'] = getVueMode(env, globalSnippetDir);\r\n        this.modes['vue-html'] = vueHtmlMode;\r\n        this.modes['pug'] = getPugMode(env, services.dependencyService, this.documentRegions, services.infoService);\r\n        this.modes['css'] = getCSSMode(env, this.documentRegions, services.dependencyService);\r\n        this.modes['postcss'] = getPostCSSMode(env, this.documentRegions, services.dependencyService);\r\n        this.modes['scss'] = getSCSSMode(env, this.documentRegions, services.dependencyService);\r\n        this.modes['sass'] = new SassLanguageMode(env);\r\n        this.modes['less'] = getLESSMode(env, this.documentRegions, services.dependencyService);\r\n        this.modes['stylus'] = getStylusMode(env, this.documentRegions, services.dependencyService);\r\n        this.modes['javascript'] = jsMode;\r\n        this.modes['typescript'] = jsMode;\r\n        this.modes['tsx'] = jsMode;\r\n    }\r\n    getModeAtPosition(document, position) {\r\n        var _a;\r\n        const languageId = this.documentRegions.refreshAndGet(document).getLanguageAtPosition(position);\r\n        return (_a = this.modes) === null || _a === void 0 ? void 0 : _a[languageId];\r\n    }\r\n    getAllLanguageModeRangesInDocument(document) {\r\n        const result = [];\r\n        const documentRegions = this.documentRegions.refreshAndGet(document);\r\n        documentRegions.getAllLanguageRanges().forEach(lr => {\r\n            const mode = this.modes[lr.languageId];\r\n            if (mode) {\r\n                result.push(Object.assign({ mode }, lr));\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n    getAllModes() {\r\n        const result = [];\r\n        for (const languageId in this.modes) {\r\n            const mode = this.modes[languageId];\r\n            if (mode) {\r\n                result.push(mode);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    getMode(languageId) {\r\n        return this.modes[languageId];\r\n    }\r\n    onDocumentRemoved(document) {\r\n        this.modelCaches.forEach(mc => mc.onDocumentRemoved(document));\r\n        for (const mode in this.modes) {\r\n            this.modes[mode].onDocumentRemoved(document);\r\n        }\r\n    }\r\n    dispose() {\r\n        this.modelCaches.forEach(mc => mc.dispose());\r\n        this.modelCaches = [];\r\n        for (const mode in this.modes) {\r\n            this.modes[mode].dispose();\r\n        }\r\n        this.serviceHost.dispose();\r\n    }\r\n}\r\n//# sourceMappingURL=languageModes.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/languageModelCache.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/embeddedSupport.ts","/Users/yoyo930021/git/vetur/server/src/modes/vue/index.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/index.ts","/Users/yoyo930021/git/vetur/server/src/modes/script/javascript.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/index.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/stylus/index.ts","/Users/yoyo930021/git/vetur/server/src/types.ts","/Users/yoyo930021/git/vetur/server/src/services/vueInfoService.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts","/Users/yoyo930021/git/vetur/server/src/modes/nullMode.ts","/Users/yoyo930021/git/vetur/server/src/services/typescriptService/serviceHost.ts","/Users/yoyo930021/git/vetur/server/src/modes/style/sass/sassLanguageMode.ts","/Users/yoyo930021/git/vetur/server/src/modes/pug/index.ts","/Users/yoyo930021/git/vetur/server/src/utils/cancellationToken.ts","/Users/yoyo930021/git/vetur/server/src/modes/plugins/autoImportSfcPlugin.ts","/Users/yoyo930021/git/vetur/server/src/services/EnvironmentService.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver/lib/common/api.d.ts","/Users/yoyo930021/git/vetur/server/src/services/RefTokenService.ts"],"map":"{\"version\":3,\"file\":\"languageModes.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/embeddedSupport/languageModes.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/embeddedSupport/languageModes.d.ts","writeByteOrderMark":false,"text":"import { CompletionItem, Location, SignatureHelp, Definition, TextEdit, Diagnostic, DocumentLink, Range, Hover, DocumentHighlight, CompletionList, Position, FormattingOptions, SymbolInformation, CodeActionContext, ColorInformation, Color, ColorPresentation, CodeAction, FoldingRange, TextDocumentEdit } from 'vscode-languageserver-types';\r\nimport type { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { LanguageId, LanguageRange } from './embeddedSupport';\r\nimport { DocumentContext, SemanticTokenData } from '../types';\r\nimport { VueInfoService } from '../services/vueInfoService';\r\nimport { DependencyService } from '../services/dependencyService';\r\nimport { VCancellationToken } from '../utils/cancellationToken';\r\nimport { EnvironmentService } from '../services/EnvironmentService';\r\nimport { FileRename } from 'vscode-languageserver';\r\nimport { RefTokensService } from '../services/RefTokenService';\r\nexport interface VLSServices {\r\n    dependencyService: DependencyService;\r\n    infoService: VueInfoService;\r\n    refTokensService: RefTokensService;\r\n}\r\nexport interface LanguageMode {\r\n    getId(): string;\r\n    updateFileInfo?(doc: TextDocument): void;\r\n    doValidation?(document: TextDocument, cancellationToken?: VCancellationToken): Promise<Diagnostic[]>;\r\n    getCodeActions?(document: TextDocument, range: Range, formatParams: FormattingOptions, context: CodeActionContext): CodeAction[];\r\n    doCodeActionResolve?(document: TextDocument, action: CodeAction): CodeAction;\r\n    doComplete?(document: TextDocument, position: Position): CompletionList;\r\n    doResolve?(document: TextDocument, item: CompletionItem): CompletionItem;\r\n    doHover?(document: TextDocument, position: Position): Hover;\r\n    doSignatureHelp?(document: TextDocument, position: Position): SignatureHelp | null;\r\n    findDocumentHighlight?(document: TextDocument, position: Position): DocumentHighlight[];\r\n    findDocumentSymbols?(document: TextDocument): SymbolInformation[];\r\n    findDocumentLinks?(document: TextDocument, documentContext: DocumentContext): DocumentLink[];\r\n    findDefinition?(document: TextDocument, position: Position): Definition;\r\n    findReferences?(document: TextDocument, position: Position): Location[];\r\n    format?(document: TextDocument, range: Range, options: FormattingOptions): TextEdit[];\r\n    findDocumentColors?(document: TextDocument): ColorInformation[];\r\n    getColorPresentations?(document: TextDocument, color: Color, range: Range): ColorPresentation[];\r\n    getFoldingRanges?(document: TextDocument): FoldingRange[];\r\n    getRenameFileEdit?(renames: FileRename): TextDocumentEdit[];\r\n    getSemanticTokens?(document: TextDocument, range?: Range): SemanticTokenData[];\r\n    onDocumentChanged?(filePath: string): void;\r\n    onDocumentRemoved(document: TextDocument): void;\r\n    dispose(): void;\r\n}\r\nexport interface LanguageModeRange extends LanguageRange {\r\n    mode: LanguageMode;\r\n}\r\nexport declare class LanguageModes {\r\n    private modes;\r\n    private documentRegions;\r\n    private modelCaches;\r\n    private serviceHost;\r\n    constructor();\r\n    init(env: EnvironmentService, services: VLSServices, globalSnippetDir?: string): Promise<void>;\r\n    getModeAtPosition(document: TextDocument, position: Position): LanguageMode | undefined;\r\n    getAllLanguageModeRangesInDocument(document: TextDocument): LanguageModeRange[];\r\n    getAllModes(): LanguageMode[];\r\n    getMode(languageId: LanguageId): LanguageMode | undefined;\r\n    onDocumentRemoved(document: TextDocument): void;\r\n    dispose(): void;\r\n}\r\n"}}
