{"code":"import { Range } from 'vscode-languageserver-types';\r\nimport { getFileFsPath } from '../../utils/paths';\r\nconst INVALID_OFFSET = 0;\r\nconst INVALID_RANGE = Range.create(0, 0, 0, 0);\r\n/**\r\n * Walk through the validSourceFile, for each Node, find its corresponding Node in syntheticSourceFile.\r\n *\r\n * Generate a SourceMap with Nodes looking like this:\r\n *\r\n * SourceMapNode {\r\n *   from: {\r\n *     start: 0,\r\n *     end: 8\r\n *     filename: 'foo.vue'\r\n *   },\r\n *   to: {\r\n *     start: 0,\r\n *     end: 18\r\n *     filename: 'foo.vue.template'\r\n *   },\r\n *   offsetMapping: {\r\n *     0: 5,\r\n *     1: 6,\r\n *     2, 7\r\n *   },\r\n * }\r\n */\r\nexport function generateSourceMap(tsModule, syntheticSourceFile, validSourceFile) {\r\n    const sourceMapNodes = [];\r\n    walkBothNode(syntheticSourceFile, validSourceFile);\r\n    return foldSourceMapNodes(sourceMapNodes);\r\n    function walkBothNode(syntheticNode, validNode) {\r\n        const validNodeChildren = [];\r\n        tsModule.forEachChild(validNode, c => {\r\n            validNodeChildren.push(c);\r\n            return false;\r\n        });\r\n        const syntheticNodeChildren = [];\r\n        tsModule.forEachChild(syntheticNode, c => {\r\n            syntheticNodeChildren.push(c);\r\n            return false;\r\n        });\r\n        validNodeChildren.forEach((vc, i) => {\r\n            const sc = syntheticNodeChildren[i];\r\n            if (!sc) {\r\n                return;\r\n            }\r\n            const scSourceRange = tsModule.getSourceMapRange(sc);\r\n            /**\r\n             * `getSourceMapRange` falls back to return actual Node if sourceMap doesn't exist\r\n             * This check ensure we are checking the actual `sourceMapRange` being set\r\n             */\r\n            if (!scSourceRange.kind && scSourceRange.pos !== -1 && scSourceRange.end !== -1) {\r\n                const sourceMapNode = {\r\n                    from: {\r\n                        start: scSourceRange.pos,\r\n                        end: scSourceRange.end,\r\n                        fileName: syntheticSourceFile.fileName\r\n                    },\r\n                    to: {\r\n                        start: vc.getStart(),\r\n                        end: vc.getEnd(),\r\n                        fileName: validSourceFile.fileName\r\n                    },\r\n                    offsetMapping: {},\r\n                    offsetBackMapping: {},\r\n                    mergedNodes: []\r\n                };\r\n                const isThisInjected = tsModule.isPropertyAccessExpression(vc) && vc.expression.kind === tsModule.SyntaxKind.ThisKeyword;\r\n                updateOffsetMapping(sourceMapNode, isThisInjected, !canIncludeTrivia(tsModule, vc));\r\n                sourceMapNodes.push(sourceMapNode);\r\n            }\r\n            walkBothNode(sc, vc);\r\n        });\r\n    }\r\n}\r\n/**\r\n * Merge source map nodes when a node overwraps another node.\r\n * For example, the following expression will generates three source map nodes,\r\n * for `foo` identifier, `bar` identifier and entire binary expression `foo + bar`.\r\n *\r\n * `foo + bar`\r\n *\r\n * In this case `foo + bar` contains `foo` and `bar`. Then we will merge source map nodes\r\n * for the identifiers into the map for `foo + bar`.\r\n */\r\nfunction foldSourceMapNodes(nodes) {\r\n    return nodes.reduce((folded, node) => {\r\n        const last = folded[folded.length - 1];\r\n        if (!last) {\r\n            return folded.concat(node);\r\n        }\r\n        // Children source map nodes always appear after a parent node\r\n        // because of how we traverse source mapping in `walkBothNode` function.\r\n        if (node.from.start < last.from.start || last.from.end < node.from.end) {\r\n            return folded.concat(node);\r\n        }\r\n        last.offsetMapping = Object.assign(Object.assign({}, last.offsetMapping), node.offsetMapping);\r\n        last.offsetBackMapping = Object.assign(Object.assign({}, last.offsetBackMapping), node.offsetBackMapping);\r\n        last.mergedNodes.push(node);\r\n        return folded;\r\n    }, []);\r\n}\r\nfunction canIncludeTrivia(tsModule, node) {\r\n    return !(tsModule.isIdentifier(node) ||\r\n        tsModule.isStringLiteral(node) ||\r\n        tsModule.isNumericLiteral(node) ||\r\n        tsModule.isBigIntLiteral(node));\r\n}\r\n/**\r\n * Map a range from actual `.vue` file to `.vue.template` file\r\n */\r\nexport function mapFromPositionToOffset(document, position, sourceMap) {\r\n    const offset = document.offsetAt(position);\r\n    return mapFromOffsetToOffset(document, offset, sourceMap);\r\n}\r\n/**\r\n * Map an offset from actual `.vue` file to `.vue.template` file\r\n */\r\nfunction mapFromOffsetToOffset(document, offset, sourceMap) {\r\n    const filePath = getFileFsPath(document.uri);\r\n    if (!sourceMap[filePath]) {\r\n        return INVALID_OFFSET;\r\n    }\r\n    for (const sourceMapNode of sourceMap[filePath]) {\r\n        if (offset >= sourceMapNode.from.start && offset <= sourceMapNode.from.end) {\r\n            return sourceMapNode.offsetMapping[offset];\r\n        }\r\n    }\r\n    // Handle the case when no original range can be mapped\r\n    return INVALID_OFFSET;\r\n}\r\n/**\r\n * Map a range from actual `.vue` file to `.vue.template` file\r\n */\r\nexport function mapToRange(toDocument, from, sourceMap) {\r\n    const filePath = getFileFsPath(toDocument.uri);\r\n    if (!sourceMap[filePath]) {\r\n        return INVALID_RANGE;\r\n    }\r\n    for (const sourceMapNode of sourceMap[filePath]) {\r\n        if (from.start >= sourceMapNode.from.start && from.start + from.length <= sourceMapNode.from.end) {\r\n            const mappedStart = sourceMapNode.offsetMapping[from.start];\r\n            const mappedEnd = sourceMapNode.offsetMapping[from.start + from.length];\r\n            return {\r\n                start: toDocument.positionAt(mappedStart),\r\n                end: toDocument.positionAt(mappedEnd)\r\n            };\r\n        }\r\n    }\r\n    // Handle the case when no original range can be mapped\r\n    return INVALID_RANGE;\r\n}\r\n/**\r\n * Map a range from virtual `.vue.template` file back to original `.vue` file\r\n */\r\nexport function mapBackRange(fromDocumnet, to, sourceMap) {\r\n    const filePath = getFileFsPath(fromDocumnet.uri);\r\n    if (!sourceMap[filePath]) {\r\n        return INVALID_RANGE;\r\n    }\r\n    for (const sourceMapNode of sourceMap[filePath]) {\r\n        if (to.start >= sourceMapNode.to.start && to.start + to.length <= sourceMapNode.to.end) {\r\n            const mappedStart = sourceMapNode.offsetBackMapping[to.start];\r\n            const mappedEnd = sourceMapNode.offsetBackMapping[to.start + to.length];\r\n            return {\r\n                start: fromDocumnet.positionAt(mappedStart),\r\n                end: fromDocumnet.positionAt(mappedEnd)\r\n            };\r\n        }\r\n    }\r\n    // Handle the case when no original range can be mapped\r\n    return INVALID_RANGE;\r\n}\r\nfunction updateOffsetMapping(node, isThisInjected, fillIntermediate) {\r\n    const nodeFromStart = node.from.start;\r\n    const nodeToStart = node.to.start;\r\n    const from = [...Array(node.from.end - nodeFromStart + 1).keys()];\r\n    const to = [...Array(node.to.end - nodeToStart + 1).keys()];\r\n    if (isThisInjected) {\r\n        for (let i = 0; i < 'this.'.length; i++) {\r\n            to[nodeToStart + i] = undefined;\r\n        }\r\n        /**\r\n         * The case such as `foo` mapped to `this.foo`\r\n         * Both `|this.foo` and `this.|foo` should map to `|foo`\r\n         * Without this back mapping, mapping error from `this.bar` in `f(this.bar)` would fail\r\n         */\r\n        node.offsetBackMapping[nodeToStart] = nodeFromStart + 'this.'.length;\r\n    }\r\n    else if (to.length > from.length) {\r\n        /**\r\n         * The case when `to` is wider than `from`\r\n         * For example, in `:foo=\"num\"` to `{ \"foo\": this.num }`,\r\n         * need to map `\"foo\"` back to `foo`\r\n         */\r\n        const delta = to.length - from.length;\r\n        for (let i = 0; i < delta; i++) {\r\n            node.offsetBackMapping[node.to.start + from.length + i] = node.from.end;\r\n        }\r\n    }\r\n    const toFiltered = to;\r\n    if (isThisInjected) {\r\n        toFiltered.splice(nodeToStart, 'this.'.length);\r\n    }\r\n    const mapping = fillIntermediate\r\n        ? from.map((from, i) => [from, toFiltered[i]])\r\n        : [\r\n            [from[0], toFiltered[0]],\r\n            [from[from.length - 1], toFiltered[toFiltered.length - 1]]\r\n        ];\r\n    mapping.forEach(([fromOffset, toOffset]) => {\r\n        const from = fromOffset + nodeFromStart;\r\n        const to = toOffset + nodeToStart;\r\n        if (!!from && !!to) {\r\n            node.offsetMapping[from] = to;\r\n            node.offsetBackMapping[to] = from;\r\n        }\r\n    });\r\n    if (to.length < from.length) {\r\n        /**\r\n         * The case when `from` is wider than `to`\r\n         * For example, in `<foooooo bar=\"\" />` to `{ \"props\": { bar: ... }}`,\r\n         * need to map `props` back to `foooooo`\r\n         */\r\n        node.offsetBackMapping[node.to.end] = node.from.end;\r\n    }\r\n}\r\nexport function printSourceMap(sourceMap, vueFileSrc, tsFileSrc) {\r\n    for (const fileName in sourceMap) {\r\n        console.log(`Sourcemap for ${fileName}`);\r\n        sourceMap[fileName].forEach(node => {\r\n            const sf = vueFileSrc.slice(node.from.start, node.from.end);\r\n            const st = vueFileSrc.slice(node.to.start, node.to.end);\r\n            console.log(`[${node.from.start}, ${node.from.end}, ${sf}] => [${node.to.start}, ${node.to.end}, ${st}]`);\r\n        });\r\n        // console.log(JSON.stringify(sourceMap[fileName].offsetMapping));\r\n    }\r\n}\r\nexport function stringifySourceMapNodes(sourceMapNodes, vueFileSrc, tsFileSrc) {\r\n    let result = '';\r\n    sourceMapNodes.forEach(node => {\r\n        const sf = vueFileSrc.slice(node.from.start, node.from.end);\r\n        const st = tsFileSrc.slice(node.to.start, node.to.end);\r\n        result += `[${node.from.start}, ${node.from.end}, ${sf}] => [${node.to.start}, ${node.to.end}, ${st}]\\n`;\r\n    });\r\n    return result;\r\n}\r\n//# sourceMappingURL=sourceMap.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/utils/paths.ts","/Users/yoyo930021/git/vetur/server/node_modules/typescript/lib/typescript.d.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts"],"map":"{\"version\":3,\"file\":\"sourceMap.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/typescriptService/sourceMap.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/typescriptService/sourceMap.d.ts","writeByteOrderMark":false,"text":"import { Range, Position } from 'vscode-languageserver-types';\r\nimport type { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport type ts from 'typescript';\r\nimport { RuntimeLibrary } from '../dependencyService';\r\ninterface TemplateSourceMapRange {\r\n    start: number;\r\n    end: number;\r\n}\r\ninterface TemplateSourceMapNodeFrom extends TemplateSourceMapRange {\r\n    fileName: string;\r\n}\r\ninterface TemplateSourceMapNodeTo extends TemplateSourceMapRange {\r\n    fileName: string;\r\n}\r\ninterface Mapping {\r\n    [k: number]: number;\r\n}\r\n/**\r\n * Invariants:\r\n *\r\n * - `from.end - from.start` should equal to `to.end - to.start - 5 * (to.thisDotRanges.length)`\r\n * - Each item in `to.thisDotRanges` should have length 5 for `this.`\r\n */\r\nexport interface TemplateSourceMapNode {\r\n    from: TemplateSourceMapNodeFrom;\r\n    to: TemplateSourceMapNodeTo;\r\n    offsetMapping: Mapping;\r\n    offsetBackMapping: Mapping;\r\n    mergedNodes: TemplateSourceMapNode[];\r\n}\r\nexport interface TemplateSourceMap {\r\n    [fileName: string]: TemplateSourceMapNode[];\r\n}\r\n/**\r\n * Walk through the validSourceFile, for each Node, find its corresponding Node in syntheticSourceFile.\r\n *\r\n * Generate a SourceMap with Nodes looking like this:\r\n *\r\n * SourceMapNode {\r\n *   from: {\r\n *     start: 0,\r\n *     end: 8\r\n *     filename: 'foo.vue'\r\n *   },\r\n *   to: {\r\n *     start: 0,\r\n *     end: 18\r\n *     filename: 'foo.vue.template'\r\n *   },\r\n *   offsetMapping: {\r\n *     0: 5,\r\n *     1: 6,\r\n *     2, 7\r\n *   },\r\n * }\r\n */\r\nexport declare function generateSourceMap(tsModule: RuntimeLibrary['typescript'], syntheticSourceFile: ts.SourceFile, validSourceFile: ts.SourceFile): TemplateSourceMapNode[];\r\n/**\r\n * Map a range from actual `.vue` file to `.vue.template` file\r\n */\r\nexport declare function mapFromPositionToOffset(document: TextDocument, position: Position, sourceMap: TemplateSourceMap): number;\r\n/**\r\n * Map a range from actual `.vue` file to `.vue.template` file\r\n */\r\nexport declare function mapToRange(toDocument: TextDocument, from: ts.TextSpan, sourceMap: TemplateSourceMap): Range;\r\n/**\r\n * Map a range from virtual `.vue.template` file back to original `.vue` file\r\n */\r\nexport declare function mapBackRange(fromDocumnet: TextDocument, to: ts.TextSpan, sourceMap: TemplateSourceMap): Range;\r\nexport declare function printSourceMap(sourceMap: TemplateSourceMap, vueFileSrc: string, tsFileSrc: string): void;\r\nexport declare function stringifySourceMapNodes(sourceMapNodes: TemplateSourceMapNode[], vueFileSrc: string, tsFileSrc: string): string;\r\nexport {};\r\n"}}
