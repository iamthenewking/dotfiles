{"code":"import fs from 'fs';\r\nimport path from 'path';\r\nimport { InsertTextFormat, CompletionItemKind } from 'vscode-languageserver-types';\r\nimport { logger } from '../../log';\r\nexport class SnippetManager {\r\n    constructor(snippetFolder, globalSnippetDir) {\r\n        this._snippets = [];\r\n        const workspaceSnippets = loadAllSnippets(snippetFolder, 'workspace');\r\n        const userSnippets = globalSnippetDir ? loadAllSnippets(globalSnippetDir, 'user') : [];\r\n        const veturSnippets = loadAllSnippets(path.resolve(__dirname, './veturSnippets'), 'vetur');\r\n        this._snippets = [...workspaceSnippets, ...userSnippets, ...veturSnippets];\r\n    }\r\n    // Return all snippets in order\r\n    completeSnippets(scaffoldSnippetSources) {\r\n        return this._snippets\r\n            .filter(s => {\r\n            return scaffoldSnippetSources[s.source] !== '';\r\n        })\r\n            .map(s => {\r\n            let scaffoldLabelPre = '';\r\n            switch (s.type) {\r\n                case 'file':\r\n                    scaffoldLabelPre = '<vue> with';\r\n                    break;\r\n                case 'custom':\r\n                    scaffoldLabelPre = `<${s.customTypeName || 'custom'}> with`;\r\n                    break;\r\n                case 'template':\r\n                case 'style':\r\n                case 'script':\r\n                    scaffoldLabelPre = `<${s.type}>`;\r\n                    break;\r\n            }\r\n            const sourceIndicator = scaffoldSnippetSources[s.source];\r\n            const label = `${scaffoldLabelPre} ${s.name} ${sourceIndicator}`;\r\n            return {\r\n                label,\r\n                insertText: s.content,\r\n                insertTextFormat: InsertTextFormat.Snippet,\r\n                // Use file icon to indicate file/template/style/script/custom completions\r\n                kind: CompletionItemKind.File,\r\n                documentation: computeDocumentation(s),\r\n                detail: computeDetailsForFileIcon(s),\r\n                sortText: computeSortTextPrefix(s) + label\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction loadAllSnippets(rootDir, source) {\r\n    let snippets = [\r\n        ...loadSnippetsFromDir(rootDir, source, 'file'),\r\n        ...loadSnippetsFromDir(path.resolve(rootDir, 'template'), source, 'template'),\r\n        ...loadSnippetsFromDir(path.resolve(rootDir, 'style'), source, 'style'),\r\n        ...loadSnippetsFromDir(path.resolve(rootDir, 'script'), source, 'script')\r\n    ];\r\n    try {\r\n        fs.readdirSync(rootDir).forEach(p => {\r\n            if (p === 'template' || p === 'style' || p === 'script') {\r\n                return;\r\n            }\r\n            const absPath = path.resolve(rootDir, p);\r\n            if (!absPath.endsWith('.vue') && fs.existsSync(absPath) && fs.lstatSync(absPath).isDirectory()) {\r\n                const customDirSnippets = loadSnippetsFromDir(absPath, source, 'custom').map(s => {\r\n                    return Object.assign(Object.assign({}, s), { customTypeName: p });\r\n                });\r\n                snippets = [...snippets, ...customDirSnippets];\r\n            }\r\n        });\r\n    }\r\n    catch (err) {\r\n        logger.logDebug(err.message);\r\n    }\r\n    return snippets;\r\n}\r\nfunction loadSnippetsFromDir(dir, source, type) {\r\n    const snippets = [];\r\n    if (!fs.existsSync(dir)) {\r\n        return snippets;\r\n    }\r\n    try {\r\n        fs.readdirSync(dir)\r\n            .filter(p => p.endsWith('.vue'))\r\n            .forEach(p => {\r\n            snippets.push({\r\n                source,\r\n                name: p,\r\n                type,\r\n                content: fs.readFileSync(path.resolve(dir, p), 'utf-8').replace(/\\\\t/g, '\\t')\r\n            });\r\n        });\r\n    }\r\n    catch (err) {\r\n        logger.logDebug(err.message);\r\n    }\r\n    return snippets;\r\n}\r\nfunction computeSortTextPrefix(snippet) {\r\n    const s = {\r\n        workspace: 0,\r\n        user: 1,\r\n        vetur: 2\r\n    }[snippet.source];\r\n    const t = {\r\n        file: 'a',\r\n        template: 'b',\r\n        style: 'c',\r\n        script: 'd',\r\n        custom: 'e'\r\n    }[snippet.type];\r\n    return s + t;\r\n}\r\nfunction computeDetailsForFileIcon(s) {\r\n    switch (s.type) {\r\n        case 'file':\r\n            return s.name + ' | .vue';\r\n        case 'template':\r\n            return s.name + ' | .html';\r\n        case 'style':\r\n            return s.name + ' | .css';\r\n        case 'script':\r\n            return s.name + ' | .js';\r\n        case 'custom':\r\n            return s.name;\r\n    }\r\n}\r\nfunction computeDocumentation(s) {\r\n    return {\r\n        kind: 'markdown',\r\n        value: `\\`\\`\\`vue\\n${s.content}\\n\\`\\`\\``\r\n    };\r\n}\r\n//# sourceMappingURL=snippets.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/log.ts"],"map":"{\"version\":3,\"file\":\"snippets.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modes/vue/snippets.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/vue/snippets.d.ts","writeByteOrderMark":false,"text":"import { CompletionItem } from 'vscode-languageserver-types';\r\nexport interface ScaffoldSnippetSources {\r\n    workspace: string | undefined;\r\n    user: string | undefined;\r\n    vetur: string | undefined;\r\n}\r\nexport declare class SnippetManager {\r\n    private _snippets;\r\n    constructor(snippetFolder: string, globalSnippetDir?: string);\r\n    completeSnippets(scaffoldSnippetSources: ScaffoldSnippetSources): CompletionItem[];\r\n}\r\n"}}
