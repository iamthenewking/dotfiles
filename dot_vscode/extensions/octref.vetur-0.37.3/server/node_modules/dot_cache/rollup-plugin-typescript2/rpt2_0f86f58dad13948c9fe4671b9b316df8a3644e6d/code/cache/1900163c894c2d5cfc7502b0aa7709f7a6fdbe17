{"code":"import { __rest } from \"tslib\";\r\nimport _ from 'lodash';\r\nimport { VueVersion } from '../../utils/vueVersion';\r\nimport { analyzeComponentsDefine } from './childComponents';\r\nimport { getGlobalComponents } from './globalComponents';\r\nexport function getComponentInfo(tsModule, service, fileFsPath, globalComponentInfos, vueVersion, config) {\r\n    var _a;\r\n    const program = service.getProgram();\r\n    if (!program) {\r\n        return undefined;\r\n    }\r\n    const sourceFile = program.getSourceFile(fileFsPath);\r\n    if (!sourceFile) {\r\n        return undefined;\r\n    }\r\n    const checker = program.getTypeChecker();\r\n    const defaultExportNode = getDefaultExportNode(tsModule, sourceFile);\r\n    if (!defaultExportNode) {\r\n        return undefined;\r\n    }\r\n    const vueFileInfo = analyzeDefaultExportExpr(tsModule, defaultExportNode, checker, vueVersion);\r\n    const defaultExportType = checker.getTypeAtLocation(defaultExportNode);\r\n    const componentsDefineInfo = analyzeComponentsDefine(tsModule, defaultExportType, checker, config.vetur.completion.tagCasing);\r\n    if (componentsDefineInfo) {\r\n        const { list: internalChildComponents } = componentsDefineInfo, defineInfo = __rest(componentsDefineInfo, [\"list\"]);\r\n        const childComponents = [];\r\n        internalChildComponents.forEach(c => {\r\n            childComponents.push({\r\n                name: c.name,\r\n                documentation: c.documentation,\r\n                definition: c.definition,\r\n                global: false,\r\n                info: c.defaultExportNode\r\n                    ? analyzeDefaultExportExpr(tsModule, c.defaultExportNode, checker, vueVersion)\r\n                    : undefined\r\n            });\r\n        });\r\n        vueFileInfo.componentInfo.childComponents = childComponents;\r\n        vueFileInfo.componentInfo.componentsDefine = defineInfo;\r\n    }\r\n    const globalComponents = getGlobalComponents(tsModule, service, globalComponentInfos, config.vetur.completion.tagCasing);\r\n    if (globalComponents.length > 0) {\r\n        vueFileInfo.componentInfo.childComponents = [\r\n            ...((_a = vueFileInfo.componentInfo.childComponents) !== null && _a !== void 0 ? _a : []),\r\n            ...globalComponents.map(c => ({\r\n                name: c.name,\r\n                documentation: c.documentation,\r\n                definition: c.definition,\r\n                global: true,\r\n                info: c.defaultExportNode\r\n                    ? analyzeDefaultExportExpr(tsModule, c.defaultExportNode, checker, vueVersion)\r\n                    : undefined\r\n            }))\r\n        ];\r\n    }\r\n    return vueFileInfo;\r\n}\r\nexport function analyzeDefaultExportExpr(tsModule, defaultExportNode, checker, vueVersion) {\r\n    const defaultExportType = checker.getTypeAtLocation(defaultExportNode);\r\n    const insertInOptionAPIPos = getInsertInOptionAPIPos(tsModule, defaultExportType, checker);\r\n    const emits = getEmits(tsModule, defaultExportType, checker);\r\n    const props = getProps(tsModule, defaultExportType, checker, vueVersion);\r\n    const data = getData(tsModule, defaultExportType, checker);\r\n    const computed = getComputed(tsModule, defaultExportType, checker);\r\n    const methods = getMethods(tsModule, defaultExportType, checker);\r\n    return {\r\n        componentInfo: {\r\n            insertInOptionAPIPos,\r\n            emits,\r\n            props,\r\n            data,\r\n            computed,\r\n            methods\r\n        }\r\n    };\r\n}\r\nexport function getDefaultExportNode(tsModule, sourceFile) {\r\n    const exportStmts = sourceFile.statements.filter(st => st.kind === tsModule.SyntaxKind.ExportAssignment || st.kind === tsModule.SyntaxKind.ClassDeclaration);\r\n    if (exportStmts.length === 0) {\r\n        return undefined;\r\n    }\r\n    const exportNode = exportStmts[0].kind === tsModule.SyntaxKind.ExportAssignment\r\n        ? exportStmts[0].expression\r\n        : exportStmts[0];\r\n    return getNodeFromExportNode(tsModule, exportNode);\r\n}\r\nfunction getInsertInOptionAPIPos(tsModule, defaultExportType, checker) {\r\n    var _a;\r\n    if (isClassType(tsModule, defaultExportType)) {\r\n        const decoratorArgumentType = getClassDecoratorArgumentType(tsModule, defaultExportType, checker);\r\n        if (decoratorArgumentType && decoratorArgumentType.symbol.valueDeclaration) {\r\n            return decoratorArgumentType.symbol.valueDeclaration.getStart() + 1;\r\n        }\r\n    }\r\n    else if ((_a = defaultExportType.symbol) === null || _a === void 0 ? void 0 : _a.valueDeclaration) {\r\n        return defaultExportType.symbol.valueDeclaration.getStart() + 1;\r\n    }\r\n    return undefined;\r\n}\r\nfunction getDecorators(tsModule, node) {\r\n    var _a, _b;\r\n    if (!node)\r\n        return undefined;\r\n    return (_b = (_a = tsModule.getDecorators) === null || _a === void 0 ? void 0 : _a.call(tsModule, node)) !== null && _b !== void 0 ? _b : node.decorators;\r\n}\r\nfunction getEmits(tsModule, defaultExportType, checker) {\r\n    // When there is @Emit and emits option both, use only emits option.\r\n    const result = getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassEmits, getObjectEmits, true);\r\n    return result.length === 0 ? undefined : result;\r\n    function getEmitValidatorInfo(propertyValue) {\r\n        /**\r\n         * case `foo: null`\r\n         */\r\n        if (propertyValue.kind === tsModule.SyntaxKind.NullKeyword) {\r\n            return { hasValidator: false };\r\n        }\r\n        /**\r\n         * case `foo: function() {}` or `foo: () => {}`\r\n         */\r\n        if (tsModule.isFunctionExpression(propertyValue) || tsModule.isArrowFunction(propertyValue)) {\r\n            let typeParameterText = '';\r\n            if (propertyValue.typeParameters) {\r\n                typeParameterText = `<${propertyValue.typeParameters.map(tp => tp.getText()).join(', ')}>`;\r\n            }\r\n            const parameterText = `(${propertyValue.parameters\r\n                .map(p => `${p.getText()}${p.type ? '' : ': any'}`)\r\n                .join(', ')})`;\r\n            const typeString = `${typeParameterText}${parameterText} => any`;\r\n            return { hasValidator: true, typeString };\r\n        }\r\n        return { hasValidator: false };\r\n    }\r\n    function getClassEmits(type) {\r\n        const emitDecoratorNames = ['Emit'];\r\n        const emitsSymbols = type\r\n            .getProperties()\r\n            .filter(property => validPropertySyntaxKind(property, tsModule.SyntaxKind.MethodDeclaration) &&\r\n            getPropertyDecoratorNames(tsModule, property).some(decoratorName => emitDecoratorNames.includes(decoratorName)));\r\n        if (emitsSymbols.length === 0) {\r\n            return undefined;\r\n        }\r\n        // There maybe same emit name because @Emit can be put on multiple methods.\r\n        const emitInfoMap = new Map();\r\n        emitsSymbols.forEach(emitSymbol => {\r\n            var _a, _b;\r\n            const emit = emitSymbol.valueDeclaration;\r\n            const decoratorExpr = (_b = (_a = getDecorators(tsModule, emit)) === null || _a === void 0 ? void 0 : _a.find(decorator => tsModule.isCallExpression(decorator.expression)\r\n                ? emitDecoratorNames.includes(decorator.expression.expression.getText())\r\n                : false)) === null || _b === void 0 ? void 0 : _b.expression;\r\n            const decoratorArgs = decoratorExpr.arguments;\r\n            let name = _.kebabCase(emitSymbol.name);\r\n            if (decoratorArgs.length > 0) {\r\n                const firstNode = decoratorArgs[0];\r\n                if (tsModule.isStringLiteral(firstNode)) {\r\n                    name = firstNode.text;\r\n                }\r\n            }\r\n            let typeString = undefined;\r\n            const signature = checker.getSignatureFromDeclaration(emit);\r\n            if (signature) {\r\n                const returnType = checker.getReturnTypeOfSignature(signature);\r\n                typeString = `(${checker.typeToString(returnType)})`;\r\n                if (typeString === '(void)') {\r\n                    typeString = '(undefined)';\r\n                }\r\n            }\r\n            if (emitInfoMap.has(name)) {\r\n                const oldEmitInfo = emitInfoMap.get(name);\r\n                if (typeString) {\r\n                    // create union type\r\n                    oldEmitInfo.typeString += ` | ${typeString}`;\r\n                }\r\n                else {\r\n                    // remove type (because it failed to obtain the type)\r\n                    oldEmitInfo.typeString = undefined;\r\n                }\r\n                oldEmitInfo.documentation += `\\n\\n${buildDocumentation(tsModule, emitSymbol, checker)}`;\r\n                emitInfoMap.set(name, oldEmitInfo);\r\n            }\r\n            else {\r\n                emitInfoMap.set(name, {\r\n                    name,\r\n                    hasValidator: false,\r\n                    typeString,\r\n                    documentation: buildDocumentation(tsModule, emitSymbol, checker)\r\n                });\r\n            }\r\n        });\r\n        const emitInfo = [...emitInfoMap.values()];\r\n        emitInfo.forEach(info => {\r\n            if (info.typeString) {\r\n                info.typeString = `(arg: ${info.typeString}) => any`;\r\n            }\r\n        });\r\n        return emitInfo;\r\n    }\r\n    function getObjectEmits(type) {\r\n        const emitsSymbol = checker.getPropertyOfType(type, 'emits');\r\n        if (!emitsSymbol || !emitsSymbol.valueDeclaration) {\r\n            return undefined;\r\n        }\r\n        const emitsDeclaration = getLastChild(emitsSymbol.valueDeclaration);\r\n        if (!emitsDeclaration) {\r\n            return undefined;\r\n        }\r\n        /**\r\n         * Plain array emits like `emits: ['foo', 'bar']`\r\n         */\r\n        if (emitsDeclaration.kind === tsModule.SyntaxKind.ArrayLiteralExpression) {\r\n            return emitsDeclaration.elements\r\n                .filter(expr => expr.kind === tsModule.SyntaxKind.StringLiteral)\r\n                .map(expr => {\r\n                return {\r\n                    name: expr.text,\r\n                    hasValidator: false,\r\n                    documentation: `\\`\\`\\`js\\n${formatJSLikeDocumentation(emitsDeclaration.parent.getFullText().trim())}\\n\\`\\`\\`\\n`\r\n                };\r\n            });\r\n        }\r\n        /**\r\n         * Object literal emits like\r\n         * ```\r\n         * {\r\n         *   emits: {\r\n         *     foo: () => true,\r\n         *     bar: (arg1: string, arg2: number) => arg1.startsWith('s') || arg2 > 0,\r\n         *     car: null\r\n         *   }\r\n         * }\r\n         * ```\r\n         */\r\n        if (emitsDeclaration.kind === tsModule.SyntaxKind.ObjectLiteralExpression) {\r\n            const emitsType = checker.getTypeOfSymbolAtLocation(emitsSymbol, emitsDeclaration);\r\n            return checker.getPropertiesOfType(emitsType).map(s => {\r\n                const node = getNodeFromSymbol(s);\r\n                const status = node !== undefined && tsModule.isPropertyAssignment(node)\r\n                    ? getEmitValidatorInfo(node.initializer)\r\n                    : { hasValidator: false };\r\n                return Object.assign(Object.assign({ name: s.name }, status), { documentation: buildDocumentation(tsModule, s, checker) });\r\n            });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\nfunction getProps(tsModule, defaultExportType, checker, vueVersion) {\r\n    const result = markPropBoundToModel(defaultExportType, getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassProps, getObjectProps));\r\n    return result.length === 0 ? undefined : result;\r\n    function markPropBoundToModel(type, props) {\r\n        var _a, _b;\r\n        const vModelPropName = vueVersion === VueVersion.V30 ? 'modelValue' : 'value';\r\n        function markValuePropBoundToModel() {\r\n            return props.map(prop => {\r\n                if (prop.name === vModelPropName) {\r\n                    prop.isBoundToModel = true;\r\n                }\r\n                return prop;\r\n            });\r\n        }\r\n        const modelSymbol = checker.getPropertyOfType(type, 'model');\r\n        const modelValue = (_a = modelSymbol === null || modelSymbol === void 0 ? void 0 : modelSymbol.valueDeclaration) === null || _a === void 0 ? void 0 : _a.initializer;\r\n        // Set value prop when no model def\r\n        if (!modelSymbol || !modelValue) {\r\n            return markValuePropBoundToModel();\r\n        }\r\n        const modelType = checker.getTypeOfSymbolAtLocation(modelSymbol, modelValue);\r\n        const modelPropSymbol = checker.getPropertyOfType(modelType, 'prop');\r\n        const modelPropValue = (_b = modelPropSymbol === null || modelPropSymbol === void 0 ? void 0 : modelPropSymbol.valueDeclaration) === null || _b === void 0 ? void 0 : _b.initializer;\r\n        if (!modelPropValue || !tsModule.isStringLiteral(modelPropValue)) {\r\n            return markValuePropBoundToModel();\r\n        }\r\n        return props.map(prop => {\r\n            if (prop.name === modelPropValue.text) {\r\n                prop.isBoundToModel = true;\r\n            }\r\n            return prop;\r\n        });\r\n    }\r\n    function getPropValidatorInfo(propertyValue) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        if (!propertyValue) {\r\n            return { hasObjectValidator: false, required: true };\r\n        }\r\n        let typeString = undefined;\r\n        let typeDeclaration = undefined;\r\n        /**\r\n         * case `foo: { type: String }`\r\n         * extract type value: `String`\r\n         */\r\n        if (tsModule.isObjectLiteralExpression(propertyValue)) {\r\n            const propertyValueSymbol = checker.getTypeAtLocation(propertyValue).symbol;\r\n            const typeValue = (_b = (_a = propertyValueSymbol === null || propertyValueSymbol === void 0 ? void 0 : propertyValueSymbol.members) === null || _a === void 0 ? void 0 : _a.get('type')) === null || _b === void 0 ? void 0 : _b.valueDeclaration;\r\n            if (typeValue && tsModule.isPropertyAssignment(typeValue)) {\r\n                if (tsModule.isIdentifier(typeValue.initializer) || tsModule.isAsExpression(typeValue.initializer)) {\r\n                    typeDeclaration = typeValue.initializer;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            /**\r\n             * case `foo: String`\r\n             * extract type value: `String`\r\n             */\r\n            if (tsModule.isIdentifier(propertyValue) || tsModule.isAsExpression(propertyValue)) {\r\n                typeDeclaration = propertyValue;\r\n            }\r\n        }\r\n        if (typeDeclaration) {\r\n            /**\r\n             * `String` case\r\n             *\r\n             * Per https://vuejs.org/v2/guide/components-props.html#Type-Checks, handle:\r\n             *\r\n             * String\r\n             * Number\r\n             * Boolean\r\n             * Array\r\n             * Object\r\n             * Date\r\n             * Function\r\n             * Symbol\r\n             */\r\n            if (tsModule.isIdentifier(typeDeclaration)) {\r\n                const vueTypeCheckConstructorToTSType = {\r\n                    String: 'string',\r\n                    Number: 'number',\r\n                    Boolean: 'boolean',\r\n                    Array: 'any[]',\r\n                    Object: 'object',\r\n                    Date: 'Date',\r\n                    Function: 'Function',\r\n                    Symbol: 'Symbol'\r\n                };\r\n                const vueTypeString = typeDeclaration.getText();\r\n                if (vueTypeCheckConstructorToTSType[vueTypeString]) {\r\n                    typeString = vueTypeCheckConstructorToTSType[vueTypeString];\r\n                }\r\n            }\r\n            else if (\r\n            /**\r\n             * `String as PropType<'a' | 'b'>` case\r\n             */\r\n            tsModule.isAsExpression(typeDeclaration) &&\r\n                tsModule.isTypeReferenceNode(typeDeclaration.type) &&\r\n                ['PropType', 'Vue.PropType'].includes(typeDeclaration.type.typeName.getText()) &&\r\n                typeDeclaration.type.typeArguments &&\r\n                typeDeclaration.type.typeArguments[0]) {\r\n                const extractedPropType = typeDeclaration.type.typeArguments[0];\r\n                typeString = extractedPropType.getText();\r\n            }\r\n        }\r\n        if (!propertyValue ||\r\n            (!tsModule.isObjectLiteralExpression(propertyValue) && !tsModule.isIdentifier(propertyValue))) {\r\n            return { hasObjectValidator: false, required: true, typeString };\r\n        }\r\n        const propertyValueSymbol = checker.getTypeAtLocation(propertyValue).symbol;\r\n        const requiredValue = (_d = (_c = propertyValueSymbol === null || propertyValueSymbol === void 0 ? void 0 : propertyValueSymbol.members) === null || _c === void 0 ? void 0 : _c.get('required')) === null || _d === void 0 ? void 0 : _d.valueDeclaration;\r\n        const defaultValue = (_f = (_e = propertyValueSymbol === null || propertyValueSymbol === void 0 ? void 0 : propertyValueSymbol.members) === null || _e === void 0 ? void 0 : _e.get('default')) === null || _f === void 0 ? void 0 : _f.valueDeclaration;\r\n        if (!requiredValue && !defaultValue) {\r\n            return { hasObjectValidator: false, required: true, typeString };\r\n        }\r\n        const required = Boolean(requiredValue &&\r\n            tsModule.isPropertyAssignment(requiredValue) &&\r\n            (requiredValue === null || requiredValue === void 0 ? void 0 : requiredValue.initializer.kind) === tsModule.SyntaxKind.TrueKeyword);\r\n        return { hasObjectValidator: true, required, typeString };\r\n    }\r\n    function getClassProps(type) {\r\n        const propDecoratorNames = ['Prop', 'Model', 'PropSync'];\r\n        const propsSymbols = type\r\n            .getProperties()\r\n            .filter(property => validPropertySyntaxKind(property, tsModule.SyntaxKind.PropertyDeclaration) &&\r\n            getPropertyDecoratorNames(tsModule, property).some(decoratorName => propDecoratorNames.includes(decoratorName)));\r\n        if (propsSymbols.length === 0) {\r\n            return undefined;\r\n        }\r\n        return propsSymbols.map(propSymbol => {\r\n            var _a, _b;\r\n            const prop = propSymbol.valueDeclaration;\r\n            const decoratorExpr = (_b = (_a = getDecorators(tsModule, prop)) === null || _a === void 0 ? void 0 : _a.find(decorator => tsModule.isCallExpression(decorator.expression)\r\n                ? propDecoratorNames.includes(decorator.expression.expression.getText())\r\n                : false)) === null || _b === void 0 ? void 0 : _b.expression;\r\n            const decoratorName = decoratorExpr.expression.getText();\r\n            const [firstNode, secondNode] = decoratorExpr.arguments;\r\n            if (decoratorName === 'PropSync' && tsModule.isStringLiteral(firstNode)) {\r\n                return Object.assign(Object.assign({ name: firstNode.text }, getPropValidatorInfo(secondNode)), { isBoundToModel: false, documentation: buildDocumentation(tsModule, propSymbol, checker) });\r\n            }\r\n            return Object.assign(Object.assign({ name: propSymbol.name }, getPropValidatorInfo(decoratorName === 'Model' ? secondNode : firstNode)), { isBoundToModel: decoratorName === 'Model', documentation: buildDocumentation(tsModule, propSymbol, checker) });\r\n        });\r\n    }\r\n    function getObjectProps(type) {\r\n        const propsSymbol = checker.getPropertyOfType(type, 'props');\r\n        if (!propsSymbol || !propsSymbol.valueDeclaration) {\r\n            return undefined;\r\n        }\r\n        const propsDeclaration = getLastChild(propsSymbol.valueDeclaration);\r\n        if (!propsDeclaration) {\r\n            return undefined;\r\n        }\r\n        /**\r\n         * Plain array props like `props: ['foo', 'bar']`\r\n         */\r\n        if (propsDeclaration.kind === tsModule.SyntaxKind.ArrayLiteralExpression) {\r\n            return propsDeclaration.elements\r\n                .filter(expr => expr.kind === tsModule.SyntaxKind.StringLiteral)\r\n                .map(expr => {\r\n                return {\r\n                    name: expr.text,\r\n                    hasObjectValidator: false,\r\n                    required: true,\r\n                    isBoundToModel: false,\r\n                    documentation: `\\`\\`\\`js\\n${formatJSLikeDocumentation(propsDeclaration.parent.getFullText().trim())}\\n\\`\\`\\`\\n`\r\n                };\r\n            });\r\n        }\r\n        /**\r\n         * Object literal props like\r\n         * ```\r\n         * {\r\n         *   props: {\r\n         *     foo: { type: Boolean, default: true },\r\n         *     bar: { type: String, default: 'bar' },\r\n         *     car: String\r\n         *   }\r\n         * }\r\n         * ```\r\n         */\r\n        if (propsDeclaration.kind === tsModule.SyntaxKind.ObjectLiteralExpression) {\r\n            const propsType = checker.getTypeOfSymbolAtLocation(propsSymbol, propsDeclaration);\r\n            return checker.getPropertiesOfType(propsType).map(s => {\r\n                const node = getNodeFromSymbol(s);\r\n                const status = node !== undefined && tsModule.isPropertyAssignment(node)\r\n                    ? getPropValidatorInfo(node.initializer)\r\n                    : { hasObjectValidator: false, required: true };\r\n                return Object.assign(Object.assign({ name: s.name }, status), { isBoundToModel: false, documentation: buildDocumentation(tsModule, s, checker) });\r\n            });\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * In SFC, data can only be a function\r\n * ```\r\n * {\r\n *   data() {\r\n *     return {\r\n *        foo: true,\r\n *        bar: 'bar'\r\n *     }\r\n *   }\r\n * }\r\n * ```\r\n */\r\nfunction getData(tsModule, defaultExportType, checker) {\r\n    const result = getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassData, getObjectData);\r\n    return result.length === 0 ? undefined : result;\r\n    function getClassData(type) {\r\n        const noDataDecoratorNames = ['Prop', 'Model', 'Provide', 'ProvideReactive', 'Ref'];\r\n        const dataSymbols = type\r\n            .getProperties()\r\n            .filter(property => validPropertySyntaxKind(property, tsModule.SyntaxKind.PropertyDeclaration) &&\r\n            !getPropertyDecoratorNames(tsModule, property).some(decoratorName => noDataDecoratorNames.includes(decoratorName)) &&\r\n            !property.name.startsWith('_') &&\r\n            !property.name.startsWith('$'));\r\n        if (dataSymbols.length === 0) {\r\n            return undefined;\r\n        }\r\n        return dataSymbols.map(data => {\r\n            return {\r\n                name: data.name,\r\n                documentation: buildDocumentation(tsModule, data, checker)\r\n            };\r\n        });\r\n    }\r\n    function getObjectData(type) {\r\n        const dataSymbol = checker.getPropertyOfType(type, 'data');\r\n        if (!dataSymbol || !dataSymbol.valueDeclaration) {\r\n            return undefined;\r\n        }\r\n        const dataType = checker.getTypeOfSymbolAtLocation(dataSymbol, dataSymbol.valueDeclaration);\r\n        const dataSignatures = dataType.getCallSignatures();\r\n        if (dataSignatures.length === 0) {\r\n            return undefined;\r\n        }\r\n        const dataReturnTypeProperties = checker.getReturnTypeOfSignature(dataSignatures[0]);\r\n        return dataReturnTypeProperties.getProperties().map(s => {\r\n            return {\r\n                name: s.name,\r\n                documentation: buildDocumentation(tsModule, s, checker)\r\n            };\r\n        });\r\n    }\r\n}\r\nfunction getComputed(tsModule, defaultExportType, checker) {\r\n    const result = getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassComputed, getObjectComputed);\r\n    return result.length === 0 ? undefined : result;\r\n    function getClassComputed(type) {\r\n        const getAccessorSymbols = type\r\n            .getProperties()\r\n            .filter(property => { var _a; return ((_a = property.valueDeclaration) === null || _a === void 0 ? void 0 : _a.kind) === tsModule.SyntaxKind.GetAccessor; });\r\n        const setAccessorSymbols = defaultExportType\r\n            .getProperties()\r\n            .filter(property => { var _a; return ((_a = property.valueDeclaration) === null || _a === void 0 ? void 0 : _a.kind) === tsModule.SyntaxKind.SetAccessor; });\r\n        if (getAccessorSymbols.length === 0) {\r\n            return undefined;\r\n        }\r\n        return getAccessorSymbols.map(computed => {\r\n            const setComputed = setAccessorSymbols.find(setAccessor => setAccessor.name === computed.name);\r\n            return {\r\n                name: computed.name,\r\n                documentation: buildDocumentation(tsModule, computed, checker) +\r\n                    (setComputed !== undefined ? buildDocumentation(tsModule, setComputed, checker) : '')\r\n            };\r\n        });\r\n    }\r\n    function getObjectComputed(type) {\r\n        const computedSymbol = checker.getPropertyOfType(type, 'computed');\r\n        if (!computedSymbol || !computedSymbol.valueDeclaration) {\r\n            return undefined;\r\n        }\r\n        const computedDeclaration = getLastChild(computedSymbol.valueDeclaration);\r\n        if (!computedDeclaration) {\r\n            return undefined;\r\n        }\r\n        if (computedDeclaration.kind === tsModule.SyntaxKind.ObjectLiteralExpression) {\r\n            const computedType = checker.getTypeOfSymbolAtLocation(computedSymbol, computedDeclaration);\r\n            return checker.getPropertiesOfType(computedType).map(s => {\r\n                return {\r\n                    name: s.name,\r\n                    documentation: buildDocumentation(tsModule, s, checker)\r\n                };\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction isInternalHook(methodName) {\r\n    const $internalHooks = [\r\n        'data',\r\n        'beforeCreate',\r\n        'created',\r\n        'beforeMount',\r\n        'mounted',\r\n        'beforeDestroy',\r\n        'destroyed',\r\n        'beforeUpdate',\r\n        'updated',\r\n        'activated',\r\n        'deactivated',\r\n        'render',\r\n        'errorCaptured',\r\n        'serverPrefetch' // 2.6\r\n    ];\r\n    return $internalHooks.includes(methodName);\r\n}\r\nfunction getMethods(tsModule, defaultExportType, checker) {\r\n    const result = getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassMethods, getObjectMethods);\r\n    return result.length === 0 ? undefined : result;\r\n    function getClassMethods(type) {\r\n        const methodSymbols = type\r\n            .getProperties()\r\n            .filter(property => validPropertySyntaxKind(property, tsModule.SyntaxKind.MethodDeclaration) &&\r\n            !getPropertyDecoratorNames(tsModule, property).some(decoratorName => decoratorName === 'Watch') &&\r\n            !isInternalHook(property.name));\r\n        if (methodSymbols.length === 0) {\r\n            return undefined;\r\n        }\r\n        return methodSymbols.map(method => {\r\n            return {\r\n                name: method.name,\r\n                documentation: buildDocumentation(tsModule, method, checker)\r\n            };\r\n        });\r\n    }\r\n    function getObjectMethods(type) {\r\n        const methodsSymbol = checker.getPropertyOfType(type, 'methods');\r\n        if (!methodsSymbol || !methodsSymbol.valueDeclaration) {\r\n            return undefined;\r\n        }\r\n        const methodsDeclaration = getLastChild(methodsSymbol.valueDeclaration);\r\n        if (!methodsDeclaration) {\r\n            return undefined;\r\n        }\r\n        if (methodsDeclaration.kind === tsModule.SyntaxKind.ObjectLiteralExpression) {\r\n            const methodsType = checker.getTypeOfSymbolAtLocation(methodsSymbol, methodsDeclaration);\r\n            return checker.getPropertiesOfType(methodsType).map(s => {\r\n                return {\r\n                    name: s.name,\r\n                    documentation: buildDocumentation(tsModule, s, checker)\r\n                };\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction getNodeFromExportNode(tsModule, exportExpr) {\r\n    switch (exportExpr.kind) {\r\n        case tsModule.SyntaxKind.CallExpression:\r\n            // Vue.extend or synthetic __vueEditorBridge\r\n            return exportExpr.arguments[0];\r\n        case tsModule.SyntaxKind.ObjectLiteralExpression:\r\n            return exportExpr;\r\n        case tsModule.SyntaxKind.ClassDeclaration:\r\n            return exportExpr;\r\n    }\r\n    return undefined;\r\n}\r\nexport function getLastChild(d) {\r\n    const children = d.getChildren();\r\n    if (children.length === 0) {\r\n        return undefined;\r\n    }\r\n    return children[children.length - 1];\r\n}\r\nexport function isClassType(tsModule, type) {\r\n    if (type.isClass === undefined) {\r\n        return !!((type.flags & tsModule.TypeFlags.Object ? type.objectFlags : 0) & tsModule.ObjectFlags.Class);\r\n    }\r\n    else {\r\n        return type.isClass();\r\n    }\r\n}\r\nexport function getClassDecoratorArgumentType(tsModule, defaultExportNode, checker) {\r\n    var _a;\r\n    const decorators = getDecorators(tsModule, defaultExportNode.symbol.valueDeclaration);\r\n    if (!decorators || decorators.length === 0) {\r\n        return undefined;\r\n    }\r\n    if (!tsModule.isCallExpression(decorators === null || decorators === void 0 ? void 0 : decorators[0].expression)) {\r\n        return undefined;\r\n    }\r\n    const decoratorArguments = (_a = decorators === null || decorators === void 0 ? void 0 : decorators[0].expression) === null || _a === void 0 ? void 0 : _a.arguments;\r\n    if (!decoratorArguments || decoratorArguments.length === 0) {\r\n        return undefined;\r\n    }\r\n    return checker.getTypeAtLocation(decoratorArguments[0]);\r\n}\r\nfunction getClassAndObjectInfo(tsModule, defaultExportType, checker, getClassResult, getObjectResult, onlyUseObjectResultIfExists = false) {\r\n    const result = [];\r\n    if (isClassType(tsModule, defaultExportType)) {\r\n        const decoratorArgumentType = getClassDecoratorArgumentType(tsModule, defaultExportType, checker);\r\n        if (decoratorArgumentType) {\r\n            result.push.apply(result, getObjectResult(decoratorArgumentType) || []);\r\n        }\r\n        if (result.length === 0 || !onlyUseObjectResultIfExists) {\r\n            result.push.apply(result, getClassResult(defaultExportType) || []);\r\n        }\r\n    }\r\n    else {\r\n        result.push.apply(result, getObjectResult(defaultExportType) || []);\r\n    }\r\n    return result;\r\n}\r\nfunction getNodeFromSymbol(property) {\r\n    var _a, _b;\r\n    return (_a = property.valueDeclaration) !== null && _a !== void 0 ? _a : (_b = property.declarations) === null || _b === void 0 ? void 0 : _b[0];\r\n}\r\nfunction validPropertySyntaxKind(property, checkSyntaxKind) {\r\n    var _a;\r\n    return ((_a = getNodeFromSymbol(property)) === null || _a === void 0 ? void 0 : _a.kind) === checkSyntaxKind;\r\n}\r\nfunction getPropertyDecoratorNames(tsModule, property) {\r\n    const decorators = getDecorators(tsModule, getNodeFromSymbol(property));\r\n    if (decorators === undefined) {\r\n        return [];\r\n    }\r\n    return decorators\r\n        .map(decorator => decorator.expression)\r\n        .filter(decoratorExpression => decoratorExpression.expression !== undefined)\r\n        .map(decoratorExpression => decoratorExpression.expression.getText());\r\n}\r\nexport function buildDocumentation(tsModule, s, checker) {\r\n    let documentation = s\r\n        .getDocumentationComment(checker)\r\n        .map(d => d.text)\r\n        .join('\\n');\r\n    documentation += '\\n';\r\n    const node = getNodeFromSymbol(s);\r\n    if (node) {\r\n        documentation += `\\`\\`\\`js\\n${formatJSLikeDocumentation(node.getText())}\\n\\`\\`\\`\\n`;\r\n    }\r\n    return documentation;\r\n}\r\nfunction formatJSLikeDocumentation(src) {\r\n    const segments = src.split('\\n');\r\n    if (segments.length === 1) {\r\n        return src;\r\n    }\r\n    const spacesToDeindent = segments[segments.length - 1].search(/\\S/);\r\n    return (segments[0] +\r\n        '\\n' +\r\n        segments\r\n            .slice(1)\r\n            .map(s => s.slice(spacesToDeindent))\r\n            .join('\\n'));\r\n}\r\n//# sourceMappingURL=componentInfo.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/typescript/lib/typescript.d.ts","/Users/yoyo930021/git/vetur/server/src/config.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts","/Users/yoyo930021/git/vetur/server/src/services/vueInfoService.ts","/Users/yoyo930021/git/vetur/server/src/utils/vueVersion.ts","/Users/yoyo930021/git/vetur/server/src/modes/script/childComponents.ts","/Users/yoyo930021/git/vetur/server/src/modes/script/globalComponents.ts"],"map":"{\"version\":3,\"file\":\"componentInfo.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modes/script/componentInfo.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/script/componentInfo.d.ts","writeByteOrderMark":false,"text":"import type ts from 'typescript';\r\nimport { BasicComponentInfo } from '../../config';\r\nimport { RuntimeLibrary } from '../../services/dependencyService';\r\nimport { VueFileInfo } from '../../services/vueInfoService';\r\nimport { VueVersion } from '../../utils/vueVersion';\r\nexport declare function getComponentInfo(tsModule: RuntimeLibrary['typescript'], service: ts.LanguageService, fileFsPath: string, globalComponentInfos: BasicComponentInfo[], vueVersion: VueVersion, config: any): VueFileInfo | undefined;\r\nexport declare function analyzeDefaultExportExpr(tsModule: RuntimeLibrary['typescript'], defaultExportNode: ts.Node, checker: ts.TypeChecker, vueVersion: VueVersion): VueFileInfo;\r\nexport declare function getDefaultExportNode(tsModule: RuntimeLibrary['typescript'], sourceFile: ts.SourceFile): ts.Node | undefined;\r\nexport declare function getLastChild(d: ts.Declaration): ts.Node | undefined;\r\nexport declare function isClassType(tsModule: RuntimeLibrary['typescript'], type: ts.Type): boolean;\r\nexport declare function getClassDecoratorArgumentType(tsModule: RuntimeLibrary['typescript'], defaultExportNode: ts.Type, checker: ts.TypeChecker): ts.Type | undefined;\r\nexport declare function buildDocumentation(tsModule: RuntimeLibrary['typescript'], s: ts.Symbol, checker: ts.TypeChecker): string;\r\n"}}
