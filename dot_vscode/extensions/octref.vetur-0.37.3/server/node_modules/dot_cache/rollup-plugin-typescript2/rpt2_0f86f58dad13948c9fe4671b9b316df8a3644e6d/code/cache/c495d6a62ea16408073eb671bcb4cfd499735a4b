{"code":"import { CompletionItemKind, TextEdit, InsertTextFormat } from 'vscode-languageserver-types';\r\nimport { HtmlTokenType, createScanner, ScannerState } from '../parser/htmlScanner';\r\nimport * as emmet from 'vscode-emmet-helper';\r\nimport { NULL_COMPLETION } from '../../nullMode';\r\nimport { getModifierProvider } from '../modifierProvider';\r\nimport { toMarkupContent } from '../../../utils/strings';\r\nimport { TagProviderPriority } from '../tagProviders/common';\r\nimport { kebabCase } from 'lodash';\r\nexport function doComplete(document, position, htmlDocument, tagProviders, emmetConfig, autoImportCompletions) {\r\n    var _a;\r\n    const modifierProvider = getModifierProvider();\r\n    const result = {\r\n        isIncomplete: false,\r\n        items: []\r\n    };\r\n    const offset = document.offsetAt(position);\r\n    const node = htmlDocument.findNodeBefore(offset);\r\n    if (!node || (node.isInterpolation && offset <= node.end)) {\r\n        return result;\r\n    }\r\n    const text = document.getText();\r\n    const scanner = createScanner(text, node.start);\r\n    let currentTag;\r\n    let currentAttributeName = '';\r\n    function getReplaceRange(replaceStart, replaceEnd = offset) {\r\n        if (replaceStart > offset) {\r\n            replaceStart = offset;\r\n        }\r\n        return { start: document.positionAt(replaceStart), end: document.positionAt(replaceEnd) };\r\n    }\r\n    function collectOpenTagSuggestions(afterOpenBracket, tagNameEnd) {\r\n        const range = getReplaceRange(afterOpenBracket, tagNameEnd);\r\n        tagProviders.forEach(provider => {\r\n            const priority = provider.priority;\r\n            provider.collectTags((tag, label) => {\r\n                result.items.push({\r\n                    label: tag,\r\n                    kind: CompletionItemKind.Property,\r\n                    documentation: toMarkupContent(label),\r\n                    textEdit: TextEdit.replace(range, tag),\r\n                    sortText: priority + tag,\r\n                    insertTextFormat: InsertTextFormat.PlainText\r\n                });\r\n            });\r\n        });\r\n        autoImportCompletions === null || autoImportCompletions === void 0 ? void 0 : autoImportCompletions.forEach(item => {\r\n            result.items.push(Object.assign(Object.assign({}, item), { kind: CompletionItemKind.Property, textEdit: TextEdit.replace(range, item.label), sortText: TagProviderPriority.UserCode + item.label, insertTextFormat: InsertTextFormat.PlainText }));\r\n        });\r\n        return result;\r\n    }\r\n    function getLineIndent(offset) {\r\n        let start = offset;\r\n        while (start > 0) {\r\n            const ch = text.charAt(start - 1);\r\n            if ('\\n\\r'.indexOf(ch) >= 0) {\r\n                return text.substring(start, offset);\r\n            }\r\n            if (!isWhiteSpace(ch)) {\r\n                return null;\r\n            }\r\n            start--;\r\n        }\r\n        return text.substring(0, offset);\r\n    }\r\n    function collectCloseTagSuggestions(afterOpenBracket, matchingOnly, tagNameEnd = offset) {\r\n        const range = getReplaceRange(afterOpenBracket, tagNameEnd);\r\n        const closeTag = isFollowedBy(text, tagNameEnd, ScannerState.WithinEndTag, HtmlTokenType.EndTagClose) ? '' : '>';\r\n        let curr = node;\r\n        while (curr) {\r\n            const tag = curr.tag;\r\n            if (tag && (!curr.closed || (curr.endTagStart && curr.endTagStart > offset))) {\r\n                const item = {\r\n                    label: '/' + tag,\r\n                    kind: CompletionItemKind.Property,\r\n                    filterText: '/' + tag + closeTag,\r\n                    textEdit: TextEdit.replace(range, '/' + tag + closeTag),\r\n                    insertTextFormat: InsertTextFormat.PlainText\r\n                };\r\n                const startIndent = getLineIndent(curr.start);\r\n                const endIndent = getLineIndent(afterOpenBracket - 1);\r\n                if (startIndent !== null && endIndent !== null && startIndent !== endIndent) {\r\n                    const insertText = startIndent + '</' + tag + closeTag;\r\n                    (item.textEdit = TextEdit.replace(getReplaceRange(afterOpenBracket - 1 - endIndent.length), insertText)),\r\n                        (item.filterText = endIndent + '</' + tag + closeTag);\r\n                }\r\n                result.items.push(item);\r\n                return result;\r\n            }\r\n            curr = curr.parent;\r\n        }\r\n        if (matchingOnly) {\r\n            return result;\r\n        }\r\n        tagProviders.forEach(provider => {\r\n            provider.collectTags((tag, label) => {\r\n                result.items.push({\r\n                    label: '/' + tag,\r\n                    kind: CompletionItemKind.Property,\r\n                    documentation: toMarkupContent(label),\r\n                    filterText: '/' + tag + closeTag,\r\n                    textEdit: TextEdit.replace(range, '/' + tag + closeTag),\r\n                    insertTextFormat: InsertTextFormat.PlainText\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n    function collectTagSuggestions(tagStart, tagEnd) {\r\n        collectOpenTagSuggestions(tagStart, tagEnd);\r\n        collectCloseTagSuggestions(tagStart, true, tagEnd);\r\n        return result;\r\n    }\r\n    function getUsedAttributes(offset) {\r\n        const node = htmlDocument.findNodeBefore(offset);\r\n        return new Set(node.attributeNames.map(normalizeAttributeNameToKebabCase));\r\n    }\r\n    function collectAttributeNameSuggestions(nameStart, nameEnd = offset) {\r\n        const usedAttributes = getUsedAttributes(nameStart);\r\n        const currentAttribute = scanner.getTokenText();\r\n        const execArray = /^[:@]/.exec(currentAttribute);\r\n        const filterPrefix = execArray ? execArray[0] : '';\r\n        const start = filterPrefix ? nameStart + 1 : nameStart;\r\n        const range = getReplaceRange(start, nameEnd);\r\n        const value = isFollowedBy(text, nameEnd, ScannerState.AfterAttributeName, HtmlTokenType.DelimiterAssign)\r\n            ? ''\r\n            : '=\"$1\"';\r\n        tagProviders.forEach(provider => {\r\n            const priority = provider.priority;\r\n            provider.collectAttributes(currentTag, (attribute, type, documentation) => {\r\n                if (\r\n                // include current typing attribute for completing `=\"$1\"`\r\n                !(attribute === currentAttribute && text[nameEnd] !== '=') &&\r\n                    // can listen to same event by adding modifiers\r\n                    type !== 'event' &&\r\n                    // `class` and `:class`, `style` and `:style` can coexist\r\n                    attribute !== 'class' &&\r\n                    attribute !== 'style' &&\r\n                    usedAttributes.has(normalizeAttributeNameToKebabCase(attribute))) {\r\n                    return;\r\n                }\r\n                if ((type === 'event' && filterPrefix !== '@') || (type !== 'event' && filterPrefix === '@')) {\r\n                    return;\r\n                }\r\n                let codeSnippet = attribute;\r\n                if (type !== 'v' && value.length) {\r\n                    codeSnippet = codeSnippet + value;\r\n                }\r\n                if ((filterPrefix === ':' && codeSnippet[0] === ':') || (filterPrefix === '@' && codeSnippet[0] === '@')) {\r\n                    codeSnippet = codeSnippet.slice(1);\r\n                }\r\n                const trimedName = attribute.replace(/^(?::|@)/, '');\r\n                result.items.push({\r\n                    label: attribute,\r\n                    kind: type === 'event' ? CompletionItemKind.Function : CompletionItemKind.Value,\r\n                    textEdit: TextEdit.replace(range, codeSnippet),\r\n                    insertTextFormat: InsertTextFormat.Snippet,\r\n                    sortText: priority + trimedName,\r\n                    filterText: trimedName,\r\n                    documentation: toMarkupContent(documentation)\r\n                });\r\n            });\r\n        });\r\n        const attributeName = scanner.getTokenText();\r\n        if (/\\.$/.test(attributeName)) {\r\n            function addModifier(modifiers) {\r\n                modifiers.items.forEach(modifier => {\r\n                    result.items.push({\r\n                        label: modifier.label,\r\n                        kind: CompletionItemKind.Method,\r\n                        textEdit: TextEdit.insert(document.positionAt(nameEnd), modifier.label),\r\n                        insertTextFormat: InsertTextFormat.Snippet,\r\n                        sortText: modifiers.priority + modifier.label,\r\n                        documentation: toMarkupContent(modifier.documentation)\r\n                    });\r\n                });\r\n            }\r\n            if (attributeName.startsWith('@') || attributeName.startsWith('v-on')) {\r\n                addModifier(modifierProvider.eventModifiers);\r\n            }\r\n            const execArray = /^(?:@|v-on:)([A-Za-z]*)\\.?/.exec(attributeName);\r\n            const eventName = execArray && execArray[1] ? execArray[1] : '';\r\n            const keyEvent = ['keydown', 'keypress', 'keyup'];\r\n            if (keyEvent.includes(eventName)) {\r\n                addModifier(modifierProvider.keyModifiers);\r\n                addModifier(modifierProvider.systemModifiers);\r\n            }\r\n            const mouseEvent = ['click', 'dblclick', 'mouseup', 'mousedown'];\r\n            if (mouseEvent.includes(eventName)) {\r\n                addModifier(modifierProvider.mouseModifiers);\r\n                addModifier(modifierProvider.systemModifiers);\r\n            }\r\n            if (attributeName.startsWith('v-bind') || attributeName.startsWith(':')) {\r\n                addModifier(modifierProvider.propsModifiers);\r\n            }\r\n            if (attributeName.startsWith('v-model')) {\r\n                addModifier(modifierProvider.vModelModifiers);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n    function collectAttributeValueSuggestions(attr, valueStart, valueEnd) {\r\n        if (attr.startsWith('v-') || attr.startsWith('@') || attr.startsWith(':')) {\r\n            return NULL_COMPLETION;\r\n        }\r\n        let range;\r\n        let addQuotes;\r\n        if (valueEnd && offset > valueStart && offset <= valueEnd && text[valueStart] === '\"') {\r\n            // inside attribute\r\n            if (valueEnd > offset && text[valueEnd - 1] === '\"') {\r\n                valueEnd--;\r\n            }\r\n            const wsBefore = getWordStart(text, offset, valueStart + 1);\r\n            const wsAfter = getWordEnd(text, offset, valueEnd);\r\n            range = getReplaceRange(wsBefore, wsAfter);\r\n            addQuotes = false;\r\n        }\r\n        else {\r\n            range = getReplaceRange(valueStart, valueEnd);\r\n            addQuotes = true;\r\n        }\r\n        const attribute = currentAttributeName.toLowerCase();\r\n        tagProviders.forEach(provider => {\r\n            provider.collectValues(currentTag, attribute, value => {\r\n                const insertText = addQuotes ? '\"' + value + '\"' : value;\r\n                result.items.push({\r\n                    label: value,\r\n                    filterText: insertText,\r\n                    kind: CompletionItemKind.Unit,\r\n                    textEdit: TextEdit.replace(range, insertText),\r\n                    insertTextFormat: InsertTextFormat.PlainText\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n    function scanNextForEndPos(nextToken) {\r\n        if (offset === scanner.getTokenEnd()) {\r\n            token = scanner.scan();\r\n            if (token === nextToken && scanner.getTokenOffset() === offset) {\r\n                return scanner.getTokenEnd();\r\n            }\r\n        }\r\n        return offset;\r\n    }\r\n    let token = scanner.scan();\r\n    while (token !== HtmlTokenType.EOS && scanner.getTokenOffset() <= offset) {\r\n        switch (token) {\r\n            case HtmlTokenType.StartTagOpen:\r\n                if (scanner.getTokenEnd() === offset) {\r\n                    const endPos = scanNextForEndPos(HtmlTokenType.StartTag);\r\n                    return collectTagSuggestions(offset, endPos);\r\n                }\r\n                break;\r\n            case HtmlTokenType.StartTag:\r\n                if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\r\n                    return collectOpenTagSuggestions(scanner.getTokenOffset(), scanner.getTokenEnd());\r\n                }\r\n                currentTag = scanner.getTokenText();\r\n                break;\r\n            case HtmlTokenType.AttributeName:\r\n                if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\r\n                    return collectAttributeNameSuggestions(scanner.getTokenOffset(), scanner.getTokenEnd());\r\n                }\r\n                currentAttributeName = scanner.getTokenText();\r\n                break;\r\n            case HtmlTokenType.DelimiterAssign:\r\n                if (scanner.getTokenEnd() === offset) {\r\n                    return collectAttributeValueSuggestions(currentAttributeName, scanner.getTokenEnd());\r\n                }\r\n                break;\r\n            case HtmlTokenType.AttributeValue:\r\n                if (scanner.getTokenOffset() <= offset && offset <= scanner.getTokenEnd()) {\r\n                    if (currentAttributeName === 'style') {\r\n                        const emmetCompletions = emmet.doComplete(document, position, 'css', emmetConfig);\r\n                        return emmetCompletions || NULL_COMPLETION;\r\n                    }\r\n                    else {\r\n                        return collectAttributeValueSuggestions(currentAttributeName, scanner.getTokenOffset(), scanner.getTokenEnd());\r\n                    }\r\n                }\r\n                break;\r\n            case HtmlTokenType.Whitespace:\r\n                if (offset <= scanner.getTokenEnd()) {\r\n                    switch (scanner.getScannerState()) {\r\n                        case ScannerState.AfterOpeningStartTag:\r\n                            const startPos = scanner.getTokenOffset();\r\n                            const endTagPos = scanNextForEndPos(HtmlTokenType.StartTag);\r\n                            return collectTagSuggestions(startPos, endTagPos);\r\n                        case ScannerState.WithinTag:\r\n                        case ScannerState.AfterAttributeName:\r\n                            return collectAttributeNameSuggestions(scanner.getTokenEnd());\r\n                        case ScannerState.BeforeAttributeValue:\r\n                            return collectAttributeValueSuggestions(currentAttributeName, scanner.getTokenEnd());\r\n                        case ScannerState.AfterOpeningEndTag:\r\n                            return collectCloseTagSuggestions(scanner.getTokenOffset() - 1, false);\r\n                    }\r\n                }\r\n                break;\r\n            case HtmlTokenType.EndTagOpen:\r\n                if (offset <= scanner.getTokenEnd()) {\r\n                    const afterOpenBracket = scanner.getTokenOffset() + 1;\r\n                    const endOffset = scanNextForEndPos(HtmlTokenType.EndTag);\r\n                    return collectCloseTagSuggestions(afterOpenBracket, false, endOffset);\r\n                }\r\n                break;\r\n            case HtmlTokenType.EndTag:\r\n                if (offset <= scanner.getTokenEnd()) {\r\n                    let start = scanner.getTokenOffset() - 1;\r\n                    while (start >= 0) {\r\n                        const ch = text.charAt(start);\r\n                        if (ch === '/') {\r\n                            return collectCloseTagSuggestions(start, false, scanner.getTokenEnd());\r\n                        }\r\n                        else if (!isWhiteSpace(ch)) {\r\n                            break;\r\n                        }\r\n                        start--;\r\n                    }\r\n                }\r\n                break;\r\n            case HtmlTokenType.Content:\r\n                if (offset <= scanner.getTokenEnd()) {\r\n                    return (_a = emmet.doComplete(document, position, 'html', emmetConfig)) !== null && _a !== void 0 ? _a : NULL_COMPLETION;\r\n                }\r\n                break;\r\n            default:\r\n                if (offset <= scanner.getTokenEnd()) {\r\n                    return result;\r\n                }\r\n                break;\r\n        }\r\n        token = scanner.scan();\r\n    }\r\n    return result;\r\n}\r\nfunction isWhiteSpace(s) {\r\n    return /^\\s*$/.test(s);\r\n}\r\nfunction isFollowedBy(s, offset, intialState, expectedToken) {\r\n    const scanner = createScanner(s, offset, intialState);\r\n    let token = scanner.scan();\r\n    while (token === HtmlTokenType.Whitespace) {\r\n        token = scanner.scan();\r\n    }\r\n    return token === expectedToken;\r\n}\r\nfunction getWordStart(s, offset, limit) {\r\n    while (offset > limit && !isWhiteSpace(s[offset - 1])) {\r\n        offset--;\r\n    }\r\n    return offset;\r\n}\r\nfunction getWordEnd(s, offset, limit) {\r\n    while (offset < limit && !isWhiteSpace(s[offset])) {\r\n        offset++;\r\n    }\r\n    return offset;\r\n}\r\nexport function normalizeAttributeNameToKebabCase(attr) {\r\n    let result = attr;\r\n    if (result.startsWith('v-model:')) {\r\n        result = attr.slice('v-model:'.length);\r\n    }\r\n    if (result.startsWith('v-bind:')) {\r\n        result = attr.slice('v-bind:'.length);\r\n    }\r\n    else if (result.startsWith(':')) {\r\n        result = attr.slice(':'.length);\r\n    }\r\n    // Remove modifiers\r\n    if (result.includes('.')) {\r\n        result = result.slice(0, result.indexOf('.'));\r\n    }\r\n    result = kebabCase(result);\r\n    return result;\r\n}\r\n//# sourceMappingURL=htmlCompletion.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlParser.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlScanner.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/tagProviders/common.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-emmet-helper/lib/cjs/emmetHelper.d.ts","/Users/yoyo930021/git/vetur/server/src/modes/nullMode.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/modifierProvider.ts","/Users/yoyo930021/git/vetur/server/src/utils/strings.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/tagProviders/common.ts","/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"htmlCompletion.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/template/services/htmlCompletion.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/services/htmlCompletion.d.ts","writeByteOrderMark":false,"text":"import { Position, CompletionList, CompletionItem } from 'vscode-languageserver-types';\r\nimport type { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { HTMLDocument } from '../parser/htmlParser';\r\nimport { IHTMLTagProvider } from '../tagProviders/common';\r\nimport * as emmet from 'vscode-emmet-helper';\r\nexport declare function doComplete(document: TextDocument, position: Position, htmlDocument: HTMLDocument, tagProviders: IHTMLTagProvider[], emmetConfig: emmet.VSCodeEmmetConfig, autoImportCompletions?: CompletionItem[]): CompletionList;\r\nexport declare function normalizeAttributeNameToKebabCase(attr: string): string;\r\n"}}
