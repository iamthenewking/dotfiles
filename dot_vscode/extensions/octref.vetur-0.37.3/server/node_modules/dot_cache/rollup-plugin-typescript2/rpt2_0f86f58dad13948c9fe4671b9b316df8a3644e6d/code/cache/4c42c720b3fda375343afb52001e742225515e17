{"code":"import { TextEdit } from 'vscode-languageserver-types';\r\nimport { indentSection } from '../strings';\r\nimport { logger } from '../../log';\r\nimport path from 'path';\r\nconst VLS_PATH = path.resolve(__dirname, '../../../');\r\nexport function prettierify(dependencyService, code, fileFsPath, languageId, range, vlsFormatConfig, initialIndent) {\r\n    try {\r\n        const prettier = dependencyService.get('prettier', fileFsPath).module;\r\n        const prettierOptions = getPrettierOptions(dependencyService, prettier, fileFsPath, languageId, vlsFormatConfig);\r\n        logger.logDebug(`Using prettier. Options\\n${JSON.stringify(prettierOptions)}`);\r\n        const prettierifiedCode = prettier.format(code, prettierOptions);\r\n        if (prettierifiedCode === '' && code.trim() !== '') {\r\n            throw Error('Empty result from prettier');\r\n        }\r\n        return [toReplaceTextedit(prettierifiedCode, range, vlsFormatConfig, initialIndent)];\r\n    }\r\n    catch (e) {\r\n        console.log('Prettier format failed');\r\n        console.error(e.stack);\r\n        return [];\r\n    }\r\n}\r\nexport function prettierEslintify(dependencyService, code, fileFsPath, languageId, range, vlsFormatConfig, initialIndent) {\r\n    try {\r\n        const prettier = dependencyService.get('prettier', fileFsPath).module;\r\n        const prettierEslint = dependencyService.get('prettier-eslint', fileFsPath).module;\r\n        const prettierOptions = getPrettierOptions(dependencyService, prettier, fileFsPath, languageId, vlsFormatConfig);\r\n        logger.logDebug(`Using prettier-eslint. Options\\n${JSON.stringify(prettierOptions)}`);\r\n        const ext = languageId === 'javascript' ? '.js' : '.ts';\r\n        const prettierifiedCode = prettierEslint({\r\n            filePath: fileFsPath + ext,\r\n            prettierOptions: { parser: prettierOptions.parser },\r\n            text: code,\r\n            fallbackPrettierOptions: prettierOptions\r\n        });\r\n        if (prettierifiedCode === '' && code.trim() !== '') {\r\n            throw Error('Empty result from prettier');\r\n        }\r\n        return [toReplaceTextedit(prettierifiedCode, range, vlsFormatConfig, initialIndent)];\r\n    }\r\n    catch (e) {\r\n        console.log('Prettier-Eslint format failed');\r\n        console.error(e.stack);\r\n        return [];\r\n    }\r\n}\r\nexport function prettierTslintify(dependencyService, code, fileFsPath, languageId, range, vlsFormatConfig, initialIndent) {\r\n    try {\r\n        const prettier = dependencyService.get('prettier', fileFsPath).module;\r\n        const prettierTslint = dependencyService.get('prettier-tslint', fileFsPath).module.format;\r\n        const prettierOptions = getPrettierOptions(dependencyService, prettier, fileFsPath, languageId, vlsFormatConfig);\r\n        logger.logDebug(`Using prettier-tslint. Options\\n${JSON.stringify(prettierOptions)}`);\r\n        const prettierifiedCode = prettierTslint({\r\n            prettierOptions: { parser: prettierOptions.parser },\r\n            text: code,\r\n            filePath: fileFsPath,\r\n            fallbackPrettierOptions: prettierOptions\r\n        });\r\n        return [toReplaceTextedit(prettierifiedCode, range, vlsFormatConfig, initialIndent)];\r\n    }\r\n    catch (e) {\r\n        console.log('Prettier-Tslint format failed');\r\n        console.error(e.stack);\r\n        return [];\r\n    }\r\n}\r\nexport function prettierPluginPugify(dependencyService, code, fileFsPath, languageId, range, vlsFormatConfig, initialIndent) {\r\n    try {\r\n        let prettier = dependencyService.get('prettier', fileFsPath).module;\r\n        if (prettier.version.startsWith('1')) {\r\n            prettier = dependencyService.getBundled('prettier').module;\r\n        }\r\n        const prettierPluginPug = dependencyService.get('@prettier/plugin-pug', fileFsPath).module;\r\n        const prettierOptions = getPrettierOptions(dependencyService, prettier, fileFsPath, languageId, vlsFormatConfig);\r\n        prettierOptions.pluginSearchDirs = [];\r\n        prettierOptions.plugins = Array.isArray(prettierOptions.plugins)\r\n            ? [...prettierOptions.plugins, prettierPluginPug]\r\n            : [prettierPluginPug];\r\n        logger.logDebug(`Using prettier. Options\\n${JSON.stringify(prettierOptions)}`);\r\n        const prettierifiedCode = prettier.format(code, prettierOptions);\r\n        return [toReplaceTextedit(prettierifiedCode, range, vlsFormatConfig, initialIndent)];\r\n    }\r\n    catch (e) {\r\n        console.log('Prettier format failed');\r\n        console.error(e.stack);\r\n        return [];\r\n    }\r\n}\r\nfunction getPrettierOptions(dependencyService, prettierModule, fileFsPath, languageId, vlsFormatConfig) {\r\n    const prettierrcOptions = prettierModule.resolveConfig.sync(fileFsPath, { useCache: false });\r\n    const getParser = () => {\r\n        var _a;\r\n        const table = {\r\n            javascript: 'babel',\r\n            typescript: 'typescript',\r\n            pug: 'pug',\r\n            vue: 'vue',\r\n            css: 'css',\r\n            postcss: 'css',\r\n            scss: 'scss',\r\n            less: 'less'\r\n        };\r\n        return (_a = table === null || table === void 0 ? void 0 : table[languageId]) !== null && _a !== void 0 ? _a : 'babel';\r\n    };\r\n    if (prettierrcOptions) {\r\n        prettierrcOptions.tabWidth = prettierrcOptions.tabWidth || vlsFormatConfig.options.tabSize;\r\n        prettierrcOptions.useTabs = prettierrcOptions.useTabs || vlsFormatConfig.options.useTabs;\r\n        prettierrcOptions.parser = getParser();\r\n        if (dependencyService.useWorkspaceDependencies) {\r\n            // For loading plugins such as @prettier/plugin-pug\r\n            prettierrcOptions.pluginSearchDirs = dependencyService.nodeModulesPaths.map(el => path.dirname(el));\r\n        }\r\n        return prettierrcOptions;\r\n    }\r\n    else {\r\n        const vscodePrettierOptions = vlsFormatConfig.defaultFormatterOptions.prettier || {};\r\n        vscodePrettierOptions.tabWidth = vscodePrettierOptions.tabWidth || vlsFormatConfig.options.tabSize;\r\n        vscodePrettierOptions.useTabs = vscodePrettierOptions.useTabs || vlsFormatConfig.options.useTabs;\r\n        vscodePrettierOptions.parser = getParser();\r\n        if (dependencyService.useWorkspaceDependencies) {\r\n            // For loading plugins such as @prettier/plugin-pug\r\n            vscodePrettierOptions.pluginSearchDirs = dependencyService.nodeModulesPaths.map(el => path.dirname(el));\r\n        }\r\n        return vscodePrettierOptions;\r\n    }\r\n}\r\nfunction toReplaceTextedit(prettierifiedCode, range, vlsFormatConfig, initialIndent) {\r\n    if (initialIndent) {\r\n        // Prettier adds newline at the end\r\n        const formattedCode = '\\n' + indentSection(prettierifiedCode, vlsFormatConfig);\r\n        return TextEdit.replace(range, formattedCode);\r\n    }\r\n    else {\r\n        return TextEdit.replace(range, '\\n' + prettierifiedCode);\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/@types/prettier/index.d.ts","/Users/yoyo930021/git/vetur/server/src/utils/strings.ts","/Users/yoyo930021/git/vetur/server/src/config.ts","/Users/yoyo930021/git/vetur/server/src/log.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/utils/prettier/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/utils/prettier/index.d.ts","writeByteOrderMark":false,"text":"import { TextEdit, Range } from 'vscode-languageserver-types';\r\nimport { VLSFormatConfig } from '../../config';\r\nimport { DependencyService } from '../../services/dependencyService';\r\nexport declare function prettierify(dependencyService: DependencyService, code: string, fileFsPath: string, languageId: string, range: Range, vlsFormatConfig: VLSFormatConfig, initialIndent: boolean): TextEdit[];\r\nexport declare function prettierEslintify(dependencyService: DependencyService, code: string, fileFsPath: string, languageId: string, range: Range, vlsFormatConfig: VLSFormatConfig, initialIndent: boolean): TextEdit[];\r\nexport declare function prettierTslintify(dependencyService: DependencyService, code: string, fileFsPath: string, languageId: string, range: Range, vlsFormatConfig: VLSFormatConfig, initialIndent: boolean): TextEdit[];\r\nexport declare function prettierPluginPugify(dependencyService: DependencyService, code: string, fileFsPath: string, languageId: string, range: Range, vlsFormatConfig: VLSFormatConfig, initialIndent: boolean): TextEdit[];\r\n"}}
