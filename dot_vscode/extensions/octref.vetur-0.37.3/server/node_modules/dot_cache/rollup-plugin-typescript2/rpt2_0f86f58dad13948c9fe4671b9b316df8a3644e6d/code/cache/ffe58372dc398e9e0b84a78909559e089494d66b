{"code":"export function getLanguageModelCache(maxEntries, cleanupIntervalTimeInSec, parse) {\r\n    let languageModels = {};\r\n    let nModels = 0;\r\n    let cleanupInterval;\r\n    if (cleanupIntervalTimeInSec > 0) {\r\n        cleanupInterval = setInterval(() => {\r\n            const cutoffTime = Date.now() - cleanupIntervalTimeInSec * 1000;\r\n            const uris = Object.keys(languageModels);\r\n            for (const uri of uris) {\r\n                const languageModelInfo = languageModels[uri];\r\n                if (languageModelInfo.cTime < cutoffTime) {\r\n                    delete languageModels[uri];\r\n                    nModels--;\r\n                }\r\n            }\r\n        }, cleanupIntervalTimeInSec * 1000);\r\n    }\r\n    return {\r\n        refreshAndGet(document) {\r\n            const version = document.version;\r\n            const languageId = document.languageId;\r\n            const languageModelInfo = languageModels[document.uri];\r\n            if (languageModelInfo && languageModelInfo.version === version && languageModelInfo.languageId === languageId) {\r\n                languageModelInfo.cTime = Date.now();\r\n                return languageModelInfo.languageModel;\r\n            }\r\n            const languageModel = parse(document);\r\n            languageModels[document.uri] = { languageModel, version, languageId, cTime: Date.now() };\r\n            if (!languageModelInfo) {\r\n                nModels++;\r\n            }\r\n            if (nModels === maxEntries) {\r\n                let oldestTime = Number.MAX_VALUE;\r\n                let oldestUri = null;\r\n                for (const uri in languageModels) {\r\n                    const languageModelInfo = languageModels[uri];\r\n                    if (languageModelInfo.cTime < oldestTime) {\r\n                        oldestUri = uri;\r\n                        oldestTime = languageModelInfo.cTime;\r\n                    }\r\n                }\r\n                if (oldestUri) {\r\n                    delete languageModels[oldestUri];\r\n                    nModels--;\r\n                }\r\n            }\r\n            return languageModel;\r\n        },\r\n        onDocumentRemoved(document) {\r\n            const uri = document.uri;\r\n            if (languageModels[uri]) {\r\n                delete languageModels[uri];\r\n                nModels--;\r\n            }\r\n        },\r\n        dispose() {\r\n            if (typeof cleanupInterval !== 'undefined') {\r\n                clearInterval(cleanupInterval);\r\n                cleanupInterval = null;\r\n                languageModels = {};\r\n                nModels = 0;\r\n            }\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=languageModelCache.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts"],"map":"{\"version\":3,\"file\":\"languageModelCache.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/embeddedSupport/languageModelCache.ts\"],\"names\":[],\"mappings\":\"AAaA,MAAM,UAAU,qBAAqB,CACnC,UAAkB,EAClB,wBAAgC,EAChC,KAAoC;IAEpC,IAAI,cAAc,GAAgG,EAAE,CAAC;IACrH,IAAI,OAAO,GAAG,CAAC,CAAC;IAEhB,IAAI,eAA6B,CAAC;IAClC,IAAI,wBAAwB,GAAG,CAAC,EAAE;QAChC,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE;YACjC,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,wBAAwB,GAAG,IAAI,CAAC;YAChE,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACzC,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;gBACtB,MAAM,iBAAiB,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;gBAC9C,IAAI,iBAAiB,CAAC,KAAK,GAAG,UAAU,EAAE;oBACxC,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC;oBAC3B,OAAO,EAAE,CAAC;iBACX;aACF;QACH,CAAC,EAAE,wBAAwB,GAAG,IAAI,CAAC,CAAC;KACrC;IAED,OAAO;QACL,aAAa,CAAC,QAAsB;YAClC,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YACjC,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACvC,MAAM,iBAAiB,GAAG,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,iBAAiB,IAAI,iBAAiB,CAAC,OAAO,KAAK,OAAO,IAAI,iBAAiB,CAAC,UAAU,KAAK,UAAU,EAAE;gBAC7G,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;gBACrC,OAAO,iBAAiB,CAAC,aAAa,CAAC;aACxC;YACD,MAAM,aAAa,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YACtC,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC;YACzF,IAAI,CAAC,iBAAiB,EAAE;gBACtB,OAAO,EAAE,CAAC;aACX;YAED,IAAI,OAAO,KAAK,UAAU,EAAE;gBAC1B,IAAI,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC;gBAClC,IAAI,SAAS,GAAG,IAAI,CAAC;gBACrB,KAAK,MAAM,GAAG,IAAI,cAAc,EAAE;oBAChC,MAAM,iBAAiB,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;oBAC9C,IAAI,iBAAiB,CAAC,KAAK,GAAG,UAAU,EAAE;wBACxC,SAAS,GAAG,GAAG,CAAC;wBAChB,UAAU,GAAG,iBAAiB,CAAC,KAAK,CAAC;qBACtC;iBACF;gBACD,IAAI,SAAS,EAAE;oBACb,OAAO,cAAc,CAAC,SAAS,CAAC,CAAC;oBACjC,OAAO,EAAE,CAAC;iBACX;aACF;YACD,OAAO,aAAa,CAAC;QACvB,CAAC;QACD,iBAAiB,CAAC,QAAsB;YACtC,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;YACzB,IAAI,cAAc,CAAC,GAAG,CAAC,EAAE;gBACvB,OAAO,cAAc,CAAC,GAAG,CAAC,CAAC;gBAC3B,OAAO,EAAE,CAAC;aACX;QACH,CAAC;QACD,OAAO;YACL,IAAI,OAAO,eAAe,KAAK,WAAW,EAAE;gBAC1C,aAAa,CAAC,eAAe,CAAC,CAAC;gBAC/B,eAAe,GAAG,IAAW,CAAC;gBAC9B,cAAc,GAAG,EAAE,CAAC;gBACpB,OAAO,GAAG,CAAC,CAAC;aACb;QACH,CAAC;KACF,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/embeddedSupport/languageModelCache.d.ts","writeByteOrderMark":false,"text":"import { TextDocument } from 'vscode-languageserver-textdocument';\r\nexport interface LanguageModelCache<T> {\r\n    /**\r\n     * - Feed updated document\r\n     * - Use `parse` function to re-compute model\r\n     * - Return re-computed model\r\n     */\r\n    refreshAndGet(document: TextDocument): T;\r\n    onDocumentRemoved(document: TextDocument): void;\r\n    dispose(): void;\r\n}\r\nexport declare function getLanguageModelCache<T>(maxEntries: number, cleanupIntervalTimeInSec: number, parse: (document: TextDocument) => T): LanguageModelCache<T>;\r\n"}}
