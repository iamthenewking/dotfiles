{"code":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var HtmlTokenType;\r\n(function (HtmlTokenType) {\r\n    HtmlTokenType[HtmlTokenType[\"StartCommentTag\"] = 0] = \"StartCommentTag\";\r\n    HtmlTokenType[HtmlTokenType[\"Comment\"] = 1] = \"Comment\";\r\n    HtmlTokenType[HtmlTokenType[\"EndCommentTag\"] = 2] = \"EndCommentTag\";\r\n    HtmlTokenType[HtmlTokenType[\"StartTagOpen\"] = 3] = \"StartTagOpen\";\r\n    HtmlTokenType[HtmlTokenType[\"StartTagClose\"] = 4] = \"StartTagClose\";\r\n    HtmlTokenType[HtmlTokenType[\"StartTagSelfClose\"] = 5] = \"StartTagSelfClose\";\r\n    HtmlTokenType[HtmlTokenType[\"StartTag\"] = 6] = \"StartTag\";\r\n    HtmlTokenType[HtmlTokenType[\"StartInterpolation\"] = 7] = \"StartInterpolation\";\r\n    HtmlTokenType[HtmlTokenType[\"EndTagOpen\"] = 8] = \"EndTagOpen\";\r\n    HtmlTokenType[HtmlTokenType[\"EndTagClose\"] = 9] = \"EndTagClose\";\r\n    HtmlTokenType[HtmlTokenType[\"EndTag\"] = 10] = \"EndTag\";\r\n    HtmlTokenType[HtmlTokenType[\"EndInterpolation\"] = 11] = \"EndInterpolation\";\r\n    HtmlTokenType[HtmlTokenType[\"DelimiterAssign\"] = 12] = \"DelimiterAssign\";\r\n    HtmlTokenType[HtmlTokenType[\"AttributeName\"] = 13] = \"AttributeName\";\r\n    HtmlTokenType[HtmlTokenType[\"AttributeValue\"] = 14] = \"AttributeValue\";\r\n    HtmlTokenType[HtmlTokenType[\"StartDoctypeTag\"] = 15] = \"StartDoctypeTag\";\r\n    HtmlTokenType[HtmlTokenType[\"Doctype\"] = 16] = \"Doctype\";\r\n    HtmlTokenType[HtmlTokenType[\"EndDoctypeTag\"] = 17] = \"EndDoctypeTag\";\r\n    HtmlTokenType[HtmlTokenType[\"Content\"] = 18] = \"Content\";\r\n    HtmlTokenType[HtmlTokenType[\"InterpolationContent\"] = 19] = \"InterpolationContent\";\r\n    HtmlTokenType[HtmlTokenType[\"Whitespace\"] = 20] = \"Whitespace\";\r\n    HtmlTokenType[HtmlTokenType[\"Unknown\"] = 21] = \"Unknown\";\r\n    HtmlTokenType[HtmlTokenType[\"Script\"] = 22] = \"Script\";\r\n    HtmlTokenType[HtmlTokenType[\"Styles\"] = 23] = \"Styles\";\r\n    HtmlTokenType[HtmlTokenType[\"EOS\"] = 24] = \"EOS\";\r\n})(HtmlTokenType || (HtmlTokenType = {}));\r\nclass MultiLineStream {\r\n    constructor(source, position) {\r\n        this.source = source;\r\n        this.len = source.length;\r\n        this.position = position;\r\n    }\r\n    eos() {\r\n        return this.len <= this.position;\r\n    }\r\n    getSource() {\r\n        return this.source;\r\n    }\r\n    pos() {\r\n        return this.position;\r\n    }\r\n    goBackTo(pos) {\r\n        this.position = pos;\r\n    }\r\n    goBack(n) {\r\n        this.position -= n;\r\n    }\r\n    advance(n) {\r\n        this.position += n;\r\n    }\r\n    goToEnd() {\r\n        this.position = this.source.length;\r\n    }\r\n    nextChar() {\r\n        return this.source.charCodeAt(this.position++) || 0;\r\n    }\r\n    peekChar(n = 0) {\r\n        return this.source.charCodeAt(this.position + n) || 0;\r\n    }\r\n    advanceIfChar(ch) {\r\n        if (ch === this.source.charCodeAt(this.position)) {\r\n            this.position++;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    advanceIfChars(ch) {\r\n        let i;\r\n        if (this.position + ch.length > this.source.length) {\r\n            return false;\r\n        }\r\n        for (i = 0; i < ch.length; i++) {\r\n            if (this.source.charCodeAt(this.position + i) !== ch[i]) {\r\n                return false;\r\n            }\r\n        }\r\n        this.advance(i);\r\n        return true;\r\n    }\r\n    advanceIfRegExp(regex) {\r\n        const str = this.source.slice(this.position);\r\n        const match = str.match(regex);\r\n        if (match) {\r\n            this.position = this.position + match.index + match[0].length;\r\n            return match[0];\r\n        }\r\n        return '';\r\n    }\r\n    advanceUntilRegExp(regex) {\r\n        const str = this.source.slice(this.position);\r\n        const match = str.match(regex);\r\n        if (match) {\r\n            this.position = this.position + match.index;\r\n            return match[0];\r\n        }\r\n        else {\r\n            this.goToEnd();\r\n        }\r\n        return '';\r\n    }\r\n    advanceUntilChar(ch) {\r\n        while (this.position < this.source.length) {\r\n            if (this.source.charCodeAt(this.position) === ch) {\r\n                return true;\r\n            }\r\n            this.advance(1);\r\n        }\r\n        return false;\r\n    }\r\n    advanceUntilChars(ch) {\r\n        while (this.position + ch.length <= this.source.length) {\r\n            let i = 0;\r\n            for (; i < ch.length && this.source.charCodeAt(this.position + i) === ch[i]; i++) { }\r\n            if (i === ch.length) {\r\n                return true;\r\n            }\r\n            this.advance(1);\r\n        }\r\n        this.goToEnd();\r\n        return false;\r\n    }\r\n    skipWhitespace() {\r\n        const n = this.advanceWhileChar(ch => {\r\n            return ch === _WSP || ch === _TAB || ch === _NWL || ch === _LFD || ch === _CAR;\r\n        });\r\n        return n > 0;\r\n    }\r\n    advanceWhileChar(condition) {\r\n        const posNow = this.position;\r\n        while (this.position < this.len && condition(this.source.charCodeAt(this.position))) {\r\n            this.position++;\r\n        }\r\n        return this.position - posNow;\r\n    }\r\n}\r\nconst _BNG = '!'.charCodeAt(0);\r\nconst _MIN = '-'.charCodeAt(0);\r\nconst _LAN = '<'.charCodeAt(0);\r\nconst _RAN = '>'.charCodeAt(0);\r\nconst _FSL = '/'.charCodeAt(0);\r\nconst _EQS = '='.charCodeAt(0);\r\nconst _DQO = '\"'.charCodeAt(0);\r\nconst _SQO = \"'\".charCodeAt(0);\r\nconst _NWL = '\\n'.charCodeAt(0);\r\nconst _CAR = '\\r'.charCodeAt(0);\r\nconst _LFD = '\\f'.charCodeAt(0);\r\nconst _WSP = ' '.charCodeAt(0);\r\nconst _TAB = '\\t'.charCodeAt(0);\r\nconst _LCR = '{'.charCodeAt(0);\r\nconst _RCR = '}'.charCodeAt(0);\r\nexport var ScannerState;\r\n(function (ScannerState) {\r\n    ScannerState[ScannerState[\"WithinContent\"] = 0] = \"WithinContent\";\r\n    ScannerState[ScannerState[\"WithinInterpolation\"] = 1] = \"WithinInterpolation\";\r\n    ScannerState[ScannerState[\"AfterOpeningStartTag\"] = 2] = \"AfterOpeningStartTag\";\r\n    ScannerState[ScannerState[\"AfterOpeningEndTag\"] = 3] = \"AfterOpeningEndTag\";\r\n    ScannerState[ScannerState[\"WithinDoctype\"] = 4] = \"WithinDoctype\";\r\n    ScannerState[ScannerState[\"WithinTag\"] = 5] = \"WithinTag\";\r\n    ScannerState[ScannerState[\"WithinEndTag\"] = 6] = \"WithinEndTag\";\r\n    ScannerState[ScannerState[\"WithinComment\"] = 7] = \"WithinComment\";\r\n    ScannerState[ScannerState[\"WithinScriptContent\"] = 8] = \"WithinScriptContent\";\r\n    ScannerState[ScannerState[\"WithinStyleContent\"] = 9] = \"WithinStyleContent\";\r\n    ScannerState[ScannerState[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\r\n    ScannerState[ScannerState[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\r\n})(ScannerState || (ScannerState = {}));\r\nconst htmlScriptContents = {\r\n    'text/x-handlebars-template': true\r\n};\r\nexport function createScanner(input, initialOffset = 0, initialState = ScannerState.WithinContent) {\r\n    const stream = new MultiLineStream(input, initialOffset);\r\n    let state = initialState;\r\n    let tokenOffset = 0;\r\n    let tokenType;\r\n    let tokenError;\r\n    let hasSpaceAfterTag;\r\n    let lastTag;\r\n    let lastAttributeName;\r\n    let lastTypeValue;\r\n    function nextElementName() {\r\n        return stream.advanceIfRegExp(/^[_:\\w][_:\\w-.\\d]*/).toLowerCase();\r\n    }\r\n    function nextAttributeName() {\r\n        return stream.advanceIfRegExp(/^[^\\s\"'<>/=\\x00-\\x0F\\x7F\\x80-\\x9F]*/).toLowerCase();\r\n    }\r\n    function finishToken(offset, type, errorMessage) {\r\n        tokenType = type;\r\n        tokenOffset = offset;\r\n        tokenError = errorMessage || '';\r\n        return type;\r\n    }\r\n    function scan() {\r\n        const offset = stream.pos();\r\n        const oldState = state;\r\n        const token = internalScan();\r\n        if (token !== HtmlTokenType.EOS && offset === stream.pos()) {\r\n            console.log('Scanner.scan has not advanced at offset ' + offset + ', state before: ' + oldState + ' after: ' + state);\r\n            stream.advance(1);\r\n            return finishToken(offset, HtmlTokenType.Unknown);\r\n        }\r\n        return token;\r\n    }\r\n    function internalScan() {\r\n        const offset = stream.pos();\r\n        if (stream.eos()) {\r\n            return finishToken(offset, HtmlTokenType.EOS);\r\n        }\r\n        let errorMessage;\r\n        switch (state) {\r\n            case ScannerState.WithinComment:\r\n                if (stream.advanceIfChars([_MIN, _MIN, _RAN])) {\r\n                    // -->\r\n                    state = ScannerState.WithinContent;\r\n                    return finishToken(offset, HtmlTokenType.EndCommentTag);\r\n                }\r\n                stream.advanceUntilChars([_MIN, _MIN, _RAN]); // -->\r\n                return finishToken(offset, HtmlTokenType.Comment);\r\n            case ScannerState.WithinDoctype:\r\n                if (stream.advanceIfChar(_RAN)) {\r\n                    state = ScannerState.WithinContent;\r\n                    return finishToken(offset, HtmlTokenType.EndDoctypeTag);\r\n                }\r\n                stream.advanceUntilChar(_RAN); // >\r\n                return finishToken(offset, HtmlTokenType.Doctype);\r\n            case ScannerState.WithinContent:\r\n                if (stream.advanceIfChar(_LAN)) {\r\n                    // <\r\n                    if (!stream.eos() && stream.peekChar() === _BNG) {\r\n                        // !\r\n                        if (stream.advanceIfChars([_BNG, _MIN, _MIN])) {\r\n                            // <!--\r\n                            state = ScannerState.WithinComment;\r\n                            return finishToken(offset, HtmlTokenType.StartCommentTag);\r\n                        }\r\n                        if (stream.advanceIfRegExp(/^!doctype/i)) {\r\n                            state = ScannerState.WithinDoctype;\r\n                            return finishToken(offset, HtmlTokenType.StartDoctypeTag);\r\n                        }\r\n                    }\r\n                    if (stream.advanceIfChar(_FSL)) {\r\n                        // /\r\n                        state = ScannerState.AfterOpeningEndTag;\r\n                        return finishToken(offset, HtmlTokenType.EndTagOpen);\r\n                    }\r\n                    state = ScannerState.AfterOpeningStartTag;\r\n                    return finishToken(offset, HtmlTokenType.StartTagOpen);\r\n                }\r\n                if (stream.advanceIfChars([_LCR, _LCR])) {\r\n                    state = ScannerState.WithinInterpolation;\r\n                    return finishToken(offset, HtmlTokenType.StartInterpolation);\r\n                }\r\n                stream.advanceUntilRegExp(/<|{{/);\r\n                return finishToken(offset, HtmlTokenType.Content);\r\n            case ScannerState.WithinInterpolation:\r\n                if (stream.advanceIfChars([_RCR, _RCR])) {\r\n                    state = ScannerState.WithinContent;\r\n                    return finishToken(offset, HtmlTokenType.EndInterpolation);\r\n                }\r\n                stream.advanceUntilChars([_RCR, _RCR]);\r\n                return finishToken(offset, HtmlTokenType.InterpolationContent);\r\n            case ScannerState.AfterOpeningEndTag:\r\n                const tagName = nextElementName();\r\n                if (tagName.length > 0) {\r\n                    state = ScannerState.WithinEndTag;\r\n                    return finishToken(offset, HtmlTokenType.EndTag);\r\n                }\r\n                if (stream.skipWhitespace()) {\r\n                    // white space is not valid here\r\n                    return finishToken(offset, HtmlTokenType.Whitespace, 'Tag name must directly follow the open bracket.');\r\n                }\r\n                state = ScannerState.WithinEndTag;\r\n                stream.advanceUntilChar(_RAN);\r\n                if (offset < stream.pos()) {\r\n                    return finishToken(offset, HtmlTokenType.Unknown, 'End tag name expected.');\r\n                }\r\n                return internalScan();\r\n            case ScannerState.WithinEndTag:\r\n                if (stream.skipWhitespace()) {\r\n                    // white space is valid here\r\n                    return finishToken(offset, HtmlTokenType.Whitespace);\r\n                }\r\n                if (stream.advanceIfChar(_RAN)) {\r\n                    // >\r\n                    state = ScannerState.WithinContent;\r\n                    return finishToken(offset, HtmlTokenType.EndTagClose);\r\n                }\r\n                errorMessage = 'Closing bracket expected.';\r\n                break;\r\n            case ScannerState.AfterOpeningStartTag:\r\n                lastTag = nextElementName();\r\n                lastTypeValue = null;\r\n                lastAttributeName = null;\r\n                if (lastTag.length > 0) {\r\n                    hasSpaceAfterTag = false;\r\n                    state = ScannerState.WithinTag;\r\n                    return finishToken(offset, HtmlTokenType.StartTag);\r\n                }\r\n                if (stream.skipWhitespace()) {\r\n                    // white space is not valid here\r\n                    return finishToken(offset, HtmlTokenType.Whitespace, 'Tag name must directly follow the open bracket.');\r\n                }\r\n                state = ScannerState.WithinTag;\r\n                stream.advanceUntilChar(_RAN);\r\n                if (offset < stream.pos()) {\r\n                    return finishToken(offset, HtmlTokenType.Unknown, 'Start tag name expected.');\r\n                }\r\n                return internalScan();\r\n            case ScannerState.WithinTag:\r\n                if (stream.skipWhitespace()) {\r\n                    hasSpaceAfterTag = true; // remember that we have seen a whitespace\r\n                    return finishToken(offset, HtmlTokenType.Whitespace);\r\n                }\r\n                if (hasSpaceAfterTag) {\r\n                    lastAttributeName = nextAttributeName();\r\n                    if (lastAttributeName.length > 0) {\r\n                        state = ScannerState.AfterAttributeName;\r\n                        hasSpaceAfterTag = false;\r\n                        return finishToken(offset, HtmlTokenType.AttributeName);\r\n                    }\r\n                }\r\n                if (stream.advanceIfChars([_FSL, _RAN])) {\r\n                    // />\r\n                    state = ScannerState.WithinContent;\r\n                    return finishToken(offset, HtmlTokenType.StartTagSelfClose);\r\n                }\r\n                if (stream.advanceIfChar(_RAN)) {\r\n                    // >\r\n                    if (lastTag === 'script') {\r\n                        if (lastTypeValue && htmlScriptContents[lastTypeValue]) {\r\n                            // stay in html\r\n                            state = ScannerState.WithinContent;\r\n                        }\r\n                        else {\r\n                            state = ScannerState.WithinScriptContent;\r\n                        }\r\n                    }\r\n                    else if (lastTag === 'style') {\r\n                        state = ScannerState.WithinStyleContent;\r\n                    }\r\n                    else {\r\n                        state = ScannerState.WithinContent;\r\n                    }\r\n                    return finishToken(offset, HtmlTokenType.StartTagClose);\r\n                }\r\n                stream.advance(1);\r\n                return finishToken(offset, HtmlTokenType.Unknown, 'Unexpected character in tag.');\r\n            case ScannerState.AfterAttributeName:\r\n                if (stream.skipWhitespace()) {\r\n                    hasSpaceAfterTag = true;\r\n                    return finishToken(offset, HtmlTokenType.Whitespace);\r\n                }\r\n                if (stream.advanceIfChar(_EQS)) {\r\n                    state = ScannerState.BeforeAttributeValue;\r\n                    return finishToken(offset, HtmlTokenType.DelimiterAssign);\r\n                }\r\n                state = ScannerState.WithinTag;\r\n                return internalScan(); // no advance yet - jump to WithinTag\r\n            case ScannerState.BeforeAttributeValue:\r\n                if (stream.skipWhitespace()) {\r\n                    return finishToken(offset, HtmlTokenType.Whitespace);\r\n                }\r\n                const attributeValue = stream.advanceIfRegExp(/^[^\\s\"'`=<>\\/]+/);\r\n                if (attributeValue.length > 0) {\r\n                    if (lastAttributeName === 'type') {\r\n                        lastTypeValue = attributeValue;\r\n                    }\r\n                    state = ScannerState.WithinTag;\r\n                    hasSpaceAfterTag = false;\r\n                    return finishToken(offset, HtmlTokenType.AttributeValue);\r\n                }\r\n                const ch = stream.peekChar();\r\n                if (ch === _SQO || ch === _DQO) {\r\n                    stream.advance(1); // consume quote\r\n                    if (stream.advanceUntilChar(ch)) {\r\n                        stream.advance(1); // consume quote\r\n                    }\r\n                    if (lastAttributeName === 'type') {\r\n                        lastTypeValue = stream.getSource().substring(offset + 1, stream.pos() - 1);\r\n                    }\r\n                    state = ScannerState.WithinTag;\r\n                    hasSpaceAfterTag = false;\r\n                    return finishToken(offset, HtmlTokenType.AttributeValue);\r\n                }\r\n                state = ScannerState.WithinTag;\r\n                hasSpaceAfterTag = false;\r\n                return internalScan(); // no advance yet - jump to WithinTag\r\n            case ScannerState.WithinScriptContent:\r\n                // see http://stackoverflow.com/questions/14574471/how-do-browsers-parse-a-script-tag-exactly\r\n                let sciptState = 1;\r\n                while (!stream.eos()) {\r\n                    const match = stream.advanceIfRegExp(/<!--|-->|<\\/?script\\s*\\/?>?/i);\r\n                    if (match.length === 0) {\r\n                        stream.goToEnd();\r\n                        return finishToken(offset, HtmlTokenType.Script);\r\n                    }\r\n                    else if (match === '<!--') {\r\n                        if (sciptState === 1) {\r\n                            sciptState = 2;\r\n                        }\r\n                    }\r\n                    else if (match === '-->') {\r\n                        sciptState = 1;\r\n                    }\r\n                    else if (match[1] !== '/') {\r\n                        // <script\r\n                        if (sciptState === 2) {\r\n                            sciptState = 3;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // </script\r\n                        if (sciptState === 3) {\r\n                            sciptState = 2;\r\n                        }\r\n                        else {\r\n                            stream.goBack(match.length); // to the beginning of the closing tag\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                state = ScannerState.WithinContent;\r\n                if (offset < stream.pos()) {\r\n                    return finishToken(offset, HtmlTokenType.Script);\r\n                }\r\n                return internalScan(); // no advance yet - jump to content\r\n            case ScannerState.WithinStyleContent:\r\n                stream.advanceUntilRegExp(/<\\/style/i);\r\n                state = ScannerState.WithinContent;\r\n                if (offset < stream.pos()) {\r\n                    return finishToken(offset, HtmlTokenType.Styles);\r\n                }\r\n                return internalScan(); // no advance yet - jump to content\r\n        }\r\n        stream.advance(1);\r\n        state = ScannerState.WithinContent;\r\n        return finishToken(offset, HtmlTokenType.Unknown, errorMessage);\r\n    }\r\n    function scanForRegexp(regexp) {\r\n        const offset = stream.pos();\r\n        state = ScannerState.WithinContent;\r\n        if (stream.advanceUntilRegExp(regexp)) {\r\n            return finishToken(offset, HtmlTokenType.Unknown);\r\n        }\r\n        return finishToken(offset, HtmlTokenType.EOS);\r\n    }\r\n    return {\r\n        scan,\r\n        scanForRegexp,\r\n        getTokenType: () => tokenType,\r\n        getTokenOffset: () => tokenOffset,\r\n        getTokenLength: () => stream.pos() - tokenOffset,\r\n        getTokenEnd: () => stream.pos(),\r\n        getTokenText: () => stream.getSource().substring(tokenOffset, stream.pos()),\r\n        getScannerState: () => state,\r\n        getTokenError: () => tokenError\r\n    };\r\n}\r\n//# sourceMappingURL=htmlScanner.js.map","references":[],"map":"{\"version\":3,\"file\":\"htmlScanner.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/template/parser/htmlScanner.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/parser/htmlScanner.d.ts","writeByteOrderMark":false,"text":"export declare enum HtmlTokenType {\r\n    StartCommentTag = 0,\r\n    Comment = 1,\r\n    EndCommentTag = 2,\r\n    StartTagOpen = 3,\r\n    StartTagClose = 4,\r\n    StartTagSelfClose = 5,\r\n    StartTag = 6,\r\n    StartInterpolation = 7,\r\n    EndTagOpen = 8,\r\n    EndTagClose = 9,\r\n    EndTag = 10,\r\n    EndInterpolation = 11,\r\n    DelimiterAssign = 12,\r\n    AttributeName = 13,\r\n    AttributeValue = 14,\r\n    StartDoctypeTag = 15,\r\n    Doctype = 16,\r\n    EndDoctypeTag = 17,\r\n    Content = 18,\r\n    InterpolationContent = 19,\r\n    Whitespace = 20,\r\n    Unknown = 21,\r\n    Script = 22,\r\n    Styles = 23,\r\n    EOS = 24\r\n}\r\nexport declare enum ScannerState {\r\n    WithinContent = 0,\r\n    WithinInterpolation = 1,\r\n    AfterOpeningStartTag = 2,\r\n    AfterOpeningEndTag = 3,\r\n    WithinDoctype = 4,\r\n    WithinTag = 5,\r\n    WithinEndTag = 6,\r\n    WithinComment = 7,\r\n    WithinScriptContent = 8,\r\n    WithinStyleContent = 9,\r\n    AfterAttributeName = 10,\r\n    BeforeAttributeValue = 11\r\n}\r\nexport interface Scanner {\r\n    scan(): HtmlTokenType;\r\n    scanForRegexp(regexp: RegExp): HtmlTokenType;\r\n    getTokenType(): HtmlTokenType;\r\n    getTokenOffset(): number;\r\n    getTokenLength(): number;\r\n    getTokenEnd(): number;\r\n    getTokenText(): string;\r\n    getTokenError(): string;\r\n    getScannerState(): ScannerState;\r\n}\r\nexport declare function createScanner(input: string, initialOffset?: number, initialState?: ScannerState): Scanner;\r\n"}}
