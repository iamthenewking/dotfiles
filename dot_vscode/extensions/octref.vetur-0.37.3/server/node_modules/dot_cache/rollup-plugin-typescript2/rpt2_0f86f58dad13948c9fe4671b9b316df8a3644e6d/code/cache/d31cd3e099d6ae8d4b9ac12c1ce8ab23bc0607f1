{"code":"import { HtmlTokenType, createScanner } from '../parser/htmlScanner';\r\nimport { getTagDefinition } from '../../template-common/tagDefinition';\r\nconst TRIVIAL_TOKEN = [HtmlTokenType.StartTagOpen, HtmlTokenType.EndTagOpen, HtmlTokenType.Whitespace];\r\nexport function findDefinition(document, position, htmlDocument, vueFileInfo) {\r\n    if (!vueFileInfo) {\r\n        return [];\r\n    }\r\n    const offset = document.offsetAt(position);\r\n    const node = htmlDocument.findNodeAt(offset);\r\n    if (!node || !node.tag) {\r\n        return [];\r\n    }\r\n    const inEndTag = node.endTagStart && offset >= node.endTagStart; // <html></ht|ml>\r\n    const startOffset = inEndTag ? node.endTagStart : node.start;\r\n    const scanner = createScanner(document.getText(), startOffset);\r\n    let token = scanner.scan();\r\n    function shouldAdvance() {\r\n        if (token === HtmlTokenType.EOS) {\r\n            return false;\r\n        }\r\n        const tokenEnd = scanner.getTokenEnd();\r\n        if (tokenEnd < offset) {\r\n            return true;\r\n        }\r\n        if (tokenEnd === offset) {\r\n            return TRIVIAL_TOKEN.includes(token);\r\n        }\r\n        return false;\r\n    }\r\n    while (shouldAdvance()) {\r\n        token = scanner.scan();\r\n    }\r\n    if (offset > scanner.getTokenEnd()) {\r\n        return [];\r\n    }\r\n    switch (token) {\r\n        case HtmlTokenType.StartTag:\r\n        case HtmlTokenType.EndTag:\r\n            return getTagDefinition(vueFileInfo, node.tag);\r\n    }\r\n    return [];\r\n}\r\n//# sourceMappingURL=htmlDefinition.js.map","references":["/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlParser.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlScanner.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/services/vueInfoService.ts","/Users/yoyo930021/git/vetur/server/src/modes/template-common/tagDefinition.ts"],"map":"{\"version\":3,\"file\":\"htmlDefinition.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/template/services/htmlDefinition.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAIrE,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAC;AAEvE,MAAM,aAAa,GAAG,CAAC,aAAa,CAAC,YAAY,EAAE,aAAa,CAAC,UAAU,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC;AAEvG,MAAM,UAAU,cAAc,CAC5B,QAAsB,EACtB,QAAkB,EAClB,YAA0B,EAC1B,WAAyB;IAEzB,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC7C,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;QACtB,OAAO,EAAE,CAAC;KACX;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,IAAI,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,iBAAiB;IAClF,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IAC7D,MAAM,OAAO,GAAG,aAAa,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;IAC/D,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;IAE3B,SAAS,aAAa;QACpB,IAAI,KAAK,KAAK,aAAa,CAAC,GAAG,EAAE;YAC/B,OAAO,KAAK,CAAC;SACd;QACD,MAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC;QACvC,IAAI,QAAQ,GAAG,MAAM,EAAE;YACrB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,QAAQ,KAAK,MAAM,EAAE;YACvB,OAAO,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,aAAa,EAAE,EAAE;QACtB,KAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;KACxB;IAED,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,EAAE,EAAE;QAClC,OAAO,EAAE,CAAC;KACX;IAED,QAAQ,KAAK,EAAE;QACb,KAAK,aAAa,CAAC,QAAQ,CAAC;QAC5B,KAAK,aAAa,CAAC,MAAM;YACvB,OAAO,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;KAClD;IAED,OAAO,EAAE,CAAC;AACZ,CAAC\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/services/htmlDefinition.d.ts","writeByteOrderMark":false,"text":"import { HTMLDocument } from '../parser/htmlParser';\r\nimport { Position, Location } from 'vscode-languageserver-types';\r\nimport type { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { VueFileInfo } from '../../../services/vueInfoService';\r\nexport declare function findDefinition(document: TextDocument, position: Position, htmlDocument: HTMLDocument, vueFileInfo?: VueFileInfo): Location[];\r\n"}}
