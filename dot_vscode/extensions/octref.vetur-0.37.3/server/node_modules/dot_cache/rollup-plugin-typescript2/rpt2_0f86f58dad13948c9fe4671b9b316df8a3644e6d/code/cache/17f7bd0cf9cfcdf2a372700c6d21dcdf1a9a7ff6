{"code":"import path from 'path';\r\nimport { getPathDepth, normalizeFileNameToFsPath, normalizeFileNameResolve, normalizeAbsolutePath } from './utils/paths';\r\nimport fg from 'fast-glob';\r\nimport { findConfigFile } from './utils/workspace';\r\nimport { flatten } from 'lodash';\r\nexport function getDefaultVLSConfig() {\r\n    return {\r\n        vetur: {\r\n            ignoreProjectWarning: false,\r\n            useWorkspaceDependencies: false,\r\n            validation: {\r\n                template: true,\r\n                templateProps: false,\r\n                interpolation: true,\r\n                style: true,\r\n                script: true\r\n            },\r\n            completion: {\r\n                autoImport: false,\r\n                tagCasing: 'initial',\r\n                scaffoldSnippetSources: {\r\n                    workspace: '💼',\r\n                    user: '🗒️',\r\n                    vetur: '✌'\r\n                }\r\n            },\r\n            grammar: {\r\n                customBlocks: {}\r\n            },\r\n            format: {\r\n                enable: true,\r\n                options: {\r\n                    tabSize: 2,\r\n                    useTabs: false\r\n                },\r\n                defaultFormatter: {},\r\n                defaultFormatterOptions: {},\r\n                scriptInitialIndent: false,\r\n                styleInitialIndent: false\r\n            },\r\n            languageFeatures: {\r\n                codeActions: true,\r\n                updateImportOnFileMove: true,\r\n                semanticTokens: true\r\n            },\r\n            trace: {\r\n                server: 'off'\r\n            },\r\n            dev: {\r\n                vlsPath: '',\r\n                vlsPort: -1,\r\n                logLevel: 'INFO'\r\n            },\r\n            experimental: {\r\n                templateInterpolationService: false\r\n            }\r\n        },\r\n        css: {},\r\n        html: {\r\n            suggest: {}\r\n        },\r\n        javascript: {\r\n            format: {}\r\n        },\r\n        typescript: {\r\n            tsdk: null,\r\n            format: {}\r\n        },\r\n        emmet: {},\r\n        stylusSupremacy: {},\r\n        languageStylus: {}\r\n    };\r\n}\r\nexport async function getVeturFullConfig(rootPathForConfig, workspacePath, veturConfig) {\r\n    var _a, _b;\r\n    const oldProjects = (_a = veturConfig.projects) !== null && _a !== void 0 ? _a : [workspacePath];\r\n    const projects = oldProjects\r\n        .map(project => {\r\n        var _a, _b;\r\n        const getFallbackPackagePath = (projectRoot) => {\r\n            const fallbackPackage = findConfigFile(projectRoot, 'package.json');\r\n            return fallbackPackage ? normalizeFileNameToFsPath(fallbackPackage) : undefined;\r\n        };\r\n        const getFallbackTsconfigPath = (projectRoot) => {\r\n            const jsconfigPath = findConfigFile(projectRoot, 'jsconfig.json');\r\n            const tsconfigPath = findConfigFile(projectRoot, 'tsconfig.json');\r\n            if (jsconfigPath && tsconfigPath) {\r\n                const tsconfigFsPath = normalizeFileNameToFsPath(tsconfigPath);\r\n                const jsconfigFsPath = normalizeFileNameToFsPath(jsconfigPath);\r\n                return getPathDepth(tsconfigPath, '/') >= getPathDepth(jsconfigFsPath, '/') ? tsconfigFsPath : jsconfigFsPath;\r\n            }\r\n            const configPath = tsconfigPath || jsconfigPath;\r\n            return configPath ? normalizeFileNameToFsPath(configPath) : undefined;\r\n        };\r\n        if (typeof project === 'string') {\r\n            const projectRoot = normalizeAbsolutePath(project, rootPathForConfig);\r\n            return {\r\n                root: projectRoot,\r\n                package: getFallbackPackagePath(projectRoot),\r\n                tsconfig: getFallbackTsconfigPath(projectRoot),\r\n                snippetFolder: normalizeFileNameResolve(projectRoot, '.vscode/vetur/snippets'),\r\n                globalComponents: []\r\n            };\r\n        }\r\n        const projectRoot = normalizeAbsolutePath(project.root, rootPathForConfig);\r\n        return {\r\n            root: projectRoot,\r\n            package: project.package\r\n                ? normalizeAbsolutePath(project.package, projectRoot)\r\n                : getFallbackPackagePath(projectRoot),\r\n            tsconfig: project.tsconfig\r\n                ? normalizeAbsolutePath(project.tsconfig, projectRoot)\r\n                : getFallbackTsconfigPath(projectRoot),\r\n            snippetFolder: project.snippetFolder\r\n                ? normalizeAbsolutePath(project.snippetFolder, projectRoot)\r\n                : normalizeFileNameResolve(projectRoot, '.vscode/vetur/snippets'),\r\n            globalComponents: flatten((_b = (_a = project.globalComponents) === null || _a === void 0 ? void 0 : _a.map(comp => {\r\n                if (typeof comp === 'string') {\r\n                    return fg.sync(comp, { cwd: projectRoot, absolute: true, suppressErrors: true }).map(fileName => ({\r\n                        name: path.basename(fileName, path.extname(fileName)),\r\n                        path: normalizeFileNameToFsPath(fileName)\r\n                    }));\r\n                }\r\n                return comp;\r\n            })) !== null && _b !== void 0 ? _b : [])\r\n        };\r\n    })\r\n        .sort((a, b) => {\r\n        const r = getPathDepth(b.root, '/') - getPathDepth(a.root, '/');\r\n        if (r !== 0) {\r\n            return r;\r\n        }\r\n        return b.root.length - a.root.length;\r\n    });\r\n    return {\r\n        settings: (_b = veturConfig.settings) !== null && _b !== void 0 ? _b : {},\r\n        projects\r\n    };\r\n}\r\n//# sourceMappingURL=config.js.map","references":["/Users/yoyo930021/git/vetur/server/src/utils/paths.ts","/Users/yoyo930021/git/vetur/server/node_modules/fast-glob/out/index.d.ts","/Users/yoyo930021/git/vetur/server/src/utils/workspace.ts","/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"config.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/config.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/config.d.ts","writeByteOrderMark":false,"text":"export interface VLSFormatConfig {\r\n    defaultFormatter: {\r\n        [lang: string]: string;\r\n    };\r\n    defaultFormatterOptions: {\r\n        [lang: string]: any;\r\n    };\r\n    scriptInitialIndent: boolean;\r\n    styleInitialIndent: boolean;\r\n    options: {\r\n        tabSize: number;\r\n        useTabs: boolean;\r\n    };\r\n}\r\nexport interface VLSConfig {\r\n    vetur: {\r\n        ignoreProjectWarning: boolean;\r\n        useWorkspaceDependencies: boolean;\r\n        completion: {\r\n            autoImport: boolean;\r\n            tagCasing: 'initial' | 'kebab';\r\n            scaffoldSnippetSources: {\r\n                workspace: string;\r\n                user: string;\r\n                vetur: string;\r\n            };\r\n        };\r\n        grammar: {\r\n            customBlocks: {\r\n                [lang: string]: string;\r\n            };\r\n        };\r\n        validation: {\r\n            template: boolean;\r\n            templateProps: boolean;\r\n            interpolation: boolean;\r\n            style: boolean;\r\n            script: boolean;\r\n        };\r\n        format: {\r\n            enable: boolean;\r\n            options: {\r\n                tabSize: number;\r\n                useTabs: boolean;\r\n            };\r\n            defaultFormatter: {\r\n                [lang: string]: string;\r\n            };\r\n            defaultFormatterOptions: {\r\n                [lang: string]: {};\r\n            };\r\n            scriptInitialIndent: boolean;\r\n            styleInitialIndent: boolean;\r\n        };\r\n        languageFeatures: {\r\n            codeActions: boolean;\r\n            updateImportOnFileMove: boolean;\r\n            semanticTokens: boolean;\r\n        };\r\n        trace: {\r\n            server: 'off' | 'messages' | 'verbose';\r\n        };\r\n        dev: {\r\n            vlsPath: string;\r\n            vlsPort: number;\r\n            logLevel: 'INFO' | 'DEBUG';\r\n        };\r\n        experimental: {\r\n            templateInterpolationService: boolean;\r\n        };\r\n    };\r\n}\r\nexport interface VLSFullConfig extends VLSConfig {\r\n    emmet?: any;\r\n    html?: any;\r\n    css?: any;\r\n    sass?: any;\r\n    javascript?: any;\r\n    typescript?: any;\r\n    prettier?: any;\r\n    stylusSupremacy?: any;\r\n    languageStylus?: any;\r\n}\r\nexport declare function getDefaultVLSConfig(): VLSFullConfig;\r\nexport interface BasicComponentInfo {\r\n    name: string;\r\n    path: string;\r\n}\r\nexport type Glob = string;\r\nexport interface VeturProject<C = BasicComponentInfo | Glob> {\r\n    root: string;\r\n    package?: string;\r\n    tsconfig?: string;\r\n    snippetFolder: string;\r\n    globalComponents: C[];\r\n}\r\nexport interface VeturFullConfig {\r\n    settings: Record<string, boolean | string | number>;\r\n    projects: VeturProject<BasicComponentInfo>[];\r\n}\r\nexport type VeturConfig = Partial<Pick<VeturFullConfig, 'settings'>> & {\r\n    projects?: Array<string | (Pick<VeturProject, 'root'> & Partial<VeturProject>)>;\r\n};\r\nexport declare function getVeturFullConfig(rootPathForConfig: string, workspacePath: string, veturConfig: VeturConfig): Promise<VeturFullConfig>;\r\n"}}
