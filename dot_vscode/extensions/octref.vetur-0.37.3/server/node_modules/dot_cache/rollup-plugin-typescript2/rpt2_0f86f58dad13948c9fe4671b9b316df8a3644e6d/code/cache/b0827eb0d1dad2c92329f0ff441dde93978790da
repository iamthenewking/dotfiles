{"code":"import { renderHelperName, componentHelperName, iterationHelperName, componentDataName } from './transformTemplate';\r\n// This bridge file will be injected into TypeScript language service\r\n// it enable type checking and completion, yet still preserve precise option type\r\nexport const moduleName = 'vue-editor-bridge';\r\nexport const fileName = 'vue-temp/vue-editor-bridge.ts';\r\nconst renderHelpers = `\ntype ComponentListeners<T, TH> = {\n  [K in keyof T]?: (this: TH, $event: T[K]) => any;\n};\nexport interface ${componentDataName}<T, TH> {\n  props: Record<string, any>;\n  on: ComponentListeners<T, TH>;\n  directives: any[];\n}\nexport declare const ${renderHelperName}: {\n  <T>(Component: (new (...args: any[]) => T), fn: (this: T) => any): any;\n};\nexport declare const ${componentHelperName}: {\n  <T>(\n    vm: T,\n    tag: string,\n    data: ${componentDataName}<Record<string, any>, T> & ThisType<T>,\n    children: any[]\n  ): any;\n};\nexport declare const ${iterationHelperName}: {\n  <T>(list: readonly T[], fn: (value: T, index: number) => any): any;\n  <T>(obj: { [key: string]: T }, fn: (value: T, key: string, index: number) => any): any;\n  (num: number, fn: (value: number, index: number) => any): any;\n  <T>(obj: object, fn: (value: any, key: string, index: number) => any): any;\n};\n`;\r\nexport const preVue25Content = `\nimport Vue from 'vue';\nexport interface GeneralOption extends Vue.ComponentOptions<Vue> {\n  [key: string]: any;\n}\nexport default function bridge<T>(t: T & GeneralOption): T {\n  return t;\n}\n` + renderHelpers;\r\nexport const vue25Content = `\nimport Vue from 'vue';\nconst func = Vue.extend;\nexport default func;\n` + renderHelpers;\r\nexport const vue30Content = `\nimport { defineComponent } from 'vue';\nconst func = defineComponent;\nexport default func;\n` + renderHelpers;\r\n//# sourceMappingURL=bridge.js.map","references":["/Users/yoyo930021/git/vetur/server/src/services/typescriptService/transformTemplate.ts"],"map":"{\"version\":3,\"file\":\"bridge.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/services/typescriptService/bridge.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,iBAAiB,EAAE,MAAM,qBAAqB,CAAC;AAEpH,qEAAqE;AACrE,iFAAiF;AAEjF,MAAM,CAAC,MAAM,UAAU,GAAG,mBAAmB,CAAC;AAE9C,MAAM,CAAC,MAAM,QAAQ,GAAG,+BAA+B,CAAC;AAExD,MAAM,aAAa,GAAG;;;;mBAIH,iBAAiB;;;;;uBAKb,gBAAgB;;;uBAGhB,mBAAmB;;;;YAI9B,iBAAiB;;;;uBAIN,mBAAmB;;;;;;CAMzC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAC1B;;;;;;;;CAQD,GAAG,aAAa,CAAC;AAElB,MAAM,CAAC,MAAM,YAAY,GACvB;;;;CAID,GAAG,aAAa,CAAC;AAElB,MAAM,CAAC,MAAM,YAAY,GACvB;;;;CAID,GAAG,aAAa,CAAC\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/typescriptService/bridge.d.ts","writeByteOrderMark":false,"text":"export declare const moduleName = \"vue-editor-bridge\";\r\nexport declare const fileName = \"vue-temp/vue-editor-bridge.ts\";\r\nexport declare const preVue25Content: string;\r\nexport declare const vue25Content: string;\r\nexport declare const vue30Content: string;\r\n"}}
