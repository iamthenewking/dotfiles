{"code":"import { TextDocuments } from 'vscode-languageserver';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\n/**\r\n * Service responsible for managing documents being syned through LSP\r\n * Todo - Switch to incremental sync\r\n */\r\nexport class DocumentService {\r\n    constructor(conn) {\r\n        this.documents = new TextDocuments(TextDocument);\r\n        this.documents.listen(conn);\r\n    }\r\n    getDocument(uri) {\r\n        return this.documents.get(uri);\r\n    }\r\n    getAllDocuments() {\r\n        return this.documents.all();\r\n    }\r\n    get onDidChangeContent() {\r\n        return this.documents.onDidChangeContent;\r\n    }\r\n    get onDidClose() {\r\n        return this.documents.onDidClose;\r\n    }\r\n}\r\n//# sourceMappingURL=documentService.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver/lib/common/api.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts"],"map":"{\"version\":3,\"file\":\"documentService.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/services/documentService.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAc,aAAa,EAAE,MAAM,uBAAuB,CAAC;AAClE,OAAO,EAAE,YAAY,EAAE,MAAM,oCAAoC,CAAC;AAElE;;;GAGG;AACH,MAAM,OAAO,eAAe;IAG1B,YAAY,IAAgB;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,aAAa,CAAC,YAAY,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,WAAW,CAAC,GAAW;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IAC9B,CAAC;IAED,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;IAC3C,CAAC;IACD,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;IACnC,CAAC;CACF\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/services/documentService.d.ts","writeByteOrderMark":false,"text":"import { Connection } from 'vscode-languageserver';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\n/**\r\n * Service responsible for managing documents being syned through LSP\r\n * Todo - Switch to incremental sync\r\n */\r\nexport declare class DocumentService {\r\n    private documents;\r\n    constructor(conn: Connection);\r\n    getDocument(uri: string): TextDocument | undefined;\r\n    getAllDocuments(): TextDocument[];\r\n    get onDidChangeContent(): import(\"vscode-languageserver\").Event<import(\"vscode-languageserver\").TextDocumentChangeEvent<TextDocument>>;\r\n    get onDidClose(): import(\"vscode-languageserver\").Event<import(\"vscode-languageserver\").TextDocumentChangeEvent<TextDocument>>;\r\n}\r\n"}}
