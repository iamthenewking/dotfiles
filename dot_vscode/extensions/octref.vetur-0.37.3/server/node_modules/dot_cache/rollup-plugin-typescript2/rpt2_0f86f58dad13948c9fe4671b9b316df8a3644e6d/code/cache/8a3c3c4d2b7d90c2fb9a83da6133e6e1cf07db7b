{"code":"import { camelCase, kebabCase, upperFirst } from 'lodash';\r\nimport { EOL as NEW_LINE } from 'os';\r\nimport { basename } from 'path';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { TextEdit } from 'vscode-languageserver-types';\r\nimport { modulePathToValidIdentifier, toMarkupContent } from '../../utils/strings';\r\n/**\r\n * Auto import component in script when completion in template.\r\n * ## Implementation:\r\n * 1. Get all vue files path from ts language service host.\r\n * 2. Record more data in VueInfoService. Like: componentsDefine position.\r\n * 3. Provide completion list in template from vue files path\r\n * 4. Mock code to trigger auto import in TS for make importing component TextEdit.\r\n * 5. Add component define TextEdit from second step.\r\n * 6. Provide completion/resolve from fourth and fifth steps.\r\n *\r\n * ## Example\r\n * For mock code example in TS when componentName is `Item`.\r\n * The `=` is position for call completion/resolve in TS language service.\r\n * ```typescript\r\n * export default {\r\n *   components: {\r\n *     Item: ItemV=\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport function createAutoImportSfcPlugin(tsModule, vueInfoService) {\r\n    let getConfigure;\r\n    let getVueFiles;\r\n    let getJSResolve;\r\n    let getTSScriptTarget = () => undefined;\r\n    function createMockDoc(document, componentInsertPos, mockPartContent) {\r\n        const mockDocContent = document.getText().slice(0, componentInsertPos) + mockPartContent + document.getText().slice(componentInsertPos);\r\n        const mockDoc = TextDocument.create(document.uri, document.languageId, document.version + 1, mockDocContent);\r\n        return mockDoc;\r\n    }\r\n    function getJSImportEdits(nameForTriggerResolveInTs, mockDoc, offset, item, componentName) {\r\n        var _a, _b;\r\n        const mockCompletionItem = {\r\n            label: nameForTriggerResolveInTs + 'Vue',\r\n            data: {\r\n                languageId: 'vue-html',\r\n                uri: mockDoc.uri,\r\n                offset,\r\n                source: item.data.path\r\n            }\r\n        };\r\n        const textEdits = (_b = (_a = getJSResolve(mockDoc, mockCompletionItem)) === null || _a === void 0 ? void 0 : _a.additionalTextEdits) === null || _b === void 0 ? void 0 : _b.map(edit => {\r\n            edit.newText = edit.newText.replace(nameForTriggerResolveInTs + 'Vue', componentName);\r\n            return edit;\r\n        });\r\n        return textEdits;\r\n    }\r\n    function getNoDuplicateComponentName(childComponents, componentCompletionName) {\r\n        let index = 1;\r\n        while (childComponents.some(el => [componentCompletionName, componentCompletionName.toLowerCase(), kebabCase(componentCompletionName)].includes(el.name))) {\r\n            componentCompletionName = `${componentCompletionName}${index++}`;\r\n        }\r\n        return upperFirst(componentCompletionName);\r\n    }\r\n    return {\r\n        setGetConfigure(fn) {\r\n            getConfigure = fn;\r\n        },\r\n        setGetFilesFn(fn) {\r\n            getVueFiles = fn;\r\n        },\r\n        setGetJSResolve(fn) {\r\n            getJSResolve = fn;\r\n        },\r\n        setGetTSScriptTarget(fn) {\r\n            getTSScriptTarget = fn;\r\n        },\r\n        doComplete(document) {\r\n            var _a, _b, _c;\r\n            const config = getConfigure();\r\n            if (!config.vetur.completion.autoImport) {\r\n                return [];\r\n            }\r\n            if (!getVueFiles || !getJSResolve || !vueInfoService) {\r\n                return [];\r\n            }\r\n            const childComponentsPath = (_c = (_b = (_a = vueInfoService.getInfo(document)) === null || _a === void 0 ? void 0 : _a.componentInfo.childComponents) === null || _b === void 0 ? void 0 : _b.map(el => { var _a; return (_a = el.definition) === null || _a === void 0 ? void 0 : _a.path; })) !== null && _c !== void 0 ? _c : [];\r\n            return getVueFiles()\r\n                .filter(fileName => !childComponentsPath.includes(fileName))\r\n                .map(fileName => {\r\n                let tagName = basename(fileName, '.vue');\r\n                if (config.vetur.completion.tagCasing === 'kebab') {\r\n                    tagName = kebabCase(tagName);\r\n                }\r\n                const documentation = `\n\\`\\`\\`typescript\nimport ${upperFirst(camelCase(tagName))} from '${fileName}'\n\\`\\`\\`\n`;\r\n                return {\r\n                    label: tagName,\r\n                    insertText: tagName,\r\n                    documentation: toMarkupContent(documentation),\r\n                    data: {\r\n                        languageId: 'vue-html',\r\n                        uri: document.uri,\r\n                        isFromAutoImportVueService: true,\r\n                        path: fileName\r\n                    }\r\n                };\r\n            });\r\n        },\r\n        isMyResolve(item) {\r\n            var _a, _b;\r\n            return (_b = (_a = item.data) === null || _a === void 0 ? void 0 : _a.isFromAutoImportVueService) !== null && _b !== void 0 ? _b : false;\r\n        },\r\n        doResolve(document, item) {\r\n            var _a, _b, _c;\r\n            const config = getConfigure();\r\n            const componentInfo = (_a = vueInfoService === null || vueInfoService === void 0 ? void 0 : vueInfoService.getInfo(document)) === null || _a === void 0 ? void 0 : _a.componentInfo;\r\n            if (!componentInfo) {\r\n                return item;\r\n            }\r\n            const componentDefine = componentInfo === null || componentInfo === void 0 ? void 0 : componentInfo.componentsDefine;\r\n            const childComponents = (_b = componentInfo === null || componentInfo === void 0 ? void 0 : componentInfo.childComponents) === null || _b === void 0 ? void 0 : _b.filter(c => !c.global);\r\n            const nameForTriggerResolveInTs = modulePathToValidIdentifier(tsModule, item.data.path, (_c = getTSScriptTarget()) !== null && _c !== void 0 ? _c : tsModule.ScriptTarget.ESNext);\r\n            /**\r\n             * have `components` property case\r\n             */\r\n            if (componentDefine && childComponents) {\r\n                const componentName = getNoDuplicateComponentName(childComponents, nameForTriggerResolveInTs);\r\n                const componentInsertPos = componentDefine === null || componentDefine === void 0 ? void 0 : componentDefine.insertPos;\r\n                const mockPartContent = `${nameForTriggerResolveInTs}: ${nameForTriggerResolveInTs.slice(0, nameForTriggerResolveInTs.length - 2)}`;\r\n                const mockDoc = createMockDoc(document, componentInsertPos, mockPartContent);\r\n                const textEdits = getJSImportEdits(nameForTriggerResolveInTs, mockDoc, componentInsertPos + mockPartContent.length, item, componentName);\r\n                if (textEdits) {\r\n                    const currentComponentText = document.getText().slice(componentDefine.start, componentDefine.end);\r\n                    const newInsertTexts = [];\r\n                    if (document.getText().charAt(componentInsertPos - 1) !== ',' && childComponents.length !== 0) {\r\n                        newInsertTexts.push(',');\r\n                    }\r\n                    if (currentComponentText.includes('\\n')) {\r\n                        newInsertTexts.push(NEW_LINE);\r\n                        const textInLine = document\r\n                            .getText()\r\n                            .slice(document.getText().lastIndexOf('\\n', componentDefine.start), document.getText().indexOf('\\n', componentDefine.start));\r\n                        newInsertTexts.push(textInLine.slice(1, textInLine.slice(1).search(/[^ ]/) + 1).repeat(2));\r\n                    }\r\n                    else if (childComponents.length !== 0) {\r\n                        newInsertTexts.push(' ');\r\n                    }\r\n                    newInsertTexts.push(componentName);\r\n                    textEdits.push(TextEdit.insert(document.positionAt(componentInsertPos), newInsertTexts.join('')));\r\n                }\r\n                item.additionalTextEdits = textEdits;\r\n                item.insertText = config.vetur.completion.tagCasing === 'initial' ? componentName : kebabCase(componentName);\r\n            }\r\n            else if (componentInfo.insertInOptionAPIPos) {\r\n                /**\r\n                 * no have `components` property case\r\n                 */\r\n                const componentName = nameForTriggerResolveInTs;\r\n                const mockEndPart = '},';\r\n                const mockPartContent = `components: {${nameForTriggerResolveInTs}: ` +\r\n                    nameForTriggerResolveInTs.slice(0, nameForTriggerResolveInTs.length - 2) +\r\n                    mockEndPart;\r\n                const mockDoc = createMockDoc(document, componentInfo.insertInOptionAPIPos, mockPartContent);\r\n                const textEdits = getJSImportEdits(nameForTriggerResolveInTs, mockDoc, componentInfo.insertInOptionAPIPos + mockPartContent.length - mockEndPart.length, item, componentName);\r\n                if (textEdits) {\r\n                    const newInsertTexts = [NEW_LINE];\r\n                    if (config.vetur.format.options.useTabs) {\r\n                        newInsertTexts.push('\\t');\r\n                    }\r\n                    else {\r\n                        newInsertTexts.push(' '.repeat(config.vetur.format.options.tabSize));\r\n                    }\r\n                    newInsertTexts.push(`components: { ${componentName} },`);\r\n                    textEdits.push(TextEdit.insert(document.positionAt(componentInfo.insertInOptionAPIPos), newInsertTexts.join('')));\r\n                }\r\n                item.additionalTextEdits = textEdits;\r\n                item.insertText = config.vetur.completion.tagCasing === 'initial' ? componentName : kebabCase(componentName);\r\n            }\r\n            return item;\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=autoImportSfcPlugin.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/typescript/lib/typescript.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver/lib/common/api.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/config.ts","/Users/yoyo930021/git/vetur/server/src/utils/strings.ts","/Users/yoyo930021/git/vetur/server/src/services/dependencyService.ts","/Users/yoyo930021/git/vetur/server/src/services/vueInfoService.ts"],"map":"{\"version\":3,\"file\":\"autoImportSfcPlugin.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modes/plugins/autoImportSfcPlugin.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/plugins/autoImportSfcPlugin.d.ts","writeByteOrderMark":false,"text":"import type ts from 'typescript';\r\nimport { CompletionItem } from 'vscode-languageserver';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { VLSFullConfig } from '../../config';\r\nimport { RuntimeLibrary } from '../../services/dependencyService';\r\nimport { VueInfoService } from '../../services/vueInfoService';\r\nexport interface AutoImportSfcPlugin {\r\n    setGetConfigure(fn: () => VLSFullConfig): void;\r\n    setGetFilesFn(fn: () => string[]): void;\r\n    setGetJSResolve(fn: (doc: TextDocument, item: CompletionItem) => CompletionItem): void;\r\n    setGetTSScriptTarget(fn: () => ts.ScriptTarget | undefined): void;\r\n    doComplete(document: TextDocument): CompletionItem[];\r\n    isMyResolve(item: CompletionItem): boolean;\r\n    doResolve(document: TextDocument, item: CompletionItem): CompletionItem;\r\n}\r\n/**\r\n * Auto import component in script when completion in template.\r\n * ## Implementation:\r\n * 1. Get all vue files path from ts language service host.\r\n * 2. Record more data in VueInfoService. Like: componentsDefine position.\r\n * 3. Provide completion list in template from vue files path\r\n * 4. Mock code to trigger auto import in TS for make importing component TextEdit.\r\n * 5. Add component define TextEdit from second step.\r\n * 6. Provide completion/resolve from fourth and fifth steps.\r\n *\r\n * ## Example\r\n * For mock code example in TS when componentName is `Item`.\r\n * The `=` is position for call completion/resolve in TS language service.\r\n * ```typescript\r\n * export default {\r\n *   components: {\r\n *     Item: ItemV=\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport declare function createAutoImportSfcPlugin(tsModule: RuntimeLibrary['typescript'], vueInfoService?: VueInfoService): AutoImportSfcPlugin;\r\n"}}
