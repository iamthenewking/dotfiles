{"code":"import { createScanner, HtmlTokenType } from '../modes/template/parser/htmlScanner';\r\nimport { removeQuotes } from '../utils/strings';\r\nconst defaultScriptLang = 'javascript';\r\nconst defaultCSSLang = 'css';\r\nexport function parseVueDocumentRegions(document) {\r\n    const regions = [];\r\n    const text = document.getText();\r\n    const scanner = createScanner(text);\r\n    let lastTagName = '';\r\n    let lastAttributeName = '';\r\n    let languageIdFromType = '';\r\n    let attrs = {};\r\n    const importedScripts = [];\r\n    let stakes = 0;\r\n    let token = scanner.scan();\r\n    while (token !== HtmlTokenType.EOS) {\r\n        switch (token) {\r\n            case HtmlTokenType.Styles:\r\n                regions.push({\r\n                    languageId: /^(sass|scss|less|postcss|stylus)$/.test(languageIdFromType)\r\n                        ? languageIdFromType\r\n                        : defaultCSSLang,\r\n                    start: scanner.getTokenOffset(),\r\n                    end: scanner.getTokenEnd(),\r\n                    type: 'style',\r\n                    attrs\r\n                });\r\n                languageIdFromType = '';\r\n                break;\r\n            case HtmlTokenType.Script:\r\n                regions.push({\r\n                    languageId: languageIdFromType ? languageIdFromType : defaultScriptLang,\r\n                    start: scanner.getTokenOffset(),\r\n                    end: scanner.getTokenEnd(),\r\n                    type: 'script',\r\n                    attrs\r\n                });\r\n                languageIdFromType = '';\r\n                break;\r\n            case HtmlTokenType.StartTag:\r\n                stakes++;\r\n                const tagName = scanner.getTokenText();\r\n                if (tagName === 'template' && stakes === 1) {\r\n                    const templateRegion = scanTemplateRegion(scanner, text);\r\n                    if (templateRegion) {\r\n                        regions.push(templateRegion);\r\n                    }\r\n                }\r\n                else if (!['style', 'script'].includes(tagName) && stakes === 1) {\r\n                    const customRegion = scanCustomRegion(tagName, scanner, text);\r\n                    if (customRegion) {\r\n                        regions.push(customRegion);\r\n                    }\r\n                }\r\n                lastTagName = tagName;\r\n                lastAttributeName = '';\r\n                break;\r\n            case HtmlTokenType.AttributeName:\r\n                lastAttributeName = scanner.getTokenText();\r\n                attrs[lastAttributeName] = true;\r\n                break;\r\n            case HtmlTokenType.AttributeValue:\r\n                const attrValue = removeQuotes(scanner.getTokenText());\r\n                if (lastAttributeName === 'lang') {\r\n                    languageIdFromType = getLanguageIdFromLangAttr(attrValue);\r\n                }\r\n                else {\r\n                    if (lastAttributeName === 'src' && lastTagName.toLowerCase() === 'script') {\r\n                        const value = attrValue;\r\n                        importedScripts.push(value);\r\n                    }\r\n                }\r\n                attrs[lastAttributeName] = attrValue;\r\n                lastAttributeName = '';\r\n                break;\r\n            case HtmlTokenType.StartTagSelfClose:\r\n            case HtmlTokenType.EndTagClose:\r\n                attrs = {};\r\n                stakes--;\r\n                lastAttributeName = '';\r\n                languageIdFromType = '';\r\n                break;\r\n        }\r\n        token = scanner.scan();\r\n    }\r\n    return {\r\n        regions,\r\n        importedScripts\r\n    };\r\n}\r\nfunction scanTemplateRegion(scanner, text) {\r\n    let languageId = 'vue-html';\r\n    let token = -1;\r\n    let start = 0;\r\n    let end;\r\n    const attrs = {};\r\n    // Scan until finding matching template EndTag\r\n    // Also record immediate next StartTagClose to find start\r\n    let unClosedTemplate = 1;\r\n    let lastAttributeName = null;\r\n    while (unClosedTemplate !== 0) {\r\n        // skip parsing on non html syntax, just search terminator\r\n        if (token === HtmlTokenType.AttributeValue && languageId !== 'vue-html') {\r\n            while (![HtmlTokenType.StartTagClose, HtmlTokenType.StartTagSelfClose].includes(token)) {\r\n                token = scanner.scan();\r\n            }\r\n            start = scanner.getTokenEnd();\r\n            token = scanner.scanForRegexp(/<\\/template>/);\r\n            if (token === HtmlTokenType.EOS) {\r\n                return null;\r\n            }\r\n            // scan to `EndTag`, past `</` to `template`\r\n            while (token !== HtmlTokenType.EndTag) {\r\n                token = scanner.scan();\r\n            }\r\n            break;\r\n        }\r\n        token = scanner.scan();\r\n        if (token === HtmlTokenType.EOS) {\r\n            return null;\r\n        }\r\n        if (start === 0) {\r\n            if (token === HtmlTokenType.AttributeName) {\r\n                lastAttributeName = scanner.getTokenText();\r\n                attrs[lastAttributeName] = true;\r\n            }\r\n            else if (token === HtmlTokenType.AttributeValue) {\r\n                const attrValue = removeQuotes(scanner.getTokenText());\r\n                if (lastAttributeName === 'lang') {\r\n                    languageId = getLanguageIdFromLangAttr(attrValue);\r\n                }\r\n                if (lastAttributeName) {\r\n                    attrs[lastAttributeName] = attrValue;\r\n                }\r\n                lastAttributeName = null;\r\n            }\r\n            else if (token === HtmlTokenType.StartTagClose) {\r\n                start = scanner.getTokenEnd();\r\n            }\r\n        }\r\n        else {\r\n            if (token === HtmlTokenType.StartTag && scanner.getTokenText() === 'template') {\r\n                unClosedTemplate++;\r\n            }\r\n            else if (token === HtmlTokenType.EndTag && scanner.getTokenText() === 'template') {\r\n                unClosedTemplate--;\r\n                // test leading </template>\r\n                const charPosBeforeEndTag = scanner.getTokenOffset() - 3;\r\n                if (text[charPosBeforeEndTag] === '\\n') {\r\n                    break;\r\n                }\r\n            }\r\n            else if (token === HtmlTokenType.Unknown) {\r\n                if (scanner.getTokenText().charAt(0) === '<') {\r\n                    const offset = scanner.getTokenOffset();\r\n                    const unknownText = text.slice(offset, offset + 11);\r\n                    if (unknownText === '</template>') {\r\n                        unClosedTemplate--;\r\n                        // test leading </template>\r\n                        if (text[offset - 1] === '\\n') {\r\n                            return {\r\n                                languageId,\r\n                                start,\r\n                                end: offset,\r\n                                type: 'template',\r\n                                attrs\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // In EndTag, find end\r\n    // -2 for </\r\n    end = scanner.getTokenOffset() - 2;\r\n    return {\r\n        languageId,\r\n        start,\r\n        end,\r\n        type: 'template',\r\n        attrs\r\n    };\r\n}\r\nfunction scanCustomRegion(tagName, scanner, text) {\r\n    let languageId = 'unknown';\r\n    let token = -1;\r\n    let start = 0;\r\n    let end;\r\n    const attrs = {};\r\n    // Scan until finding matching template EndTag\r\n    // Also record immediate next StartTagClose to find start\r\n    let unClosedTag = 1;\r\n    let lastAttributeName = null;\r\n    while (unClosedTag !== 0) {\r\n        token = scanner.scan();\r\n        if (token === HtmlTokenType.EOS) {\r\n            return null;\r\n        }\r\n        if (start === 0) {\r\n            if (token === HtmlTokenType.AttributeName) {\r\n                lastAttributeName = scanner.getTokenText();\r\n                attrs[lastAttributeName] = true;\r\n            }\r\n            else if (token === HtmlTokenType.AttributeValue) {\r\n                const attrValue = removeQuotes(scanner.getTokenText());\r\n                if (lastAttributeName === 'lang') {\r\n                    languageId = getLanguageIdFromLangAttr(attrValue);\r\n                }\r\n                if (lastAttributeName) {\r\n                    attrs[lastAttributeName] = attrValue;\r\n                }\r\n                lastAttributeName = null;\r\n            }\r\n            else if (token === HtmlTokenType.StartTagClose) {\r\n                start = scanner.getTokenEnd();\r\n            }\r\n        }\r\n        else {\r\n            if (token === HtmlTokenType.StartTag && scanner.getTokenText() === tagName) {\r\n                unClosedTag++;\r\n            }\r\n            else if (token === HtmlTokenType.EndTag && scanner.getTokenText() === tagName) {\r\n                unClosedTag--;\r\n                // test leading </${tagName}>\r\n                const charPosBeforeEndTag = scanner.getTokenOffset() - 3;\r\n                if (text[charPosBeforeEndTag] === '\\n') {\r\n                    break;\r\n                }\r\n            }\r\n            else if (token === HtmlTokenType.Unknown) {\r\n                if (scanner.getTokenText().charAt(0) === '<') {\r\n                    const offset = scanner.getTokenOffset();\r\n                    const unknownText = text.slice(offset, offset + `</${tagName}>`.length);\r\n                    if (unknownText === `</${tagName}>`) {\r\n                        unClosedTag--;\r\n                        // test leading </${tagName}>\r\n                        if (text[offset - 1] === '\\n') {\r\n                            return {\r\n                                languageId,\r\n                                start,\r\n                                end: offset,\r\n                                type: 'custom',\r\n                                attrs\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // In EndTag, find end\r\n    // -2 for </\r\n    end = scanner.getTokenOffset() - 2;\r\n    return {\r\n        languageId,\r\n        start,\r\n        end,\r\n        type: 'custom',\r\n        attrs\r\n    };\r\n}\r\nfunction getLanguageIdFromLangAttr(languageIdFromType) {\r\n    if (languageIdFromType === 'jade') {\r\n        languageIdFromType = 'pug';\r\n    }\r\n    if (languageIdFromType === 'ts') {\r\n        languageIdFromType = 'typescript';\r\n    }\r\n    return languageIdFromType;\r\n}\r\n//# sourceMappingURL=vueDocumentRegionParser.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlScanner.ts","/Users/yoyo930021/git/vetur/server/src/utils/strings.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/embeddedSupport.ts"],"map":"{\"version\":3,\"file\":\"vueDocumentRegionParser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/embeddedSupport/vueDocumentRegionParser.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/embeddedSupport/vueDocumentRegionParser.d.ts","writeByteOrderMark":false,"text":"import type { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { LanguageId } from './embeddedSupport';\r\nexport type RegionType = 'template' | 'script' | 'style' | 'custom';\r\nexport type RegionAttrKey = 'setup' | 'module' | 'scoped' | 'lang';\r\nexport type RegionAttrs = Partial<Record<RegionAttrKey, boolean | string>> & Partial<Record<string, boolean | string>>;\r\nexport interface EmbeddedRegion {\r\n    languageId: LanguageId;\r\n    start: number;\r\n    end: number;\r\n    type: RegionType;\r\n    attrs: RegionAttrs;\r\n}\r\nexport declare function parseVueDocumentRegions(document: TextDocument): {\r\n    regions: EmbeddedRegion[];\r\n    importedScripts: string[];\r\n};\r\n"}}
