{"code":"import { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { parseVueDocumentRegions } from './vueDocumentRegionParser';\r\nconst defaultLanguageIdForBlockTypes = {\r\n    template: 'vue-html',\r\n    script: 'javascript',\r\n    style: 'css'\r\n};\r\nexport function getVueDocumentRegions(document) {\r\n    const { regions, importedScripts } = parseVueDocumentRegions(document);\r\n    return {\r\n        getSingleLanguageDocument: (languageId) => getSingleLanguageDocument(document, regions, languageId),\r\n        getSingleTypeDocument: (type) => getSingleTypeDocument(document, regions, type),\r\n        getLanguageRangesOfType: (type) => getLanguageRangesOfType(document, regions, type),\r\n        getAllLanguageRanges: () => getAllLanguageRanges(document, regions),\r\n        getLanguageAtPosition: (position) => getLanguageAtPosition(document, regions, position),\r\n        getLanguageRangeAtPosition: (position) => getLanguageRangeAtPosition(document, regions, position),\r\n        getImportedScripts: () => importedScripts\r\n    };\r\n}\r\nfunction getAllLanguageRanges(document, regions) {\r\n    return regions.map(r => {\r\n        return {\r\n            languageId: r.languageId,\r\n            start: document.positionAt(r.start),\r\n            end: document.positionAt(r.end),\r\n            attrs: r.attrs\r\n        };\r\n    });\r\n}\r\nfunction getLanguageAtPosition(document, regions, position) {\r\n    const offset = document.offsetAt(position);\r\n    for (const region of regions) {\r\n        if (region.start <= offset) {\r\n            if (offset <= region.end) {\r\n                return region.languageId;\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return 'vue';\r\n}\r\nfunction getLanguageRangeAtPosition(document, regions, position) {\r\n    const offset = document.offsetAt(position);\r\n    for (const region of regions) {\r\n        if (region.start <= offset) {\r\n            if (offset <= region.end) {\r\n                return {\r\n                    start: document.positionAt(region.start),\r\n                    end: document.positionAt(region.end),\r\n                    languageId: region.languageId,\r\n                    attrs: region.attrs\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            break;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexport function getSingleLanguageDocument(document, regions, languageId) {\r\n    const oldContent = document.getText();\r\n    let newContent = oldContent\r\n        .split('\\n')\r\n        .map(line => ' '.repeat(line.length))\r\n        .join('\\n');\r\n    for (const r of regions) {\r\n        if (r.languageId === languageId) {\r\n            newContent = newContent.slice(0, r.start) + oldContent.slice(r.start, r.end) + newContent.slice(r.end);\r\n        }\r\n    }\r\n    return TextDocument.create(document.uri, languageId, document.version, newContent);\r\n}\r\nexport function getSingleTypeDocument(document, regions, type) {\r\n    const oldContent = document.getText();\r\n    let newContent = oldContent\r\n        .split('\\n')\r\n        .map(line => ' '.repeat(line.length))\r\n        .join('\\n');\r\n    let langId = defaultLanguageIdForBlockTypes[type];\r\n    for (const r of regions) {\r\n        if (r.type === type) {\r\n            newContent = newContent.slice(0, r.start) + oldContent.slice(r.start, r.end) + newContent.slice(r.end);\r\n            langId = r.languageId;\r\n        }\r\n    }\r\n    if (type === 'script' && newContent.trim().length === 0) {\r\n        newContent = 'export default {};';\r\n    }\r\n    return TextDocument.create(document.uri, langId, document.version, newContent);\r\n}\r\nexport function getLanguageRangesOfType(document, regions, type) {\r\n    const result = [];\r\n    for (const r of regions) {\r\n        if (r.type === type) {\r\n            result.push({\r\n                start: document.positionAt(r.start),\r\n                end: document.positionAt(r.end),\r\n                languageId: r.languageId,\r\n                attrs: r.attrs\r\n            });\r\n        }\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=embeddedSupport.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/src/embeddedSupport/vueDocumentRegionParser.ts"],"map":"{\"version\":3,\"file\":\"embeddedSupport.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/embeddedSupport/embeddedSupport.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/embeddedSupport/embeddedSupport.d.ts","writeByteOrderMark":false,"text":"import { Position, Range } from 'vscode-languageserver-types';\r\nimport { TextDocument } from 'vscode-languageserver-textdocument';\r\nimport { EmbeddedRegion, RegionAttrs } from './vueDocumentRegionParser';\r\nexport type LanguageId = 'vue' | 'vue-html' | 'pug' | 'css' | 'postcss' | 'scss' | 'sass' | 'less' | 'stylus' | 'javascript' | 'typescript' | 'tsx' | 'unknown';\r\nexport interface LanguageRange extends Range {\r\n    languageId: LanguageId;\r\n    attrs: RegionAttrs;\r\n}\r\nexport interface VueDocumentRegions {\r\n    /**\r\n     * Get a document where all regions of `languageId` is preserved\r\n     * Whereas other regions are replaced with whitespaces\r\n     */\r\n    getSingleLanguageDocument(languageId: LanguageId): TextDocument;\r\n    /**\r\n     * Get a document where all regions of `type` RegionType is preserved\r\n     * Whereas other regions are replaced with whitespaces\r\n     */\r\n    getSingleTypeDocument(type: RegionType): TextDocument;\r\n    /**\r\n     * Get a list of ranges that has `RegionType`\r\n     */\r\n    getLanguageRangesOfType(type: RegionType): LanguageRange[];\r\n    /**\r\n     * Get all language ranges inside document\r\n     */\r\n    getAllLanguageRanges(): LanguageRange[];\r\n    /**\r\n     * Get language for determining\r\n     */\r\n    getLanguageAtPosition(position: Position): LanguageId;\r\n    getLanguageRangeAtPosition(position: Position): LanguageRange | null;\r\n    getImportedScripts(): string[];\r\n}\r\ntype RegionType = 'template' | 'script' | 'style' | 'custom';\r\nexport declare function getVueDocumentRegions(document: TextDocument): VueDocumentRegions;\r\nexport declare function getSingleLanguageDocument(document: TextDocument, regions: EmbeddedRegion[], languageId: LanguageId): TextDocument;\r\nexport declare function getSingleTypeDocument(document: TextDocument, regions: EmbeddedRegion[], type: RegionType): TextDocument;\r\nexport declare function getLanguageRangesOfType(document: TextDocument, regions: EmbeddedRegion[], type: RegionType): LanguageRange[];\r\nexport {};\r\n"}}
