{"code":"import { kebabCase } from 'lodash';\r\n// Note: cannot items more than 10 for lexical order\r\n// smaller enum value means higher priority\r\nexport var TagProviderPriority;\r\n(function (TagProviderPriority) {\r\n    TagProviderPriority[TagProviderPriority[\"UserCode\"] = 0] = \"UserCode\";\r\n    TagProviderPriority[TagProviderPriority[\"Library\"] = 1] = \"Library\";\r\n    TagProviderPriority[TagProviderPriority[\"Framework\"] = 2] = \"Framework\";\r\n    TagProviderPriority[TagProviderPriority[\"Platform\"] = 3] = \"Platform\";\r\n})(TagProviderPriority || (TagProviderPriority = {}));\r\nexport class HTMLTagSpecification {\r\n    constructor(documentation, attributes = []) {\r\n        this.documentation = documentation;\r\n        this.attributes = attributes;\r\n    }\r\n}\r\nexport function getSameTagInSet(tagSet, tag) {\r\n    var _a, _b;\r\n    return (_b = (_a = tagSet[tag]) !== null && _a !== void 0 ? _a : tagSet[tag.toLowerCase()]) !== null && _b !== void 0 ? _b : tagSet[kebabCase(tag)];\r\n}\r\nexport function collectTagsDefault(collector, tagSet) {\r\n    for (const tag in tagSet) {\r\n        collector(tag, tagSet[tag].documentation);\r\n    }\r\n}\r\nexport function collectAttributesDefault(tag, collector, tagSet, globalAttributes) {\r\n    if (tag) {\r\n        const tags = getSameTagInSet(tagSet, tag);\r\n        if (tags) {\r\n            const attributes = tags.attributes;\r\n            for (const attr of attributes) {\r\n                collector(attr.label, attr.type, attr.documentation);\r\n            }\r\n        }\r\n    }\r\n    globalAttributes.forEach(attr => {\r\n        collector(attr.label, attr.type, attr.documentation);\r\n    });\r\n}\r\nexport function collectValuesDefault(tag, attribute, collector, tagSet, globalAttributes, valueSets) {\r\n    function processAttributes(attributes) {\r\n        for (const attr of attributes) {\r\n            const label = attr.label;\r\n            if (label !== attribute || !attr.type) {\r\n                continue;\r\n            }\r\n            const typeInfo = attr.type;\r\n            if (typeInfo === 'v') {\r\n                collector(attribute);\r\n            }\r\n            else {\r\n                const values = valueSets[typeInfo];\r\n                if (values) {\r\n                    values.forEach(collector);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (tag) {\r\n        const tags = getSameTagInSet(tagSet, tag);\r\n        if (tags) {\r\n            const attributes = tags.attributes;\r\n            if (attributes) {\r\n                processAttributes(attributes);\r\n            }\r\n        }\r\n    }\r\n    processAttributes(globalAttributes);\r\n}\r\nexport function genAttribute(label, type, documentation) {\r\n    return { label, type, documentation };\r\n}\r\n//# sourceMappingURL=common.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts","/Users/yoyo930021/git/vetur/server/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"common.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/template/tagProviders/common.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/tagProviders/common.d.ts","writeByteOrderMark":false,"text":"import { MarkupContent } from 'vscode-languageserver-types';\r\ninterface TagCollector {\r\n    (tag: string, documentation: string | MarkupContent): void;\r\n}\r\nexport interface Attribute {\r\n    label: string;\r\n    type?: string;\r\n    documentation?: string | MarkupContent;\r\n}\r\nexport interface AttributeCollector {\r\n    (attribute: string, type?: string, documentation?: string | MarkupContent): void;\r\n}\r\ninterface StandaloneAttribute {\r\n    label: string;\r\n    type?: string;\r\n    documentation?: string | MarkupContent;\r\n}\r\nexport declare enum TagProviderPriority {\r\n    UserCode = 0,\r\n    Library = 1,\r\n    Framework = 2,\r\n    Platform = 3\r\n}\r\nexport interface IHTMLTagProvider {\r\n    getId(): string;\r\n    collectTags(collector: TagCollector): void;\r\n    collectAttributes(tag: string, collector: AttributeCollector): void;\r\n    collectValues(tag: string, attribute: string, collector: (value: string) => void): void;\r\n    readonly priority: TagProviderPriority;\r\n}\r\nexport interface ITagSet {\r\n    [tag: string]: HTMLTagSpecification;\r\n}\r\nexport declare class HTMLTagSpecification {\r\n    documentation: string | MarkupContent;\r\n    attributes: Attribute[];\r\n    constructor(documentation: string | MarkupContent, attributes?: Attribute[]);\r\n}\r\nexport interface IValueSets {\r\n    [tag: string]: string[];\r\n}\r\nexport declare function getSameTagInSet<T>(tagSet: Record<string, T>, tag: string): T | undefined;\r\nexport declare function collectTagsDefault(collector: TagCollector, tagSet: ITagSet): void;\r\nexport declare function collectAttributesDefault(tag: string, collector: AttributeCollector, tagSet: ITagSet, globalAttributes: StandaloneAttribute[]): void;\r\nexport declare function collectValuesDefault(tag: string, attribute: string, collector: (value: string) => void, tagSet: ITagSet, globalAttributes: StandaloneAttribute[], valueSets: IValueSets): void;\r\nexport declare function genAttribute(label: string, type?: string, documentation?: string | MarkupContent): Attribute;\r\nexport {};\r\n"}}
