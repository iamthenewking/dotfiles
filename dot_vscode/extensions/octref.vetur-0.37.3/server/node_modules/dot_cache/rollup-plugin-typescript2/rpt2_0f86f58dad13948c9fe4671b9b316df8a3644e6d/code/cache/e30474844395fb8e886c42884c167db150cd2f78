{"code":"function genModifier(label, documentation) {\r\n    return { label, documentation };\r\n}\r\nconst eventModifiers = [\r\n    genModifier('stop', 'The event propagation will be stopped.'),\r\n    genModifier('prevent', 'The event will no longer perform default action.'),\r\n    genModifier('capture', 'Use capture mode when adding the event listener.'),\r\n    genModifier('self', 'Only trigger handler if `event.target` is the element itself.'),\r\n    genModifier('once', 'The event will be triggered at most once.'),\r\n    genModifier('passive', \"Indicates that the event listener will never call `preventDefault`. Same as `addEventListener`'s `passive` option.\"),\r\n    genModifier('native', 'There may be times when you want to listen directly to a native event on the root element of a component. In these cases, you can use the `.native` modifier.')\r\n];\r\nconst keyModifiers = [\r\n    genModifier('enter', 'Captures the <Enter> key with keycode 13.'),\r\n    genModifier('tab', 'Captures the <Tab> key with keycode 9.'),\r\n    genModifier('delete', 'captures both <Delete> and <Backspace> keys.'),\r\n    genModifier('esc', 'Captures the <Escape> key with keycode 27.'),\r\n    genModifier('space', 'Captures the <Space> key with keycode 32.'),\r\n    genModifier('up', 'Captures the <ArrowUp> key with keycode 38.'),\r\n    genModifier('down', 'Captures the <ArrowDown> key with keycode 40.'),\r\n    genModifier('left', 'Captures the <ArrowLeft> key with keycode 37.'),\r\n    genModifier('right', 'Captures the <ArrowRight> key with keycode 39.')\r\n];\r\nconst mouseModifiers = [\r\n    genModifier('left', 'Triggers mouse event when \"left\" mouse button is clicked.'),\r\n    genModifier('right', 'Triggers mouse event when \"right\" mouse button is clicked.'),\r\n    genModifier('middle', 'Triggers mouse event when \"middle\" mouse button is clicked.')\r\n];\r\nconst systemModifiers = [\r\n    genModifier('ctrl', 'Triggers mouse or keyboard event when <Control> is pressed.'),\r\n    genModifier('alt', 'Triggers mouse or keyboard event when <Alt> is pressed.'),\r\n    genModifier('shift', 'Triggers mouse or keyboard event when <Shift> is pressed.'),\r\n    genModifier('meta', 'Triggers mouse or keyboard event when <Meta> is pressed.'),\r\n    genModifier('exact', 'The `.exact` modifier allows control of the exact combination of system modifiers needed to trigger an event.')\r\n];\r\nconst propsModifiers = [genModifier('sync')];\r\nconst vModelModifiers = [\r\n    genModifier('lazy', 'By default, `v-model` syncs the input with the data after each input event. You can add the `lazy` modifier to instead sync after change events'),\r\n    genModifier('number', 'If you want user input to be automatically typecast as a number, you can add the `number` modifier to your `v-model` managed inputs.'),\r\n    genModifier('trim', 'If you want whitespace from user input to be trimmed automatically, you can add the `trim` modifier to your `v-model`-managed inputs.')\r\n];\r\nexport function getModifierProvider() {\r\n    return {\r\n        eventModifiers: {\r\n            items: eventModifiers,\r\n            priority: 1\r\n        },\r\n        keyModifiers: {\r\n            items: keyModifiers,\r\n            priority: 2\r\n        },\r\n        mouseModifiers: {\r\n            items: mouseModifiers,\r\n            priority: 2\r\n        },\r\n        systemModifiers: {\r\n            items: systemModifiers,\r\n            priority: 3\r\n        },\r\n        propsModifiers: {\r\n            items: propsModifiers,\r\n            priority: 1\r\n        },\r\n        vModelModifiers: {\r\n            items: vModelModifiers,\r\n            priority: 1\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=modifierProvider.js.map","references":["/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-types/lib/umd/main.d.ts"],"map":"{\"version\":3,\"file\":\"modifierProvider.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/modes/template/modifierProvider.ts\"],\"names\":[],\"mappings\":\"AAQA,SAAS,WAAW,CAAC,KAAa,EAAE,aAAsC;IACxE,OAAO,EAAE,KAAK,EAAE,aAAa,EAAE,CAAC;AAClC,CAAC;AAED,MAAM,cAAc,GAAG;IACrB,WAAW,CAAC,MAAM,EAAE,wCAAwC,CAAC;IAC7D,WAAW,CAAC,SAAS,EAAE,kDAAkD,CAAC;IAC1E,WAAW,CAAC,SAAS,EAAE,kDAAkD,CAAC;IAC1E,WAAW,CAAC,MAAM,EAAE,+DAA+D,CAAC;IACpF,WAAW,CAAC,MAAM,EAAE,2CAA2C,CAAC;IAChE,WAAW,CACT,SAAS,EACT,oHAAoH,CACrH;IACD,WAAW,CACT,QAAQ,EACR,+JAA+J,CAChK;CACF,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,WAAW,CAAC,OAAO,EAAE,2CAA2C,CAAC;IACjE,WAAW,CAAC,KAAK,EAAE,wCAAwC,CAAC;IAC5D,WAAW,CAAC,QAAQ,EAAE,8CAA8C,CAAC;IACrE,WAAW,CAAC,KAAK,EAAE,4CAA4C,CAAC;IAChE,WAAW,CAAC,OAAO,EAAE,2CAA2C,CAAC;IACjE,WAAW,CAAC,IAAI,EAAE,6CAA6C,CAAC;IAChE,WAAW,CAAC,MAAM,EAAE,+CAA+C,CAAC;IACpE,WAAW,CAAC,MAAM,EAAE,+CAA+C,CAAC;IACpE,WAAW,CAAC,OAAO,EAAE,gDAAgD,CAAC;CACvE,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,WAAW,CAAC,MAAM,EAAE,2DAA2D,CAAC;IAChF,WAAW,CAAC,OAAO,EAAE,4DAA4D,CAAC;IAClF,WAAW,CAAC,QAAQ,EAAE,6DAA6D,CAAC;CACrF,CAAC;AAEF,MAAM,eAAe,GAAG;IACtB,WAAW,CAAC,MAAM,EAAE,6DAA6D,CAAC;IAClF,WAAW,CAAC,KAAK,EAAE,yDAAyD,CAAC;IAC7E,WAAW,CAAC,OAAO,EAAE,2DAA2D,CAAC;IACjF,WAAW,CAAC,MAAM,EAAE,0DAA0D,CAAC;IAC/E,WAAW,CACT,OAAO,EACP,+GAA+G,CAChH;CACF,CAAC;AAEF,MAAM,cAAc,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;AAE7C,MAAM,eAAe,GAAG;IACtB,WAAW,CACT,MAAM,EACN,iJAAiJ,CAClJ;IACD,WAAW,CACT,QAAQ,EACR,sIAAsI,CACvI;IACD,WAAW,CACT,MAAM,EACN,uIAAuI,CACxI;CACF,CAAC;AAEF,MAAM,UAAU,mBAAmB;IACjC,OAAO;QACL,cAAc,EAAE;YACd,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,CAAC;SACZ;QACD,YAAY,EAAE;YACZ,KAAK,EAAE,YAAY;YACnB,QAAQ,EAAE,CAAC;SACZ;QACD,cAAc,EAAE;YACd,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,CAAC;SACZ;QACD,eAAe,EAAE;YACf,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,CAAC;SACZ;QACD,cAAc,EAAE;YACd,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,CAAC;SACZ;QACD,eAAe,EAAE;YACf,KAAK,EAAE,eAAe;YACtB,QAAQ,EAAE,CAAC;SACZ;KACF,CAAC;AACJ,CAAC\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/modifierProvider.d.ts","writeByteOrderMark":false,"text":"import { MarkupContent } from 'vscode-languageserver-types';\r\nexport interface Modifier {\r\n    label: string;\r\n    documentation?: string | MarkupContent;\r\n}\r\nexport declare function getModifierProvider(): {\r\n    eventModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n    keyModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n    mouseModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n    systemModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n    propsModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n    vModelModifiers: {\r\n        items: {\r\n            label: string;\r\n            documentation: string | MarkupContent | undefined;\r\n        }[];\r\n        priority: number;\r\n    };\r\n};\r\n"}}
