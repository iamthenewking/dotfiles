{"code":"import { HtmlTokenType, createScanner } from './htmlScanner';\r\nimport { isVoidElement } from '../tagProviders/htmlTags';\r\nexport class Node {\r\n    get attributeNames() {\r\n        if (this.attributes) {\r\n            return Object.keys(this.attributes);\r\n        }\r\n        return [];\r\n    }\r\n    constructor(start, end, children, parent) {\r\n        this.start = start;\r\n        this.end = end;\r\n        this.children = children;\r\n        this.parent = parent;\r\n        this.isInterpolation = false;\r\n    }\r\n    isSameTag(tagInLowerCase) {\r\n        return (this.tag &&\r\n            tagInLowerCase &&\r\n            this.tag.length === tagInLowerCase.length &&\r\n            this.tag.toLowerCase() === tagInLowerCase);\r\n    }\r\n    get firstChild() {\r\n        return this.children[0];\r\n    }\r\n    get lastChild() {\r\n        return this.children.length ? this.children[this.children.length - 1] : void 0;\r\n    }\r\n    findNodeBefore(offset) {\r\n        const idx = findFirst(this.children, c => offset <= c.start) - 1;\r\n        if (idx >= 0) {\r\n            const child = this.children[idx];\r\n            if (offset > child.start) {\r\n                if (offset < child.end) {\r\n                    return child.findNodeBefore(offset);\r\n                }\r\n                const lastChild = child.lastChild;\r\n                if (lastChild && lastChild.end === child.end) {\r\n                    return child.findNodeBefore(offset);\r\n                }\r\n                return child;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    findNodeAt(offset) {\r\n        const idx = findFirst(this.children, c => offset <= c.start) - 1;\r\n        if (idx >= 0) {\r\n            const child = this.children[idx];\r\n            if (offset > child.start && offset <= child.end) {\r\n                return child.findNodeAt(offset);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\nexport function parse(text) {\r\n    const scanner = createScanner(text);\r\n    const htmlDocument = new Node(0, text.length, [], null);\r\n    let curr = htmlDocument;\r\n    let endTagStart = -1;\r\n    let pendingAttribute = '';\r\n    let token = scanner.scan();\r\n    let attributes = {};\r\n    while (token !== HtmlTokenType.EOS) {\r\n        switch (token) {\r\n            case HtmlTokenType.StartTagOpen:\r\n                const child = new Node(scanner.getTokenOffset(), text.length, [], curr);\r\n                curr.children.push(child);\r\n                curr = child;\r\n                break;\r\n            case HtmlTokenType.StartTag:\r\n                curr.tag = scanner.getTokenText();\r\n                break;\r\n            case HtmlTokenType.StartTagClose:\r\n                curr.end = scanner.getTokenEnd(); // might be later set to end tag position\r\n                if (isVoidElement(curr.tag) && curr !== htmlDocument) {\r\n                    curr.closed = true;\r\n                    curr = curr.parent;\r\n                }\r\n                break;\r\n            case HtmlTokenType.EndTagOpen:\r\n                endTagStart = scanner.getTokenOffset();\r\n                break;\r\n            case HtmlTokenType.EndTag:\r\n                const closeTag = scanner.getTokenText().toLowerCase();\r\n                while (!curr.isSameTag(closeTag) && curr !== htmlDocument) {\r\n                    curr.end = endTagStart;\r\n                    curr.closed = false;\r\n                    curr = curr.parent;\r\n                }\r\n                if (curr !== htmlDocument) {\r\n                    curr.closed = true;\r\n                    curr.endTagStart = endTagStart;\r\n                }\r\n                break;\r\n            case HtmlTokenType.StartTagSelfClose:\r\n                if (curr !== htmlDocument) {\r\n                    curr.closed = true;\r\n                    curr.end = scanner.getTokenEnd();\r\n                    curr = curr.parent;\r\n                }\r\n                break;\r\n            case HtmlTokenType.EndTagClose:\r\n                if (curr !== htmlDocument) {\r\n                    curr.end = scanner.getTokenEnd();\r\n                    curr = curr.parent;\r\n                }\r\n                break;\r\n            case HtmlTokenType.StartInterpolation: {\r\n                const child = new Node(scanner.getTokenOffset(), text.length, [], curr);\r\n                child.isInterpolation = true;\r\n                curr.children.push(child);\r\n                curr = child;\r\n                break;\r\n            }\r\n            case HtmlTokenType.EndInterpolation:\r\n                curr.end = scanner.getTokenEnd();\r\n                curr.closed = true;\r\n                curr = curr.parent;\r\n                break;\r\n            case HtmlTokenType.AttributeName:\r\n                pendingAttribute = scanner.getTokenText();\r\n                attributes = curr.attributes;\r\n                if (!attributes) {\r\n                    curr.attributes = attributes = {};\r\n                }\r\n                attributes[pendingAttribute] = ''; // Support valueless attributes such as 'checked'\r\n                break;\r\n            case HtmlTokenType.AttributeValue:\r\n                const value = scanner.getTokenText();\r\n                if (attributes && pendingAttribute) {\r\n                    attributes[pendingAttribute] = value;\r\n                    pendingAttribute = '';\r\n                }\r\n                break;\r\n        }\r\n        token = scanner.scan();\r\n    }\r\n    while (curr !== htmlDocument) {\r\n        curr.end = text.length;\r\n        curr.closed = false;\r\n        curr = curr.parent;\r\n    }\r\n    return {\r\n        roots: htmlDocument.children,\r\n        findNodeBefore: htmlDocument.findNodeBefore.bind(htmlDocument),\r\n        findNodeAt: htmlDocument.findNodeAt.bind(htmlDocument)\r\n    };\r\n}\r\nexport function parseHTMLDocument(document) {\r\n    return parse(document.getText());\r\n}\r\n/**\r\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\r\n * are located before all elements where p(x) is true.\r\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\r\n */\r\nfunction findFirst(array, p) {\r\n    let low = 0, high = array.length;\r\n    if (high === 0) {\r\n        return 0; // no children\r\n    }\r\n    while (low < high) {\r\n        const mid = Math.floor((low + high) / 2);\r\n        if (p(array[mid])) {\r\n            high = mid;\r\n        }\r\n        else {\r\n            low = mid + 1;\r\n        }\r\n    }\r\n    return low;\r\n}\r\n//# sourceMappingURL=htmlParser.js.map","references":["/Users/yoyo930021/git/vetur/server/src/modes/template/parser/htmlScanner.ts","/Users/yoyo930021/git/vetur/server/src/modes/template/tagProviders/htmlTags.ts","/Users/yoyo930021/git/vetur/server/node_modules/vscode-languageserver-textdocument/lib/umd/main.d.ts"],"map":"{\"version\":3,\"file\":\"htmlParser.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/modes/template/parser/htmlParser.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/yoyo930021/git/vetur/server/node_modules/.cache/rollup-plugin-typescript2/placeholder/modes/template/parser/htmlParser.d.ts","writeByteOrderMark":false,"text":"import type { TextDocument } from 'vscode-languageserver-textdocument';\r\nexport declare class Node {\r\n    start: number;\r\n    end: number;\r\n    children: Node[];\r\n    parent: Node;\r\n    tag?: string;\r\n    closed?: boolean;\r\n    endTagStart?: number;\r\n    isInterpolation: boolean;\r\n    attributes?: {\r\n        [name: string]: string;\r\n    };\r\n    get attributeNames(): string[];\r\n    constructor(start: number, end: number, children: Node[], parent: Node);\r\n    isSameTag(tagInLowerCase: string): boolean | \"\" | undefined;\r\n    get firstChild(): Node;\r\n    get lastChild(): Node | undefined;\r\n    findNodeBefore(offset: number): Node;\r\n    findNodeAt(offset: number): Node;\r\n}\r\nexport interface HTMLDocument {\r\n    roots: Node[];\r\n    findNodeBefore(offset: number): Node;\r\n    findNodeAt(offset: number): Node;\r\n}\r\nexport declare function parse(text: string): HTMLDocument;\r\nexport declare function parseHTMLDocument(document: TextDocument): HTMLDocument;\r\n"}}
